{"version":3,"sources":["node_modules/@angular/common/fesm2022/location.mjs","node_modules/@angular/common/fesm2022/common_module.mjs","node_modules/@angular/common/fesm2022/xhr.mjs","node_modules/@angular/common/fesm2022/common.mjs","node_modules/@angular/common/fesm2022/module.mjs","node_modules/@angular/common/fesm2022/http.mjs","node_modules/@primeuix/utils/dist/classnames/index.mjs","node_modules/@primeuix/utils/dist/dom/index.mjs","node_modules/@primeuix/utils/dist/eventbus/index.mjs","node_modules/@primeuix/utils/dist/object/index.mjs","node_modules/@primeuix/utils/dist/uuid/index.mjs","node_modules/primeng/fesm2022/primeng-api.mjs","node_modules/@primeuix/styled/dist/index.mjs","node_modules/primeng/fesm2022/primeng-usestyle.mjs","node_modules/primeng/fesm2022/primeng-base.mjs","node_modules/primeng/fesm2022/primeng-config.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/primeng/fesm2022/primeng-basecomponent.mjs","node_modules/primeng/fesm2022/primeng-ripple.mjs","node_modules/primeng/fesm2022/primeng-basemodelholder.mjs","node_modules/primeng/fesm2022/primeng-baseeditableholder.mjs","node_modules/primeng/fesm2022/primeng-togglebutton.mjs","node_modules/primeng/fesm2022/primeng-selectbutton.mjs","node_modules/primeng/fesm2022/primeng-badge.mjs","node_modules/primeng/fesm2022/primeng-utils.mjs","node_modules/primeng/fesm2022/primeng-fluid.mjs","node_modules/primeng/fesm2022/primeng-dom.mjs","node_modules/primeng/fesm2022/primeng-autofocus.mjs","node_modules/primeng/fesm2022/primeng-icons-baseicon.mjs","node_modules/primeng/fesm2022/primeng-icons-check.mjs","node_modules/primeng/fesm2022/primeng-icons-exclamationtriangle.mjs","node_modules/primeng/fesm2022/primeng-icons-infocircle.mjs","node_modules/primeng/fesm2022/primeng-icons-minus.mjs","node_modules/primeng/fesm2022/primeng-icons-spinner.mjs","node_modules/primeng/fesm2022/primeng-icons-times.mjs","node_modules/primeng/fesm2022/primeng-icons-timescircle.mjs","node_modules/primeng/fesm2022/primeng-button.mjs","node_modules/@angular/animations/fesm2022/animations.mjs","node_modules/primeng/fesm2022/primeng-toast.mjs","node_modules/primeng/fesm2022/primeng-checkbox.mjs","node_modules/primeng/fesm2022/primeng-inputtext.mjs","node_modules/primeng/fesm2022/primeng-baseinput.mjs"],"sourcesContent":["/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, InjectionToken, DOCUMENT, Optional, Inject, ɵɵinject as __inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nlet _DOM = null;\nfunction getDOM() {\n  return _DOM;\n}\nfunction setRootDomAdapter(adapter) {\n  _DOM ??= adapter;\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass DomAdapter {}\n\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM APIs, which allows the Router to be\n * platform-agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that Angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-server` provides\n * one suitable for use with server-side rendering.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM APIs like pushState, popState, etc.\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link /api/router/Router Router} in order to navigate between routes. Since all interactions between\n * {@link /api/router/Router Router} /\n * {@link Location} / {@link LocationStrategy} and DOM APIs flow through the `PlatformLocation`\n * class, they are all platform-agnostic.\n *\n * @publicApi\n */\nclass PlatformLocation {\n  historyGo(relativePosition) {\n    throw new Error(ngDevMode ? 'Not implemented' : '');\n  }\n  static ɵfac = function PlatformLocation_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PlatformLocation)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PlatformLocation,\n    factory: () => (() => inject(BrowserPlatformLocation))(),\n    providedIn: 'platform'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlatformLocation, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform',\n      useFactory: () => inject(BrowserPlatformLocation)\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nconst LOCATION_INITIALIZED = new InjectionToken(ngDevMode ? 'Location Initialized' : '');\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * @publicApi\n */\nclass BrowserPlatformLocation extends PlatformLocation {\n  _location;\n  _history;\n  _doc = inject(DOCUMENT);\n  constructor() {\n    super();\n    this._location = window.location;\n    this._history = window.history;\n  }\n  getBaseHrefFromDOM() {\n    return getDOM().getBaseHref(this._doc);\n  }\n  onPopState(fn) {\n    const window = getDOM().getGlobalEventTarget(this._doc, 'window');\n    window.addEventListener('popstate', fn, false);\n    return () => window.removeEventListener('popstate', fn);\n  }\n  onHashChange(fn) {\n    const window = getDOM().getGlobalEventTarget(this._doc, 'window');\n    window.addEventListener('hashchange', fn, false);\n    return () => window.removeEventListener('hashchange', fn);\n  }\n  get href() {\n    return this._location.href;\n  }\n  get protocol() {\n    return this._location.protocol;\n  }\n  get hostname() {\n    return this._location.hostname;\n  }\n  get port() {\n    return this._location.port;\n  }\n  get pathname() {\n    return this._location.pathname;\n  }\n  get search() {\n    return this._location.search;\n  }\n  get hash() {\n    return this._location.hash;\n  }\n  set pathname(newPath) {\n    this._location.pathname = newPath;\n  }\n  pushState(state, title, url) {\n    this._history.pushState(state, title, url);\n  }\n  replaceState(state, title, url) {\n    this._history.replaceState(state, title, url);\n  }\n  forward() {\n    this._history.forward();\n  }\n  back() {\n    this._history.back();\n  }\n  historyGo(relativePosition = 0) {\n    this._history.go(relativePosition);\n  }\n  getState() {\n    return this._history.state;\n  }\n  static ɵfac = function BrowserPlatformLocation_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrowserPlatformLocation)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserPlatformLocation,\n    factory: () => (() => new BrowserPlatformLocation())(),\n    providedIn: 'platform'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserPlatformLocation, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform',\n      useFactory: () => new BrowserPlatformLocation()\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nfunction joinWithSlash(start, end) {\n  // If `start` is an empty string, return `end` as the result.\n  if (!start) return end;\n  // If `end` is an empty string, return `start` as the result.\n  if (!end) return start;\n  // If `start` ends with a slash, remove the leading slash from `end`.\n  if (start.endsWith('/')) {\n    return end.startsWith('/') ? start + end.slice(1) : start + end;\n  }\n  // If `start` doesn't end with a slash, add one if `end` doesn't start with a slash.\n  return end.startsWith('/') ? start + end : `${start}/${end}`;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nfunction stripTrailingSlash(url) {\n  // Find the index of the first occurrence of `#`, `?`, or the end of the string.\n  // This marks the start of the query string, fragment, or the end of the URL path.\n  const pathEndIdx = url.search(/#|\\?|$/);\n  // Check if the character before `pathEndIdx` is a trailing slash.\n  // If it is, remove the trailing slash and return the modified URL.\n  // Otherwise, return the URL as is.\n  return url[pathEndIdx - 1] === '/' ? url.slice(0, pathEndIdx - 1) + url.slice(pathEndIdx) : url;\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nfunction normalizeQueryParams(params) {\n  return params && params[0] !== '?' ? `?${params}` : params;\n}\n\n/**\n * Enables the `Location` service to read route state from the browser's URL.\n * Angular provides two strategies:\n * `HashLocationStrategy` and `PathLocationStrategy`.\n *\n * Applications should use the `Router` or `Location` services to\n * interact with application route state.\n *\n * For instance, `HashLocationStrategy` produces URLs like\n * <code class=\"no-auto-link\">http://example.com/#/foo</code>,\n * and `PathLocationStrategy` produces\n * <code class=\"no-auto-link\">http://example.com/foo</code> as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nclass LocationStrategy {\n  historyGo(relativePosition) {\n    throw new Error(ngDevMode ? 'Not implemented' : '');\n  }\n  static ɵfac = function LocationStrategy_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LocationStrategy)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LocationStrategy,\n    factory: () => (() => inject(PathLocationStrategy))(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocationStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(PathLocationStrategy)\n    }]\n  }], null, null);\n})();\n/**\n * A predefined DI token for the base href\n * to be used with the `PathLocationStrategy`.\n * The base href is the URL prefix that should be preserved when generating\n * and recognizing URLs.\n *\n * @usageNotes\n *\n * The following example shows how to use this token to configure the root app injector\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\n *\n * ```ts\n * import {NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nconst APP_BASE_HREF = new InjectionToken(ngDevMode ? 'appBaseHref' : '');\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you may provide a {@link APP_BASE_HREF}\n * or add a `<base href>` element to the document to override the default.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app/'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`. To ensure all relative URIs resolve correctly,\n * the `<base href>` and/or `APP_BASE_HREF` should end with a `/`.\n *\n * Similarly, if you add `<base href='/my/app/'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Note that when using `PathLocationStrategy`, neither the query nor\n * the fragment in the `<base href>` will be preserved, as outlined\n * by the [RFC](https://tools.ietf.org/html/rfc3986#section-5.2.2).\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nclass PathLocationStrategy extends LocationStrategy {\n  _platformLocation;\n  _baseHref;\n  _removeListenerFns = [];\n  constructor(_platformLocation, href) {\n    super();\n    this._platformLocation = _platformLocation;\n    this._baseHref = href ?? this._platformLocation.getBaseHrefFromDOM() ?? inject(DOCUMENT).location?.origin ?? '';\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    while (this._removeListenerFns.length) {\n      this._removeListenerFns.pop()();\n    }\n  }\n  onPopState(fn) {\n    this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\n  }\n  getBaseHref() {\n    return this._baseHref;\n  }\n  prepareExternalUrl(internal) {\n    return joinWithSlash(this._baseHref, internal);\n  }\n  path(includeHash = false) {\n    const pathname = this._platformLocation.pathname + normalizeQueryParams(this._platformLocation.search);\n    const hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n  pushState(state, title, url, queryParams) {\n    const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n  replaceState(state, title, url, queryParams) {\n    const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n  forward() {\n    this._platformLocation.forward();\n  }\n  back() {\n    this._platformLocation.back();\n  }\n  getState() {\n    return this._platformLocation.getState();\n  }\n  historyGo(relativePosition = 0) {\n    this._platformLocation.historyGo?.(relativePosition);\n  }\n  static ɵfac = function PathLocationStrategy_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PathLocationStrategy)(i0.ɵɵinject(PlatformLocation), i0.ɵɵinject(APP_BASE_HREF, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PathLocationStrategy,\n    factory: PathLocationStrategy.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PathLocationStrategy, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: PlatformLocation\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [APP_BASE_HREF]\n    }]\n  }], null);\n})();\n\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on the `LocationStrategy` used, `Location` persists\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use the `Router.navigate()` service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nclass Location {\n  /** @internal */\n  _subject = new Subject();\n  /** @internal */\n  _basePath;\n  /** @internal */\n  _locationStrategy;\n  /** @internal */\n  _urlChangeListeners = [];\n  /** @internal */\n  _urlChangeSubscription = null;\n  constructor(locationStrategy) {\n    this._locationStrategy = locationStrategy;\n    const baseHref = this._locationStrategy.getBaseHref();\n    // Note: This class's interaction with base HREF does not fully follow the rules\n    // outlined in the spec https://www.freesoft.org/CIE/RFC/1808/18.htm.\n    // Instead of trying to fix individual bugs with more and more code, we should\n    // investigate using the URL constructor and providing the base as a second\n    // argument.\n    // https://developer.mozilla.org/en-US/docs/Web/API/URL/URL#parameters\n    this._basePath = _stripOrigin(stripTrailingSlash(_stripIndexHtml(baseHref)));\n    this._locationStrategy.onPopState(ev => {\n      this._subject.next({\n        'url': this.path(true),\n        'pop': true,\n        'state': ev.state,\n        'type': ev.type\n      });\n    });\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    this._urlChangeSubscription?.unsubscribe();\n    this._urlChangeListeners = [];\n  }\n  /**\n   * Normalizes the URL path for this location.\n   *\n   * @param includeHash True to include an anchor fragment in the path.\n   *\n   * @returns The normalized URL path.\n   */\n  // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n  // removed.\n  path(includeHash = false) {\n    return this.normalize(this._locationStrategy.path(includeHash));\n  }\n  /**\n   * Reports the current state of the location history.\n   * @returns The current value of the `history.state` object.\n   */\n  getState() {\n    return this._locationStrategy.getState();\n  }\n  /**\n   * Normalizes the given path and compares to the current normalized path.\n   *\n   * @param path The given URL path.\n   * @param query Query parameters.\n   *\n   * @returns True if the given URL path is equal to the current normalized path, false\n   * otherwise.\n   */\n  isCurrentPathEqualTo(path, query = '') {\n    return this.path() == this.normalize(path + normalizeQueryParams(query));\n  }\n  /**\n   * Normalizes a URL path by stripping any trailing slashes.\n   *\n   * @param url String representing a URL.\n   *\n   * @returns The normalized URL string.\n   */\n  normalize(url) {\n    return Location.stripTrailingSlash(_stripBasePath(this._basePath, _stripIndexHtml(url)));\n  }\n  /**\n   * Normalizes an external URL path.\n   * If the given URL doesn't begin with a leading slash (`'/'`), adds one\n   * before normalizing. Adds a hash if `HashLocationStrategy` is\n   * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n   *\n   * @param url String representing a URL.\n   *\n   * @returns  A normalized platform-specific URL.\n   */\n  prepareExternalUrl(url) {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._locationStrategy.prepareExternalUrl(url);\n  }\n  // TODO: rename this method to pushState\n  /**\n   * Changes the browser's URL to a normalized version of a given URL, and pushes a\n   * new item onto the platform's history.\n   *\n   * @param path  URL path to normalize.\n   * @param query Query parameters.\n   * @param state Location history state.\n   *\n   */\n  go(path, query = '', state = null) {\n    this._locationStrategy.pushState(state, '', path, query);\n    this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n  }\n  /**\n   * Changes the browser's URL to a normalized version of the given URL, and replaces\n   * the top item on the platform's history stack.\n   *\n   * @param path  URL path to normalize.\n   * @param query Query parameters.\n   * @param state Location history state.\n   */\n  replaceState(path, query = '', state = null) {\n    this._locationStrategy.replaceState(state, '', path, query);\n    this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n  }\n  /**\n   * Navigates forward in the platform's history.\n   */\n  forward() {\n    this._locationStrategy.forward();\n  }\n  /**\n   * Navigates back in the platform's history.\n   */\n  back() {\n    this._locationStrategy.back();\n  }\n  /**\n   * Navigate to a specific page from session history, identified by its relative position to the\n   * current page.\n   *\n   * @param relativePosition  Position of the target page in the history relative to the current\n   *     page.\n   * A negative value moves backwards, a positive value moves forwards, e.g. `location.historyGo(2)`\n   * moves forward two pages and `location.historyGo(-2)` moves back two pages. When we try to go\n   * beyond what's stored in the history session, we stay in the current page. Same behaviour occurs\n   * when `relativePosition` equals 0.\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/History_API#Moving_to_a_specific_point_in_history\n   */\n  historyGo(relativePosition = 0) {\n    this._locationStrategy.historyGo?.(relativePosition);\n  }\n  /**\n   * Registers a URL change listener. Use to catch updates performed by the Angular\n   * framework that are not detectible through \"popstate\" or \"hashchange\" events.\n   *\n   * @param fn The change handler function, which take a URL and a location history state.\n   * @returns A function that, when executed, unregisters a URL change listener.\n   */\n  onUrlChange(fn) {\n    this._urlChangeListeners.push(fn);\n    this._urlChangeSubscription ??= this.subscribe(v => {\n      this._notifyUrlChangeListeners(v.url, v.state);\n    });\n    return () => {\n      const fnIndex = this._urlChangeListeners.indexOf(fn);\n      this._urlChangeListeners.splice(fnIndex, 1);\n      if (this._urlChangeListeners.length === 0) {\n        this._urlChangeSubscription?.unsubscribe();\n        this._urlChangeSubscription = null;\n      }\n    };\n  }\n  /** @internal */\n  _notifyUrlChangeListeners(url = '', state) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n  /**\n   * Subscribes to the platform's `popState` events.\n   *\n   * Note: `Location.go()` does not trigger the `popState` event in the browser. Use\n   * `Location.onUrlChange()` to subscribe to URL changes instead.\n   *\n   * @param value Event that is triggered when the state history changes.\n   * @param exception The exception to throw.\n   *\n   * @see [onpopstate](https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate)\n   *\n   * @returns Subscribed events.\n   */\n  subscribe(onNext, onThrow, onReturn) {\n    return this._subject.subscribe({\n      next: onNext,\n      error: onThrow ?? undefined,\n      complete: onReturn ?? undefined\n    });\n  }\n  /**\n   * Normalizes URL parameters by prepending with `?` if needed.\n   *\n   * @param  params String of URL parameters.\n   *\n   * @returns The normalized URL parameters string.\n   */\n  static normalizeQueryParams = normalizeQueryParams;\n  /**\n   * Joins two parts of a URL with a slash if needed.\n   *\n   * @param start  URL string\n   * @param end    URL string\n   *\n   *\n   * @returns The joined URL string.\n   */\n  static joinWithSlash = joinWithSlash;\n  /**\n   * Removes a trailing slash from a URL string if needed.\n   * Looks for the first occurrence of either `#`, `?`, or the end of the\n   * line as `/` characters and removes the trailing slash if one exists.\n   *\n   * @param url URL string.\n   *\n   * @returns The URL string, modified if needed.\n   */\n  static stripTrailingSlash = stripTrailingSlash;\n  static ɵfac = function Location_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Location)(i0.ɵɵinject(LocationStrategy));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Location,\n    factory: () => createLocation(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Location, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      // See #23917\n      useFactory: createLocation\n    }]\n  }], () => [{\n    type: LocationStrategy\n  }], null);\n})();\nfunction createLocation() {\n  return new Location(__inject(LocationStrategy));\n}\nfunction _stripBasePath(basePath, url) {\n  if (!basePath || !url.startsWith(basePath)) {\n    return url;\n  }\n  const strippedUrl = url.substring(basePath.length);\n  if (strippedUrl === '' || ['/', ';', '?', '#'].includes(strippedUrl[0])) {\n    return strippedUrl;\n  }\n  return url;\n}\nfunction _stripIndexHtml(url) {\n  return url.replace(/\\/index.html$/, '');\n}\nfunction _stripOrigin(baseHref) {\n  // DO NOT REFACTOR! Previously, this check looked like this:\n  // `/^(https?:)?\\/\\//.test(baseHref)`, but that resulted in\n  // syntactically incorrect code after Closure Compiler minification.\n  // This was likely caused by a bug in Closure Compiler, but\n  // for now, the check is rewritten to use `new RegExp` instead.\n  const isAbsoluteUrl = new RegExp('^(https?:)?//').test(baseHref);\n  if (isAbsoluteUrl) {\n    const [, pathname] = baseHref.split(/\\/\\/[^\\/]+/);\n    return pathname;\n  }\n  return baseHref;\n}\nexport { APP_BASE_HREF, BrowserPlatformLocation, DomAdapter, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation, getDOM, joinWithSlash, normalizeQueryParams, setRootDomAdapter };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, ɵfindLocaleData as _findLocaleData, ɵLocaleDataIndex as _LocaleDataIndex, ɵgetLocaleCurrencyCode as _getLocaleCurrencyCode, ɵgetLocalePluralCase as _getLocalePluralCase, ɵRuntimeError as _RuntimeError, ɵformatRuntimeError as _formatRuntimeError, LOCALE_ID, ɵstringify as _stringify, Directive, Input, createNgModule, NgModuleRef, Host, Attribute, RendererStyleFlags2, inject, ɵINTERNAL_APPLICATION_ERROR_HANDLER as _INTERNAL_APPLICATION_ERROR_HANDLER, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, Pipe, untracked, InjectionToken, DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\nimport { LocationStrategy, joinWithSlash, normalizeQueryParams, PlatformLocation, APP_BASE_HREF } from './location.mjs';\n\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nclass HashLocationStrategy extends LocationStrategy {\n  _platformLocation;\n  _baseHref = '';\n  _removeListenerFns = [];\n  constructor(_platformLocation, _baseHref) {\n    super();\n    this._platformLocation = _platformLocation;\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    while (this._removeListenerFns.length) {\n      this._removeListenerFns.pop()();\n    }\n  }\n  onPopState(fn) {\n    this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\n  }\n  getBaseHref() {\n    return this._baseHref;\n  }\n  path(includeHash = false) {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    const path = this._platformLocation.hash ?? '#';\n    return path.length > 0 ? path.substring(1) : path;\n  }\n  prepareExternalUrl(internal) {\n    const url = joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? '#' + url : url;\n  }\n  pushState(state, title, path, queryParams) {\n    const url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams)) || this._platformLocation.pathname;\n    this._platformLocation.pushState(state, title, url);\n  }\n  replaceState(state, title, path, queryParams) {\n    const url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams)) || this._platformLocation.pathname;\n    this._platformLocation.replaceState(state, title, url);\n  }\n  forward() {\n    this._platformLocation.forward();\n  }\n  back() {\n    this._platformLocation.back();\n  }\n  getState() {\n    return this._platformLocation.getState();\n  }\n  historyGo(relativePosition = 0) {\n    this._platformLocation.historyGo?.(relativePosition);\n  }\n  static ɵfac = function HashLocationStrategy_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HashLocationStrategy)(i0.ɵɵinject(PlatformLocation), i0.ɵɵinject(APP_BASE_HREF, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HashLocationStrategy,\n    factory: HashLocationStrategy.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HashLocationStrategy, [{\n    type: Injectable\n  }], () => [{\n    type: PlatformLocation\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [APP_BASE_HREF]\n    }]\n  }], null);\n})();\n\n/** @internal */\nconst CURRENCIES_EN = {\n  \"ADP\": [undefined, undefined, 0],\n  \"AFN\": [undefined, \"؋\", 0],\n  \"ALL\": [undefined, undefined, 0],\n  \"AMD\": [undefined, \"֏\", 2],\n  \"AOA\": [undefined, \"Kz\"],\n  \"ARS\": [undefined, \"$\"],\n  \"AUD\": [\"A$\", \"$\"],\n  \"AZN\": [undefined, \"₼\"],\n  \"BAM\": [undefined, \"KM\"],\n  \"BBD\": [undefined, \"$\"],\n  \"BDT\": [undefined, \"৳\"],\n  \"BHD\": [undefined, undefined, 3],\n  \"BIF\": [undefined, undefined, 0],\n  \"BMD\": [undefined, \"$\"],\n  \"BND\": [undefined, \"$\"],\n  \"BOB\": [undefined, \"Bs\"],\n  \"BRL\": [\"R$\"],\n  \"BSD\": [undefined, \"$\"],\n  \"BWP\": [undefined, \"P\"],\n  \"BYN\": [undefined, undefined, 2],\n  \"BYR\": [undefined, undefined, 0],\n  \"BZD\": [undefined, \"$\"],\n  \"CAD\": [\"CA$\", \"$\", 2],\n  \"CHF\": [undefined, undefined, 2],\n  \"CLF\": [undefined, undefined, 4],\n  \"CLP\": [undefined, \"$\", 0],\n  \"CNY\": [\"CN¥\", \"¥\"],\n  \"COP\": [undefined, \"$\", 2],\n  \"CRC\": [undefined, \"₡\", 2],\n  \"CUC\": [undefined, \"$\"],\n  \"CUP\": [undefined, \"$\"],\n  \"CZK\": [undefined, \"Kč\", 2],\n  \"DJF\": [undefined, undefined, 0],\n  \"DKK\": [undefined, \"kr\", 2],\n  \"DOP\": [undefined, \"$\"],\n  \"EGP\": [undefined, \"E£\"],\n  \"ESP\": [undefined, \"₧\", 0],\n  \"EUR\": [\"€\"],\n  \"FJD\": [undefined, \"$\"],\n  \"FKP\": [undefined, \"£\"],\n  \"GBP\": [\"£\"],\n  \"GEL\": [undefined, \"₾\"],\n  \"GHS\": [undefined, \"GH₵\"],\n  \"GIP\": [undefined, \"£\"],\n  \"GNF\": [undefined, \"FG\", 0],\n  \"GTQ\": [undefined, \"Q\"],\n  \"GYD\": [undefined, \"$\", 2],\n  \"HKD\": [\"HK$\", \"$\"],\n  \"HNL\": [undefined, \"L\"],\n  \"HRK\": [undefined, \"kn\"],\n  \"HUF\": [undefined, \"Ft\", 2],\n  \"IDR\": [undefined, \"Rp\", 2],\n  \"ILS\": [\"₪\"],\n  \"INR\": [\"₹\"],\n  \"IQD\": [undefined, undefined, 0],\n  \"IRR\": [undefined, undefined, 0],\n  \"ISK\": [undefined, \"kr\", 0],\n  \"ITL\": [undefined, undefined, 0],\n  \"JMD\": [undefined, \"$\"],\n  \"JOD\": [undefined, undefined, 3],\n  \"JPY\": [\"¥\", undefined, 0],\n  \"KHR\": [undefined, \"៛\"],\n  \"KMF\": [undefined, \"CF\", 0],\n  \"KPW\": [undefined, \"₩\", 0],\n  \"KRW\": [\"₩\", undefined, 0],\n  \"KWD\": [undefined, undefined, 3],\n  \"KYD\": [undefined, \"$\"],\n  \"KZT\": [undefined, \"₸\"],\n  \"LAK\": [undefined, \"₭\", 0],\n  \"LBP\": [undefined, \"L£\", 0],\n  \"LKR\": [undefined, \"Rs\"],\n  \"LRD\": [undefined, \"$\"],\n  \"LTL\": [undefined, \"Lt\"],\n  \"LUF\": [undefined, undefined, 0],\n  \"LVL\": [undefined, \"Ls\"],\n  \"LYD\": [undefined, undefined, 3],\n  \"MGA\": [undefined, \"Ar\", 0],\n  \"MGF\": [undefined, undefined, 0],\n  \"MMK\": [undefined, \"K\", 0],\n  \"MNT\": [undefined, \"₮\", 2],\n  \"MRO\": [undefined, undefined, 0],\n  \"MUR\": [undefined, \"Rs\", 2],\n  \"MXN\": [\"MX$\", \"$\"],\n  \"MYR\": [undefined, \"RM\"],\n  \"NAD\": [undefined, \"$\"],\n  \"NGN\": [undefined, \"₦\"],\n  \"NIO\": [undefined, \"C$\"],\n  \"NOK\": [undefined, \"kr\", 2],\n  \"NPR\": [undefined, \"Rs\"],\n  \"NZD\": [\"NZ$\", \"$\"],\n  \"OMR\": [undefined, undefined, 3],\n  \"PHP\": [\"₱\"],\n  \"PKR\": [undefined, \"Rs\", 2],\n  \"PLN\": [undefined, \"zł\"],\n  \"PYG\": [undefined, \"₲\", 0],\n  \"RON\": [undefined, \"lei\"],\n  \"RSD\": [undefined, undefined, 0],\n  \"RUB\": [undefined, \"₽\"],\n  \"RWF\": [undefined, \"RF\", 0],\n  \"SBD\": [undefined, \"$\"],\n  \"SEK\": [undefined, \"kr\", 2],\n  \"SGD\": [undefined, \"$\"],\n  \"SHP\": [undefined, \"£\"],\n  \"SLE\": [undefined, undefined, 2],\n  \"SLL\": [undefined, undefined, 0],\n  \"SOS\": [undefined, undefined, 0],\n  \"SRD\": [undefined, \"$\"],\n  \"SSP\": [undefined, \"£\"],\n  \"STD\": [undefined, undefined, 0],\n  \"STN\": [undefined, \"Db\"],\n  \"SYP\": [undefined, \"£\", 0],\n  \"THB\": [undefined, \"฿\"],\n  \"TMM\": [undefined, undefined, 0],\n  \"TND\": [undefined, undefined, 3],\n  \"TOP\": [undefined, \"T$\"],\n  \"TRL\": [undefined, undefined, 0],\n  \"TRY\": [undefined, \"₺\"],\n  \"TTD\": [undefined, \"$\"],\n  \"TWD\": [\"NT$\", \"$\", 2],\n  \"TZS\": [undefined, undefined, 2],\n  \"UAH\": [undefined, \"₴\"],\n  \"UGX\": [undefined, undefined, 0],\n  \"USD\": [\"$\"],\n  \"UYI\": [undefined, undefined, 0],\n  \"UYU\": [undefined, \"$\"],\n  \"UYW\": [undefined, undefined, 4],\n  \"UZS\": [undefined, undefined, 2],\n  \"VEF\": [undefined, \"Bs\", 2],\n  \"VND\": [\"₫\", undefined, 0],\n  \"VUV\": [undefined, undefined, 0],\n  \"XAF\": [\"FCFA\", undefined, 0],\n  \"XCD\": [\"EC$\", \"$\"],\n  \"XOF\": [\"F CFA\", undefined, 0],\n  \"XPF\": [\"CFPF\", undefined, 0],\n  \"XXX\": [\"¤\"],\n  \"YER\": [undefined, undefined, 0],\n  \"ZAR\": [undefined, \"R\"],\n  \"ZMK\": [undefined, undefined, 0],\n  \"ZMW\": [undefined, \"ZK\"],\n  \"ZWD\": [undefined, undefined, 0]\n};\n\n/**\n * Format styles that can be used to represent numbers.\n * @see {@link getLocaleNumberFormat}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocaleNumberFormat` is deprecated\n */\nvar NumberFormatStyle;\n(function (NumberFormatStyle) {\n  NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n  NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n  NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n  NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(NumberFormatStyle || (NumberFormatStyle = {}));\n/**\n * Plurality cases used for translating plurals to different languages.\n *\n * @see {@link NgPlural}\n * @see {@link NgPluralCase}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocalePluralCase` is deprecated\n */\nvar Plural;\n(function (Plural) {\n  Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n  Plural[Plural[\"One\"] = 1] = \"One\";\n  Plural[Plural[\"Two\"] = 2] = \"Two\";\n  Plural[Plural[\"Few\"] = 3] = \"Few\";\n  Plural[Plural[\"Many\"] = 4] = \"Many\";\n  Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Context-dependant translation forms for strings.\n * Typically the standalone version is for the nominative form of the word,\n * and the format version is used for the genitive case.\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles)\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated locale data getters are deprecated\n */\nvar FormStyle;\n(function (FormStyle) {\n  FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n  FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(FormStyle || (FormStyle = {}));\n/**\n * String widths available for translations.\n * The specific character widths are locale-specific.\n * Examples are given for the word \"Sunday\" in English.\n *\n * @publicApi\n *\n * @deprecated locale data getters are deprecated\n */\nvar TranslationWidth;\n(function (TranslationWidth) {\n  /** 1 character for `en-US`. For example: 'S' */\n  TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n  /** 3 characters for `en-US`. For example: 'Sun' */\n  TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n  /** Full length for `en-US`. For example: \"Sunday\" */\n  TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n  /** 2 characters for `en-US`, For example: \"Su\" */\n  TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(TranslationWidth || (TranslationWidth = {}));\n/**\n * String widths available for date-time formats.\n * The specific character widths are locale-specific.\n * Examples are given for `en-US`.\n *\n * @see {@link getLocaleDateFormat}\n * @see {@link getLocaleTimeFormat}\n * @see {@link getLocaleDateTimeFormat}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n * @publicApi\n *\n * @deprecated 18.0\n * Date locale data getters are deprecated\n */\nvar FormatWidth;\n(function (FormatWidth) {\n  /**\n   * For `en-US`, `'M/d/yy, h:mm a'`\n   * (Example: `6/15/15, 9:03 AM`)\n   */\n  FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n  /**\n   * For `en-US`, `'MMM d, y, h:mm:ss a'`\n   * (Example: `Jun 15, 2015, 9:03:01 AM`)\n   */\n  FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n  /**\n   * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\n   * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\n   */\n  FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n  /**\n   * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\n   * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\n   */\n  FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(FormatWidth || (FormatWidth = {}));\n// This needs to be an object literal, rather than an enum, because TypeScript 5.4+\n// doesn't allow numeric keys and we have `Infinity` and `NaN`.\n/**\n * Symbols that can be used to replace placeholders in number patterns.\n * Examples are based on `en-US` values.\n *\n * @see {@link getLocaleNumberSymbol}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocaleNumberSymbol` is deprecated\n *\n * @object-literal-as-enum\n */\nconst NumberSymbol = {\n  /**\n   * Decimal separator.\n   * For `en-US`, the dot character.\n   * Example: 2,345`.`67\n   */\n  Decimal: 0,\n  /**\n   * Grouping separator, typically for thousands.\n   * For `en-US`, the comma character.\n   * Example: 2`,`345.67\n   */\n  Group: 1,\n  /**\n   * List-item separator.\n   * Example: \"one, two, and three\"\n   */\n  List: 2,\n  /**\n   * Sign for percentage (out of 100).\n   * Example: 23.4%\n   */\n  PercentSign: 3,\n  /**\n   * Sign for positive numbers.\n   * Example: +23\n   */\n  PlusSign: 4,\n  /**\n   * Sign for negative numbers.\n   * Example: -23\n   */\n  MinusSign: 5,\n  /**\n   * Computer notation for exponential value (n times a power of 10).\n   * Example: 1.2E3\n   */\n  Exponential: 6,\n  /**\n   * Human-readable format of exponential.\n   * Example: 1.2x103\n   */\n  SuperscriptingExponent: 7,\n  /**\n   * Sign for permille (out of 1000).\n   * Example: 23.4‰\n   */\n  PerMille: 8,\n  /**\n   * Infinity, can be used with plus and minus.\n   * Example: ∞, +∞, -∞\n   */\n  Infinity: 9,\n  /**\n   * Not a number.\n   * Example: NaN\n   */\n  NaN: 10,\n  /**\n   * Symbol used between time units.\n   * Example: 10:52\n   */\n  TimeSeparator: 11,\n  /**\n   * Decimal separator for currency values (fallback to `Decimal`).\n   * Example: $2,345.67\n   */\n  CurrencyDecimal: 12,\n  /**\n   * Group separator for currency values (fallback to `Group`).\n   * Example: $2,345.67\n   */\n  CurrencyGroup: 13\n};\n/**\n * The value for each day of the week, based on the `en-US` locale\n *\n * @publicApi\n *\n * @deprecated Week locale getters are deprecated\n */\nvar WeekDay;\n(function (WeekDay) {\n  WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n  WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n  WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n  WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n  WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n  WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n  WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(WeekDay || (WeekDay = {}));\n/**\n * Retrieves the locale ID from the currently loaded locale.\n * The loaded locale could be, for example, a global one rather than a regional one.\n * @param locale A locale code, such as `fr-FR`.\n * @returns The locale code. For example, `fr`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * This function serves no purpose when relying on the `Intl` API.\n */\nfunction getLocaleId(locale) {\n  return _findLocaleData(locale)[_LocaleDataIndex.LocaleId];\n}\n/**\n * Retrieves day period strings for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const amPmData = [data[_LocaleDataIndex.DayPeriodsFormat], data[_LocaleDataIndex.DayPeriodsStandalone]];\n  const amPm = getLastDefinedValue(amPmData, formStyle);\n  return getLastDefinedValue(amPm, width);\n}\n/**\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const daysData = [data[_LocaleDataIndex.DaysFormat], data[_LocaleDataIndex.DaysStandalone]];\n  const days = getLastDefinedValue(daysData, formStyle);\n  return getLastDefinedValue(days, width);\n}\n/**\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,  `[January, February, ...]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const monthsData = [data[_LocaleDataIndex.MonthsFormat], data[_LocaleDataIndex.MonthsStandalone]];\n  const months = getLastDefinedValue(monthsData, formStyle);\n  return getLastDefinedValue(months, width);\n}\n/**\n * Retrieves Gregorian-calendar eras for the given locale.\n * @param locale A locale code for the locale format rules to use.\n * @param width The required character width.\n\n * @returns An array of localized era strings.\n * For example, `[AD, BC]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleEraNames(locale, width) {\n  const data = _findLocaleData(locale);\n  const erasData = data[_LocaleDataIndex.Eras];\n  return getLastDefinedValue(erasData, width);\n}\n/**\n * Retrieves the first day of the week for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns A day index number, using the 0-based week-day index for `en-US`\n * (Sunday = 0, Monday = 1, ...).\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Intl's [`getWeekInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo) has partial support (Chromium M99 & Safari 17).\n * You may want to rely on the following alternatives:\n * - Libraries like [`Luxon`](https://moment.github.io/luxon/#/) rely on `Intl` but fallback on the ISO 8601 definition (monday) if `getWeekInfo` is not supported.\n * - Other librairies like [`date-fns`](https://date-fns.org/), [`day.js`](https://day.js.org/en/) or [`weekstart`](https://www.npmjs.com/package/weekstart) library provide their own locale based data for the first day of the week.\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.FirstDayOfWeek];\n}\n/**\n * Range of week days that are considered the week-end for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The range of day values, `[startDay, endDay]`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Intl's [`getWeekInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo) has partial support (Chromium M99 & Safari 17).\n * Libraries like [`Luxon`](https://moment.github.io/luxon/#/) rely on `Intl` but fallback on the ISO 8601 definition (Saturday+Sunday) if `getWeekInfo` is not supported .\n */\nfunction getLocaleWeekEndRange(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.WeekendRange];\n}\n/**\n * Retrieves a localized date-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDateFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  return getLastDefinedValue(data[_LocaleDataIndex.DateFormat], width);\n}\n/**\n * Retrieves a localized time-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n\n * @publicApi\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleTimeFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  return getLastDefinedValue(data[_LocaleDataIndex.TimeFormat], width);\n}\n/**\n * Retrieves a localized date-time formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  const dateTimeFormatData = data[_LocaleDataIndex.DateTimeFormat];\n  return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\n * @param locale The locale code.\n * @param symbol The symbol to localize. Must be one of `NumberSymbol`.\n * @returns The character for the localized symbol.\n * @see {@link NumberSymbol}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.NumberFormat` to format numbers instead.\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n  const data = _findLocaleData(locale);\n  const res = data[_LocaleDataIndex.NumberSymbols][symbol];\n  if (typeof res === 'undefined') {\n    if (symbol === NumberSymbol.CurrencyDecimal) {\n      return data[_LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\n      return data[_LocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n    }\n  }\n  return res;\n}\n/**\n * Retrieves a number format for a given locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\n * that stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the appropriate `NumberSymbol` for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | Replaced by a currency symbol, such as $ or USD. |\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * @param locale A locale code for the locale format rules to use.\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\n * @returns The localized format string.\n * @see {@link NumberFormatStyle}\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Let `Intl.NumberFormat` determine the number format instead\n */\nfunction getLocaleNumberFormat(locale, type) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.NumberFormats][type];\n}\n/**\n * Retrieves the symbol used to represent the currency for the main country\n * corresponding to a given locale. For example, '$' for `en-US`.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The localized symbol character,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Use the `Intl` API to format a currency with from currency code\n */\nfunction getLocaleCurrencySymbol(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.CurrencySymbol] || null;\n}\n/**\n * Retrieves the name of the currency for the main country corresponding\n * to a given locale. For example, 'US Dollar' for `en-US`.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency name,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Use the `Intl` API to format a currency with from currency code\n */\nfunction getLocaleCurrencyName(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.CurrencyName] || null;\n}\n/**\n * Retrieves the default currency code for the given locale.\n *\n * The default is defined as the first currency which is still in use.\n *\n * @param locale The code of the locale whose currency code we want.\n * @returns The code of the default currency for the given locale.\n *\n * @publicApi\n *\n * @deprecated We recommend you create a map of locale to ISO 4217 currency codes.\n * Time relative currency data is provided by the CLDR project. See https://www.unicode.org/cldr/charts/44/supplemental/detailed_territory_currency_information.html\n */\nfunction getLocaleCurrencyCode(locale) {\n  return _getLocaleCurrencyCode(locale);\n}\n/**\n * Retrieves the currency values for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency values.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n */\nfunction getLocaleCurrencies(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.Currencies];\n}\n/**\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.PluralRules` instead\n */\nconst getLocalePluralCase = _getLocalePluralCase;\nfunction checkFullData(data) {\n  if (!data[_LocaleDataIndex.ExtraData]) {\n    throw new _RuntimeError(2303 /* RuntimeErrorCode.MISSING_EXTRA_LOCALE_DATA_FOR_LOCALE */, ngDevMode && `Missing extra locale data for the locale \"${data[_LocaleDataIndex.LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n  }\n}\n/**\n * Retrieves locale-specific rules used to determine which day period to use\n * when more than one period is defined for a locale.\n *\n * There is a rule for each defined day period. The\n * first rule is applied to the first day period and so on.\n * Fall back to AM/PM when no rules are available.\n *\n * A rule can specify a period as time range, or as a single time value.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n/format-data-locale).\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\n * or null if no periods are available.\n *\n * @see {@link getLocaleExtraDayPeriods}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Let `Intl.DateTimeFormat` determine the day period instead.\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n  const data = _findLocaleData(locale);\n  checkFullData(data);\n  const rules = data[_LocaleDataIndex.ExtraData][2 /* ɵExtraLocaleDataIndex.ExtraDayPeriodsRules */] || [];\n  return rules.map(rule => {\n    if (typeof rule === 'string') {\n      return extractTime(rule);\n    }\n    return [extractTime(rule[0]), extractTime(rule[1])];\n  });\n}\n/**\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\n * in different languages.\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n/format-data-locale).\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns The translated day-period strings.\n * @see {@link getLocaleExtraDayPeriodRules}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * To extract a day period use `Intl.DateTimeFormat` with the `dayPeriod` option instead.\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  checkFullData(data);\n  const dayPeriodsData = [data[_LocaleDataIndex.ExtraData][0 /* ɵExtraLocaleDataIndex.ExtraDayPeriodFormats */], data[_LocaleDataIndex.ExtraData][1 /* ɵExtraLocaleDataIndex.ExtraDayPeriodStandalone */]];\n  const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n  return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Retrieves the writing direction of a specified locale\n * @param locale A locale code for the locale format rules to use.\n * @publicApi\n * @returns 'rtl' or 'ltr'\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * For dates and numbers, let `Intl.DateTimeFormat()` and `Intl.NumberFormat()` determine the writing direction.\n * The `Intl` alternative [`getTextInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getTextInfo).\n * has only partial support (Chromium M99 & Safari 17).\n * 3rd party alternatives like [`rtl-detect`](https://www.npmjs.com/package/rtl-detect) can work around this issue.\n */\nfunction getLocaleDirection(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.Directionality];\n}\n/**\n * Retrieves the first value that is defined in an array, going backwards from an index position.\n *\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\n * add the first value to the locale data arrays, and add other values only if they are different.\n *\n * @param data The data array to retrieve from.\n * @param index A 0-based index into the array to start from.\n * @returns The value immediately before the given index position.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n */\nfunction getLastDefinedValue(data, index) {\n  for (let i = index; i > -1; i--) {\n    if (typeof data[i] !== 'undefined') {\n      return data[i];\n    }\n  }\n  throw new _RuntimeError(2304 /* RuntimeErrorCode.LOCALE_DATA_UNDEFINED */, ngDevMode && 'Locale data API: locale data undefined');\n}\n/**\n * Extracts the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n  const [h, m] = time.split(':');\n  return {\n    hours: +h,\n    minutes: +m\n  };\n}\n/**\n * Retrieves the currency symbol for a given currency code.\n *\n * For example, for the default `en-US` locale, the code `USD` can\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\n *\n * @param code The currency code.\n * @param format The format, `wide` or `narrow`.\n * @param locale A locale code for the locale format rules to use.\n *\n * @returns The symbol, or the currency code if no symbol is available.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * You can use `Intl.NumberFormat().formatToParts()` to extract the currency symbol.\n * For example: `Intl.NumberFormat('en', {style:'currency', currency: 'USD'}).formatToParts().find(part => part.type === 'currency').value`\n * returns `$` for USD currency code in the `en` locale.\n * Note: `US$` is a currency symbol for the `en-ca` locale but not the `en-us` locale.\n */\nfunction getCurrencySymbol(code, format, locale = 'en') {\n  const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n  const symbolNarrow = currency[1 /* ɵCurrencyIndex.SymbolNarrow */];\n  if (format === 'narrow' && typeof symbolNarrow === 'string') {\n    return symbolNarrow;\n  }\n  return currency[0 /* ɵCurrencyIndex.Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Reports the number of decimal digits for a given currency.\n * The value depends upon the presence of cents in that particular currency.\n *\n * @param code The currency code.\n * @returns The number of decimal digits, typically 0 or 2.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * This function should not be used anymore. Let `Intl.NumberFormat` determine the number of digits to display for the currency\n */\nfunction getNumberOfCurrencyDigits(code) {\n  let digits;\n  const currency = CURRENCIES_EN[code];\n  if (currency) {\n    digits = currency[2 /* ɵCurrencyIndex.NbOfDigits */];\n  }\n  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\nconst ISO8601_DATE_REGEX = /^(\\d{4,})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nconst NAMED_FORMATS = {};\nconst DATE_FORMATS_SPLIT = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\n * @param format The date-time components to include. See `DatePipe` for details.\n * @param locale A locale code for the locale format rules to use.\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`).\n * If not specified, uses host system settings.\n *\n * @returns The formatted date string.\n *\n * @see {@link DatePipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n  let date = toDate(value);\n  const namedFormat = getNamedFormat(locale, format);\n  format = namedFormat || format;\n  let parts = [];\n  let match;\n  while (format) {\n    match = DATE_FORMATS_SPLIT.exec(format);\n    if (match) {\n      parts = parts.concat(match.slice(1));\n      const part = parts.pop();\n      if (!part) {\n        break;\n      }\n      format = part;\n    } else {\n      parts.push(format);\n      break;\n    }\n  }\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    assertValidDateFormat(parts);\n  }\n  let dateTimezoneOffset = date.getTimezoneOffset();\n  if (timezone) {\n    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    date = convertTimezoneToLocal(date, timezone);\n  }\n  let text = '';\n  parts.forEach(value => {\n    const dateFormatter = getDateFormatter(value);\n    text += dateFormatter ? dateFormatter(date, locale, dateTimezoneOffset) : value === \"''\" ? \"'\" : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n  });\n  return text;\n}\n/**\n * Asserts that the given date format is free from common mistakes.  Throws an\n * error if one is found (except for the case of all \"Y\", in which case we just\n * log a warning).  This should only be called in development mode.\n */\nfunction assertValidDateFormat(parts) {\n  if (parts.some(part => /^Y+$/.test(part)) && !parts.some(part => /^w+$/.test(part))) {\n    // \"Y\" indicates \"week-based year\", which differs from the actual calendar\n    // year for a few days around Jan 1 most years.  Unless \"w\" is also\n    // present (e.g. a date like \"2024-W52\") this is likely a mistake.  Users\n    // probably meant \"y\" instead.\n    const message = `Suspicious use of week-based year \"Y\" in date pattern \"${parts.join('')}\". Did you mean to use calendar year \"y\" instead?`;\n    if (parts.length === 1) {\n      // NOTE: allow \"YYYY\" with just a warning, since it's used in tests.\n      console.error(_formatRuntimeError(2300 /* RuntimeErrorCode.SUSPICIOUS_DATE_FORMAT */, message));\n    } else {\n      throw new _RuntimeError(2300 /* RuntimeErrorCode.SUSPICIOUS_DATE_FORMAT */, message);\n    }\n  }\n}\n/**\n * Create a new Date object with the given date value, and the time set to midnight.\n *\n * We cannot use `new Date(year, month, date)` because it maps years between 0 and 99 to 1900-1999.\n * See: https://github.com/angular/angular/issues/40377\n *\n * Note that this function returns a Date object whose time is midnight in the current locale's\n * timezone. In the future we might want to change this to be midnight in UTC, but this would be a\n * considerable breaking change.\n */\nfunction createDate(year, month, date) {\n  // The `newDate` is set to midnight (UTC) on January 1st 1970.\n  // - In PST this will be December 31st 1969 at 4pm.\n  // - In GMT this will be January 1st 1970 at 1am.\n  // Note that they even have different years, dates and months!\n  const newDate = new Date(0);\n  // `setFullYear()` allows years like 0001 to be set correctly. This function does not\n  // change the internal time of the date.\n  // Consider calling `setFullYear(2019, 8, 20)` (September 20, 2019).\n  // - In PST this will now be September 20, 2019 at 4pm\n  // - In GMT this will now be September 20, 2019 at 1am\n  newDate.setFullYear(year, month, date);\n  // We want the final date to be at local midnight, so we reset the time.\n  // - In PST this will now be September 20, 2019 at 12am\n  // - In GMT this will now be September 20, 2019 at 12am\n  newDate.setHours(0, 0, 0);\n  return newDate;\n}\nfunction getNamedFormat(locale, format) {\n  const localeId = getLocaleId(locale);\n  NAMED_FORMATS[localeId] ??= {};\n  if (NAMED_FORMATS[localeId][format]) {\n    return NAMED_FORMATS[localeId][format];\n  }\n  let formatValue = '';\n  switch (format) {\n    case 'shortDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n      break;\n    case 'shortTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n      break;\n    case 'short':\n      const shortTime = getNamedFormat(locale, 'shortTime');\n      const shortDate = getNamedFormat(locale, 'shortDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n      break;\n    case 'medium':\n      const mediumTime = getNamedFormat(locale, 'mediumTime');\n      const mediumDate = getNamedFormat(locale, 'mediumDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n      break;\n    case 'long':\n      const longTime = getNamedFormat(locale, 'longTime');\n      const longDate = getNamedFormat(locale, 'longDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n      break;\n    case 'full':\n      const fullTime = getNamedFormat(locale, 'fullTime');\n      const fullDate = getNamedFormat(locale, 'fullDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n      break;\n  }\n  if (formatValue) {\n    NAMED_FORMATS[localeId][format] = formatValue;\n  }\n  return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n  if (opt_values) {\n    str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n      return opt_values != null && key in opt_values ? opt_values[key] : match;\n    });\n  }\n  return str;\n}\nfunction padNumber(num, digits, minusSign = '-', trim, negWrap) {\n  let neg = '';\n  if (num < 0 || negWrap && num <= 0) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = minusSign;\n    }\n  }\n  let strNum = String(num);\n  while (strNum.length < digits) {\n    strNum = '0' + strNum;\n  }\n  if (trim) {\n    strNum = strNum.slice(strNum.length - digits);\n  }\n  return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n  const strMs = padNumber(milliseconds, 3);\n  return strMs.substring(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset = 0, trim = false, negWrap = false) {\n  return function (date, locale) {\n    let part = getDatePart(name, date);\n    if (offset > 0 || part > -offset) {\n      part += offset;\n    }\n    if (name === 3 /* DateType.Hours */) {\n      if (part === 0 && offset === -12) {\n        part = 12;\n      }\n    } else if (name === 6 /* DateType.FractionalSeconds */) {\n      return formatFractionalSeconds(part, size);\n    }\n    const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    return padNumber(part, size, localeMinus, trim, negWrap);\n  };\n}\nfunction getDatePart(part, date) {\n  switch (part) {\n    case 0 /* DateType.FullYear */:\n      return date.getFullYear();\n    case 1 /* DateType.Month */:\n      return date.getMonth();\n    case 2 /* DateType.Date */:\n      return date.getDate();\n    case 3 /* DateType.Hours */:\n      return date.getHours();\n    case 4 /* DateType.Minutes */:\n      return date.getMinutes();\n    case 5 /* DateType.Seconds */:\n      return date.getSeconds();\n    case 6 /* DateType.FractionalSeconds */:\n      return date.getMilliseconds();\n    case 7 /* DateType.Day */:\n      return date.getDay();\n    default:\n      throw new _RuntimeError(2301 /* RuntimeErrorCode.UNKNOWN_DATE_TYPE_VALUE */, ngDevMode && `Unknown DateType value \"${part}\".`);\n  }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form = FormStyle.Format, extended = false) {\n  return function (date, locale) {\n    return getDateTranslation(date, locale, name, width, form, extended);\n  };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n  switch (name) {\n    case 2 /* TranslationType.Months */:\n      return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n    case 1 /* TranslationType.Days */:\n      return getLocaleDayNames(locale, form, width)[date.getDay()];\n    case 0 /* TranslationType.DayPeriods */:\n      const currentHours = date.getHours();\n      const currentMinutes = date.getMinutes();\n      if (extended) {\n        const rules = getLocaleExtraDayPeriodRules(locale);\n        const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n        const index = rules.findIndex(rule => {\n          if (Array.isArray(rule)) {\n            // morning, afternoon, evening, night\n            const [from, to] = rule;\n            const afterFrom = currentHours >= from.hours && currentMinutes >= from.minutes;\n            const beforeTo = currentHours < to.hours || currentHours === to.hours && currentMinutes < to.minutes;\n            // We must account for normal rules that span a period during the day (e.g. 6am-9am)\n            // where `from` is less (earlier) than `to`. But also rules that span midnight (e.g.\n            // 10pm - 5am) where `from` is greater (later!) than `to`.\n            //\n            // In the first case the current time must be BOTH after `from` AND before `to`\n            // (e.g. 8am is after 6am AND before 10am).\n            //\n            // In the second case the current time must be EITHER after `from` OR before `to`\n            // (e.g. 4am is before 5am but not after 10pm; and 11pm is not before 5am but it is\n            // after 10pm).\n            if (from.hours < to.hours) {\n              if (afterFrom && beforeTo) {\n                return true;\n              }\n            } else if (afterFrom || beforeTo) {\n              return true;\n            }\n          } else {\n            // noon or midnight\n            if (rule.hours === currentHours && rule.minutes === currentMinutes) {\n              return true;\n            }\n          }\n          return false;\n        });\n        if (index !== -1) {\n          return dayPeriods[index];\n        }\n      }\n      // if no rules for the day periods, we use am/pm by default\n      return getLocaleDayPeriods(locale, form, width)[currentHours < 12 ? 0 : 1];\n    case 3 /* TranslationType.Eras */:\n      return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected = name;\n      throw new _RuntimeError(2302 /* RuntimeErrorCode.UNEXPECTED_TRANSLATION_TYPE */, ngDevMode && `unexpected translation type ${unexpected}`);\n  }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n  return function (date, locale, offset) {\n    const zone = -1 * offset;\n    const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n    switch (width) {\n      case 0 /* ZoneWidth.Short */:\n        return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + padNumber(Math.abs(zone % 60), 2, minusSign);\n      case 1 /* ZoneWidth.ShortGMT */:\n        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 1, minusSign);\n      case 2 /* ZoneWidth.Long */:\n        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);\n      case 3 /* ZoneWidth.Extended */:\n        if (offset === 0) {\n          return 'Z';\n        } else {\n          return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);\n        }\n      default:\n        throw new _RuntimeError(2302 /* RuntimeErrorCode.UNKNOWN_ZONE_WIDTH */, ngDevMode && `Unknown zone width \"${width}\"`);\n    }\n  };\n}\nconst JANUARY = 0;\nconst THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n  const firstDayOfYear = createDate(year, JANUARY, 1).getDay();\n  return createDate(year, 0, 1 + (firstDayOfYear <= THURSDAY ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n/**\n *  ISO Week starts on day 1 (Monday) and ends with day 0 (Sunday)\n */\nfunction getThursdayThisIsoWeek(datetime) {\n  // getDay returns 0-6 range with sunday as 0.\n  const currentDay = datetime.getDay();\n  // On a Sunday, read the previous Thursday since ISO weeks start on Monday.\n  const deltaToThursday = currentDay === 0 ? -3 : THURSDAY - currentDay;\n  return createDate(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + deltaToThursday);\n}\nfunction weekGetter(size, monthBased = false) {\n  return function (date, locale) {\n    let result;\n    if (monthBased) {\n      const nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n      const today = date.getDate();\n      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n    } else {\n      const thisThurs = getThursdayThisIsoWeek(date);\n      // Some days of a year are part of next year according to ISO 8601.\n      // Compute the firstThurs from the year of this week's Thursday\n      const firstThurs = getFirstThursdayOfYear(thisThurs.getFullYear());\n      const diff = thisThurs.getTime() - firstThurs.getTime();\n      result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n    }\n    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  };\n}\n/**\n * Returns a date formatter that provides the week-numbering year for the input date.\n */\nfunction weekNumberingYearGetter(size, trim = false) {\n  return function (date, locale) {\n    const thisThurs = getThursdayThisIsoWeek(date);\n    const weekNumberingYear = thisThurs.getFullYear();\n    return padNumber(weekNumberingYear, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim);\n  };\n}\nconst DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: U, Q, D, F, e, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n  if (DATE_FORMATS[format]) {\n    return DATE_FORMATS[format];\n  }\n  let formatter;\n  switch (format) {\n    // Era name (AD/BC)\n    case 'G':\n    case 'GG':\n    case 'GGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Abbreviated);\n      break;\n    case 'GGGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Wide);\n      break;\n    case 'GGGGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Narrow);\n      break;\n    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'y':\n      formatter = dateGetter(0 /* DateType.FullYear */, 1, 0, false, true);\n      break;\n    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 2, 0, true, true);\n      break;\n    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yyy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 3, 0, false, true);\n      break;\n    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'yyyy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 4, 0, false, true);\n      break;\n    // 1 digit representation of the week-numbering year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'Y':\n      formatter = weekNumberingYearGetter(1);\n      break;\n    // 2 digit representation of the week-numbering year, padded (00-99). (e.g. AD 2001 => 01, AD\n    // 2010 => 10)\n    case 'YY':\n      formatter = weekNumberingYearGetter(2, true);\n      break;\n    // 3 digit representation of the week-numbering year, padded (000-999). (e.g. AD 1 => 001, AD\n    // 2010 => 2010)\n    case 'YYY':\n      formatter = weekNumberingYearGetter(3);\n      break;\n    // 4 digit representation of the week-numbering year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'YYYY':\n      formatter = weekNumberingYearGetter(4);\n      break;\n    // Month of the year (1-12), numeric\n    case 'M':\n    case 'L':\n      formatter = dateGetter(1 /* DateType.Month */, 1, 1);\n      break;\n    case 'MM':\n    case 'LL':\n      formatter = dateGetter(1 /* DateType.Month */, 2, 1);\n      break;\n    // Month of the year (January, ...), string, format\n    case 'MMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Abbreviated);\n      break;\n    case 'MMMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Wide);\n      break;\n    case 'MMMMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Narrow);\n      break;\n    // Month of the year (January, ...), string, standalone\n    case 'LLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'LLLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'LLLLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n    // Week of the year (1, ... 52)\n    case 'w':\n      formatter = weekGetter(1);\n      break;\n    case 'ww':\n      formatter = weekGetter(2);\n      break;\n    // Week of the month (1, ...)\n    case 'W':\n      formatter = weekGetter(1, true);\n      break;\n    // Day of the month (1-31)\n    case 'd':\n      formatter = dateGetter(2 /* DateType.Date */, 1);\n      break;\n    case 'dd':\n      formatter = dateGetter(2 /* DateType.Date */, 2);\n      break;\n    // Day of the Week StandAlone (1, 1, Mon, Monday, M, Mo)\n    case 'c':\n    case 'cc':\n      formatter = dateGetter(7 /* DateType.Day */, 1);\n      break;\n    case 'ccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'cccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'ccccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n    case 'cccccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Short, FormStyle.Standalone);\n      break;\n    // Day of the Week\n    case 'E':\n    case 'EE':\n    case 'EEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Abbreviated);\n      break;\n    case 'EEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Wide);\n      break;\n    case 'EEEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Narrow);\n      break;\n    case 'EEEEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Short);\n      break;\n    // Generic period of the day (am-pm)\n    case 'a':\n    case 'aa':\n    case 'aaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated);\n      break;\n    case 'aaaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide);\n      break;\n    case 'aaaaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow);\n      break;\n    // Extended period of the day (midnight, at night, ...), standalone\n    case 'b':\n    case 'bb':\n    case 'bbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n      break;\n    case 'bbbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide, FormStyle.Standalone, true);\n      break;\n    case 'bbbbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow, FormStyle.Standalone, true);\n      break;\n    // Extended period of the day (midnight, night, ...), standalone\n    case 'B':\n    case 'BB':\n    case 'BBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated, FormStyle.Format, true);\n      break;\n    case 'BBBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide, FormStyle.Format, true);\n      break;\n    case 'BBBBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow, FormStyle.Format, true);\n      break;\n    // Hour in AM/PM, (1-12)\n    case 'h':\n      formatter = dateGetter(3 /* DateType.Hours */, 1, -12);\n      break;\n    case 'hh':\n      formatter = dateGetter(3 /* DateType.Hours */, 2, -12);\n      break;\n    // Hour of the day (0-23)\n    case 'H':\n      formatter = dateGetter(3 /* DateType.Hours */, 1);\n      break;\n    // Hour in day, padded (00-23)\n    case 'HH':\n      formatter = dateGetter(3 /* DateType.Hours */, 2);\n      break;\n    // Minute of the hour (0-59)\n    case 'm':\n      formatter = dateGetter(4 /* DateType.Minutes */, 1);\n      break;\n    case 'mm':\n      formatter = dateGetter(4 /* DateType.Minutes */, 2);\n      break;\n    // Second of the minute (0-59)\n    case 's':\n      formatter = dateGetter(5 /* DateType.Seconds */, 1);\n      break;\n    case 'ss':\n      formatter = dateGetter(5 /* DateType.Seconds */, 2);\n      break;\n    // Fractional second\n    case 'S':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 1);\n      break;\n    case 'SS':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 2);\n      break;\n    case 'SSS':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 3);\n      break;\n    // Timezone ISO8601 short format (-0430)\n    case 'Z':\n    case 'ZZ':\n    case 'ZZZ':\n      formatter = timeZoneGetter(0 /* ZoneWidth.Short */);\n      break;\n    // Timezone ISO8601 extended format (-04:30)\n    case 'ZZZZZ':\n      formatter = timeZoneGetter(3 /* ZoneWidth.Extended */);\n      break;\n    // Timezone GMT short format (GMT+4)\n    case 'O':\n    case 'OO':\n    case 'OOO':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'z':\n    case 'zz':\n    case 'zzz':\n      formatter = timeZoneGetter(1 /* ZoneWidth.ShortGMT */);\n      break;\n    // Timezone GMT long format (GMT+0430)\n    case 'OOOO':\n    case 'ZZZZ':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'zzzz':\n      formatter = timeZoneGetter(2 /* ZoneWidth.Long */);\n      break;\n    default:\n      return null;\n  }\n  DATE_FORMATS[format] = formatter;\n  return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n  // Support: IE 11 only, Edge 13-15+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(/:/g, '');\n  const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n  const reverseValue = -1;\n  const dateTimezoneOffset = date.getTimezoneOffset();\n  const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n  if (isDate(value)) {\n    return value;\n  }\n  if (typeof value === 'number' && !isNaN(value)) {\n    return new Date(value);\n  }\n  if (typeof value === 'string') {\n    value = value.trim();\n    if (/^(\\d{4}(-\\d{1,2}(-\\d{1,2})?)?)$/.test(value)) {\n      /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n      before Date creation to avoid time offset and errors in the new Date.\n      If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n      date, some browsers (e.g. IE 9) will throw an invalid Date error.\n      If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n      is applied.\n      Note: ISO months are 0 for January, 1 for February, ... */\n      const [y, m = 1, d = 1] = value.split('-').map(val => +val);\n      return createDate(y, m - 1, d);\n    }\n    const parsedNb = parseFloat(value);\n    // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n    if (!isNaN(value - parsedNb)) {\n      return new Date(parsedNb);\n    }\n    let match;\n    if (match = value.match(ISO8601_DATE_REGEX)) {\n      return isoStringToDate(match);\n    }\n  }\n  const date = new Date(value);\n  if (!isDate(date)) {\n    throw new _RuntimeError(2302 /* RuntimeErrorCode.INVALID_TO_DATE_CONVERSION */, ngDevMode && `Unable to convert \"${value}\" into a date`);\n  }\n  return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n  const date = new Date(0);\n  let tzHour = 0;\n  let tzMin = 0;\n  // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n  const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n  // if there is a timezone defined like \"+01:00\" or \"+0100\"\n  if (match[9]) {\n    tzHour = Number(match[9] + match[10]);\n    tzMin = Number(match[9] + match[11]);\n  }\n  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n  const h = Number(match[4] || 0) - tzHour;\n  const m = Number(match[5] || 0) - tzMin;\n  const s = Number(match[6] || 0);\n  // The ECMAScript specification (https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.11)\n  // defines that `DateTime` milliseconds should always be rounded down, so that `999.9ms`\n  // becomes `999ms`.\n  const ms = Math.floor(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\nfunction isDate(value) {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\nconst NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nconst MAX_DIGITS = 22;\nconst DECIMAL_SEP = '.';\nconst ZERO_CHAR = '0';\nconst PATTERN_SEP = ';';\nconst GROUP_SEP = ',';\nconst DIGIT_CHAR = '#';\nconst CURRENCY_CHAR = '¤';\nconst PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format.\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent = false) {\n  let formattedText = '';\n  let isZero = false;\n  if (!isFinite(value)) {\n    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n  } else {\n    let parsedNumber = parseNumber(value);\n    if (isPercent) {\n      parsedNumber = toPercent(parsedNumber);\n    }\n    let minInt = pattern.minInt;\n    let minFraction = pattern.minFrac;\n    let maxFraction = pattern.maxFrac;\n    if (digitsInfo) {\n      const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n      if (parts === null) {\n        throw new _RuntimeError(2306 /* RuntimeErrorCode.INVALID_DIGIT_INFO */, ngDevMode && `${digitsInfo} is not a valid digit info`);\n      }\n      const minIntPart = parts[1];\n      const minFractionPart = parts[3];\n      const maxFractionPart = parts[5];\n      if (minIntPart != null) {\n        minInt = parseIntAutoRadix(minIntPart);\n      }\n      if (minFractionPart != null) {\n        minFraction = parseIntAutoRadix(minFractionPart);\n      }\n      if (maxFractionPart != null) {\n        maxFraction = parseIntAutoRadix(maxFractionPart);\n      } else if (minFractionPart != null && minFraction > maxFraction) {\n        maxFraction = minFraction;\n      }\n    }\n    roundNumber(parsedNumber, minFraction, maxFraction);\n    let digits = parsedNumber.digits;\n    let integerLen = parsedNumber.integerLen;\n    const exponent = parsedNumber.exponent;\n    let decimals = [];\n    isZero = digits.every(d => !d);\n    // pad zeros for small numbers\n    for (; integerLen < minInt; integerLen++) {\n      digits.unshift(0);\n    }\n    // pad zeros for small numbers\n    for (; integerLen < 0; integerLen++) {\n      digits.unshift(0);\n    }\n    // extract decimals digits\n    if (integerLen > 0) {\n      decimals = digits.splice(integerLen, digits.length);\n    } else {\n      decimals = digits;\n      digits = [0];\n    }\n    // format the integer digits with grouping separators\n    const groups = [];\n    if (digits.length >= pattern.lgSize) {\n      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n    }\n    while (digits.length > pattern.gSize) {\n      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n    }\n    if (digits.length) {\n      groups.unshift(digits.join(''));\n    }\n    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n    // append the decimal digits\n    if (decimals.length) {\n      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n    }\n    if (exponent) {\n      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n    }\n  }\n  if (value < 0 && !isZero) {\n    formattedText = pattern.negPre + formattedText + pattern.negSuf;\n  } else {\n    formattedText = pattern.posPre + formattedText + pattern.posSuf;\n  }\n  return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param currency A string containing the currency symbol or its name,\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\n * of the function.\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n * currency code, such as `USD` for the US dollar and `EUR` for the euro.\n * Used to determine the number of digits in the decimal part.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted currency value.\n *\n * @see {@link formatNumber}\n * @see {@link DecimalPipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n  pattern.maxFrac = pattern.minFrac;\n  const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n  return res.replace(CURRENCY_CHAR, currency)\n  // if we have 2 time the currency character, the second one is ignored\n  .replace(CURRENCY_CHAR, '')\n  // If there is a spacing between currency character and the value and\n  // the currency character is suppressed by passing an empty string, the\n  // spacing character would remain as part of the string. Then we\n  // should remove it.\n  .trim();\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted percentage value.\n *\n * @see {@link formatNumber}\n * @see {@link DecimalPipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n * @publicApi\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n  return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text, with group sizing, separator, and other\n * parameters based on the locale.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted text string.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign = '-') {\n  const p = {\n    minInt: 1,\n    minFrac: 0,\n    maxFrac: 0,\n    posPre: '',\n    posSuf: '',\n    negPre: '',\n    negSuf: '',\n    gSize: 0,\n    lgSize: 0\n  };\n  const patternParts = format.split(PATTERN_SEP);\n  const positive = patternParts[0];\n  const negative = patternParts[1];\n  const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ? positive.split(DECIMAL_SEP) : [positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1), positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)],\n    integer = positiveParts[0],\n    fraction = positiveParts[1] || '';\n  p.posPre = integer.substring(0, integer.indexOf(DIGIT_CHAR));\n  for (let i = 0; i < fraction.length; i++) {\n    const ch = fraction.charAt(i);\n    if (ch === ZERO_CHAR) {\n      p.minFrac = p.maxFrac = i + 1;\n    } else if (ch === DIGIT_CHAR) {\n      p.maxFrac = i + 1;\n    } else {\n      p.posSuf += ch;\n    }\n  }\n  const groups = integer.split(GROUP_SEP);\n  p.gSize = groups[1] ? groups[1].length : 0;\n  p.lgSize = groups[2] || groups[1] ? (groups[2] || groups[1]).length : 0;\n  if (negative) {\n    const trunkLen = positive.length - p.posPre.length - p.posSuf.length,\n      pos = negative.indexOf(DIGIT_CHAR);\n    p.negPre = negative.substring(0, pos).replace(/'/g, '');\n    p.negSuf = negative.slice(pos + trunkLen).replace(/'/g, '');\n  } else {\n    p.negPre = minusSign + p.posPre;\n    p.negSuf = p.posSuf;\n  }\n  return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n  // if the number is 0, don't do anything\n  if (parsedNumber.digits[0] === 0) {\n    return parsedNumber;\n  }\n  // Getting the current number of decimals\n  const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n  if (parsedNumber.exponent) {\n    parsedNumber.exponent += 2;\n  } else {\n    if (fractionLen === 0) {\n      parsedNumber.digits.push(0, 0);\n    } else if (fractionLen === 1) {\n      parsedNumber.digits.push(0);\n    }\n    parsedNumber.integerLen += 2;\n  }\n  return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n  let numStr = Math.abs(num) + '';\n  let exponent = 0,\n    digits,\n    integerLen;\n  let i, j, zeros;\n  // Decimal point?\n  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  }\n  // Exponential form?\n  if ((i = numStr.search(/e/i)) > 0) {\n    // Work out the exponent.\n    if (integerLen < 0) integerLen = i;\n    integerLen += +numStr.slice(i + 1);\n    numStr = numStr.substring(0, i);\n  } else if (integerLen < 0) {\n    // There was no decimal point or exponent so it is an integer.\n    integerLen = numStr.length;\n  }\n  // Count the number of leading zeros.\n  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {\n    /* empty */\n  }\n  if (i === (zeros = numStr.length)) {\n    // The digits are all zero.\n    digits = [0];\n    integerLen = 1;\n  } else {\n    // Count the number of trailing zeros\n    zeros--;\n    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;\n    // Trailing zeros are insignificant so ignore them\n    integerLen -= i;\n    digits = [];\n    // Convert string to array of digits without leading/trailing zeros.\n    for (j = 0; i <= zeros; i++, j++) {\n      digits[j] = Number(numStr.charAt(i));\n    }\n  }\n  // If the number overflows the maximum allowed digits then use an exponent.\n  if (integerLen > MAX_DIGITS) {\n    digits = digits.splice(0, MAX_DIGITS - 1);\n    exponent = integerLen - 1;\n    integerLen = 1;\n  }\n  return {\n    digits,\n    exponent,\n    integerLen\n  };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n  if (minFrac > maxFrac) {\n    throw new _RuntimeError(2307 /* RuntimeErrorCode.INVALID_NUMBER_OF_DIGITS_AFTER_FRACTION */, ngDevMode && `The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n  }\n  let digits = parsedNumber.digits;\n  let fractionLen = digits.length - parsedNumber.integerLen;\n  const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n  // The index of the digit to where rounding is to occur\n  let roundAt = fractionSize + parsedNumber.integerLen;\n  let digit = digits[roundAt];\n  if (roundAt > 0) {\n    // Drop fractional digits beyond `roundAt`\n    digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n    // Set non-fractional digits beyond `roundAt` to 0\n    for (let j = roundAt; j < digits.length; j++) {\n      digits[j] = 0;\n    }\n  } else {\n    // We rounded to zero so reset the parsedNumber\n    fractionLen = Math.max(0, fractionLen);\n    parsedNumber.integerLen = 1;\n    digits.length = Math.max(1, roundAt = fractionSize + 1);\n    digits[0] = 0;\n    for (let i = 1; i < roundAt; i++) digits[i] = 0;\n  }\n  if (digit >= 5) {\n    if (roundAt - 1 < 0) {\n      for (let k = 0; k > roundAt; k--) {\n        digits.unshift(0);\n        parsedNumber.integerLen++;\n      }\n      digits.unshift(1);\n      parsedNumber.integerLen++;\n    } else {\n      digits[roundAt - 1]++;\n    }\n  }\n  // Pad out with zeros to get the required fraction length\n  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);\n  let dropTrailingZeros = fractionSize !== 0;\n  // Minimal length = nb of decimals required + current nb of integers\n  // Any number besides that is optional and can be removed if it's a trailing 0\n  const minLen = minFrac + parsedNumber.integerLen;\n  // Do any carrying, e.g. a digit was rounded up to 10\n  const carry = digits.reduceRight(function (carry, d, i, digits) {\n    d = d + carry;\n    digits[i] = d < 10 ? d : d - 10; // d % 10\n    if (dropTrailingZeros) {\n      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n      if (digits[i] === 0 && i >= minLen) {\n        digits.pop();\n      } else {\n        dropTrailingZeros = false;\n      }\n    }\n    return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n  }, 0);\n  if (carry) {\n    digits.unshift(carry);\n    parsedNumber.integerLen++;\n  }\n}\nfunction parseIntAutoRadix(text) {\n  const result = parseInt(text);\n  if (isNaN(result)) {\n    throw new _RuntimeError(2305 /* RuntimeErrorCode.INVALID_INTEGER_LITERAL */, ngDevMode && 'Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n\n/**\n * @publicApi\n */\nclass NgLocalization {\n  static ɵfac = function NgLocalization_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgLocalization)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgLocalization,\n    factory: function NgLocalization_Factory(__ngFactoryType__) {\n      let __ngConditionalFactory__ = null;\n      if (__ngFactoryType__) {\n        __ngConditionalFactory__ = new __ngFactoryType__();\n      } else {\n        __ngConditionalFactory__ = (locale => new NgLocaleLocalization(locale))(i0.ɵɵinject(LOCALE_ID));\n      }\n      return __ngConditionalFactory__;\n    },\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgLocalization, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: locale => new NgLocaleLocalization(locale),\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n  let key = `=${value}`;\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n  key = ngLocalization.getPluralCategory(value, locale);\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n  throw new _RuntimeError(2308 /* RuntimeErrorCode.NO_PLURAL_MESSAGE_FOUND */, ngDevMode && `No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nclass NgLocaleLocalization extends NgLocalization {\n  locale;\n  constructor(locale) {\n    super();\n    this.locale = locale;\n  }\n  getPluralCategory(value, locale) {\n    const plural = getLocalePluralCase(locale || this.locale)(value);\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\n  static ɵfac = function NgLocaleLocalization_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgLocaleLocalization)(i0.ɵɵinject(LOCALE_ID));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgLocaleLocalization,\n    factory: NgLocaleLocalization.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgLocaleLocalization, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }], null);\n})();\nconst WS_REGEXP = /\\s+/;\nconst EMPTY_ARRAY = [];\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```html\n * <some-element [ngClass]=\"stringExp|arrayExp|objExp|Set\">...</some-element>\n *\n * <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * For more simple use cases you can use the [class bindings](/guide/templates/binding#css-class-and-style-property-bindings) directly.\n * It doesn't require importing a directive.\n *\n * ```html\n * <some-element [class]=\"'first second'\">...</some-element>\n *\n * <some-element [class.expanded]=\"isExpanded\">...</some-element>\n *\n * <some-element [class]=\"['first', 'second']\">...</some-element>\n *\n * <some-element [class]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * ```\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n *\n * @see [Class bindings](/guide/templates/binding#css-class-and-style-property-bindings)\n *\n * @publicApi\n */\nclass NgClass {\n  _ngEl;\n  _renderer;\n  initialClasses = EMPTY_ARRAY;\n  rawClass;\n  stateMap = new Map();\n  constructor(_ngEl, _renderer) {\n    this._ngEl = _ngEl;\n    this._renderer = _renderer;\n  }\n  set klass(value) {\n    this.initialClasses = value != null ? value.trim().split(WS_REGEXP) : EMPTY_ARRAY;\n  }\n  set ngClass(value) {\n    this.rawClass = typeof value === 'string' ? value.trim().split(WS_REGEXP) : value;\n  }\n  /*\n  The NgClass directive uses the custom change detection algorithm for its inputs. The custom\n  algorithm is necessary since inputs are represented as complex object or arrays that need to be\n  deeply-compared.\n     This algorithm is perf-sensitive since NgClass is used very frequently and its poor performance\n  might negatively impact runtime performance of the entire change detection cycle. The design of\n  this algorithm is making sure that:\n  - there is no unnecessary DOM manipulation (CSS classes are added / removed from the DOM only when\n  needed), even if references to bound objects change;\n  - there is no memory allocation if nothing changes (even relatively modest memory allocation\n  during the change detection cycle can result in GC pauses for some of the CD cycles).\n     The algorithm works by iterating over the set of bound classes, staring with [class] binding and\n  then going over [ngClass] binding. For each CSS class name:\n  - check if it was seen before (this information is tracked in the state map) and if its value\n  changed;\n  - mark it as \"touched\" - names that are not marked are not present in the latest set of binding\n  and we can remove such class name from the internal data structures;\n     After iteration over all the CSS class names we've got data structure with all the information\n  necessary to synchronize changes to the DOM - it is enough to iterate over the state map, flush\n  changes to the DOM and reset internal data structures so those are ready for the next change\n  detection cycle.\n   */\n  ngDoCheck() {\n    // classes from the [class] binding\n    for (const klass of this.initialClasses) {\n      this._updateState(klass, true);\n    }\n    // classes from the [ngClass] binding\n    const rawClass = this.rawClass;\n    if (Array.isArray(rawClass) || rawClass instanceof Set) {\n      for (const klass of rawClass) {\n        this._updateState(klass, true);\n      }\n    } else if (rawClass != null) {\n      for (const klass of Object.keys(rawClass)) {\n        this._updateState(klass, Boolean(rawClass[klass]));\n      }\n    }\n    this._applyStateDiff();\n  }\n  _updateState(klass, nextEnabled) {\n    const state = this.stateMap.get(klass);\n    if (state !== undefined) {\n      if (state.enabled !== nextEnabled) {\n        state.changed = true;\n        state.enabled = nextEnabled;\n      }\n      state.touched = true;\n    } else {\n      this.stateMap.set(klass, {\n        enabled: nextEnabled,\n        changed: true,\n        touched: true\n      });\n    }\n  }\n  _applyStateDiff() {\n    for (const stateEntry of this.stateMap) {\n      const klass = stateEntry[0];\n      const state = stateEntry[1];\n      if (state.changed) {\n        this._toggleClass(klass, state.enabled);\n        state.changed = false;\n      } else if (!state.touched) {\n        // A class that was previously active got removed from the new collection of classes -\n        // remove from the DOM as well.\n        if (state.enabled) {\n          this._toggleClass(klass, false);\n        }\n        this.stateMap.delete(klass);\n      }\n      state.touched = false;\n    }\n  }\n  _toggleClass(klass, enabled) {\n    if (ngDevMode) {\n      if (typeof klass !== 'string') {\n        throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${_stringify(klass)}`);\n      }\n    }\n    klass = klass.trim();\n    if (klass.length > 0) {\n      klass.split(WS_REGEXP).forEach(klass => {\n        if (enabled) {\n          this._renderer.addClass(this._ngEl.nativeElement, klass);\n        } else {\n          this._renderer.removeClass(this._ngEl.nativeElement, klass);\n        }\n      });\n    }\n  }\n  static ɵfac = function NgClass_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgClass)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgClass,\n    selectors: [[\"\", \"ngClass\", \"\"]],\n    inputs: {\n      klass: [0, \"class\", \"klass\"],\n      ngClass: \"ngClass\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgClass, [{\n    type: Directive,\n    args: [{\n      selector: '[ngClass]'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }], {\n    klass: [{\n      type: Input,\n      args: ['class']\n    }],\n    ngClass: [{\n      type: Input,\n      args: ['ngClass']\n    }]\n  });\n})();\n\n/**\n * Instantiates a {@link /api/core/Component Component} type and inserts its Host View into the current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will be destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInputs`: Optional component inputs object, which will be bind to the\n * component.\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletEnvironmentInjector`: Optional custom {@link EnvironmentInjector} which will\n * provide the component's environment.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if it exists.\n *\n * * `ngComponentOutletNgModule`: Optional NgModule class reference to allow loading another\n * module dynamically, then loading a component from that module.\n *\n * * `ngComponentOutletNgModuleFactory`: Deprecated config option that allows providing optional\n * NgModule factory to allow loading another module dynamically, then loading a component from that\n * module. Use `ngComponentOutletNgModule` instead.\n *\n * ### Syntax\n *\n * Simple\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * With inputs\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   inputs: inputsExpression;\">\n * </ng-container>\n * ```\n *\n * Customized injector/content\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized NgModule reference\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModule: ngModuleClass;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nclass NgComponentOutlet {\n  _viewContainerRef;\n  // TODO(crisbeto): this should be `Type<T>`, but doing so broke a few\n  // targets in a TGP so we need to do it in a major version.\n  /** Component that should be rendered in the outlet. */\n  ngComponentOutlet = null;\n  ngComponentOutletInputs;\n  ngComponentOutletInjector;\n  ngComponentOutletEnvironmentInjector;\n  ngComponentOutletContent;\n  ngComponentOutletNgModule;\n  /**\n   * @deprecated This input is deprecated, use `ngComponentOutletNgModule` instead.\n   */\n  ngComponentOutletNgModuleFactory;\n  _componentRef;\n  _moduleRef;\n  /**\n   * A helper data structure that allows us to track inputs that were part of the\n   * ngComponentOutletInputs expression. Tracking inputs is necessary for proper removal of ones\n   * that are no longer referenced.\n   */\n  _inputsUsed = new Map();\n  /**\n   * Gets the instance of the currently-rendered component.\n   * Will be null if no component has been rendered.\n   */\n  get componentInstance() {\n    return this._componentRef?.instance ?? null;\n  }\n  constructor(_viewContainerRef) {\n    this._viewContainerRef = _viewContainerRef;\n  }\n  _needToReCreateNgModuleInstance(changes) {\n    // Note: square brackets property accessor is safe for Closure compiler optimizations (the\n    // `changes` argument of the `ngOnChanges` lifecycle hook retains the names of the fields that\n    // were changed).\n    return changes['ngComponentOutletNgModule'] !== undefined || changes['ngComponentOutletNgModuleFactory'] !== undefined;\n  }\n  _needToReCreateComponentInstance(changes) {\n    // Note: square brackets property accessor is safe for Closure compiler optimizations (the\n    // `changes` argument of the `ngOnChanges` lifecycle hook retains the names of the fields that\n    // were changed).\n    return changes['ngComponentOutlet'] !== undefined || changes['ngComponentOutletContent'] !== undefined || changes['ngComponentOutletInjector'] !== undefined || changes['ngComponentOutletEnvironmentInjector'] !== undefined || this._needToReCreateNgModuleInstance(changes);\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if (this._needToReCreateComponentInstance(changes)) {\n      this._viewContainerRef.clear();\n      this._inputsUsed.clear();\n      this._componentRef = undefined;\n      if (this.ngComponentOutlet) {\n        const injector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n        if (this._needToReCreateNgModuleInstance(changes)) {\n          this._moduleRef?.destroy();\n          if (this.ngComponentOutletNgModule) {\n            this._moduleRef = createNgModule(this.ngComponentOutletNgModule, getParentInjector(injector));\n          } else if (this.ngComponentOutletNgModuleFactory) {\n            this._moduleRef = this.ngComponentOutletNgModuleFactory.create(getParentInjector(injector));\n          } else {\n            this._moduleRef = undefined;\n          }\n        }\n        this._componentRef = this._viewContainerRef.createComponent(this.ngComponentOutlet, {\n          injector,\n          ngModuleRef: this._moduleRef,\n          projectableNodes: this.ngComponentOutletContent,\n          environmentInjector: this.ngComponentOutletEnvironmentInjector\n        });\n      }\n    }\n  }\n  /** @docs-private */\n  ngDoCheck() {\n    if (this._componentRef) {\n      if (this.ngComponentOutletInputs) {\n        for (const inputName of Object.keys(this.ngComponentOutletInputs)) {\n          this._inputsUsed.set(inputName, true);\n        }\n      }\n      this._applyInputStateDiff(this._componentRef);\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    this._moduleRef?.destroy();\n  }\n  _applyInputStateDiff(componentRef) {\n    for (const [inputName, touched] of this._inputsUsed) {\n      if (!touched) {\n        // The input that was previously active no longer exists and needs to be set to undefined.\n        componentRef.setInput(inputName, undefined);\n        this._inputsUsed.delete(inputName);\n      } else {\n        // Since touched is true, it can be asserted that the inputs object is not empty.\n        componentRef.setInput(inputName, this.ngComponentOutletInputs[inputName]);\n        this._inputsUsed.set(inputName, false);\n      }\n    }\n  }\n  static ɵfac = function NgComponentOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgComponentOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgComponentOutlet,\n    selectors: [[\"\", \"ngComponentOutlet\", \"\"]],\n    inputs: {\n      ngComponentOutlet: \"ngComponentOutlet\",\n      ngComponentOutletInputs: \"ngComponentOutletInputs\",\n      ngComponentOutletInjector: \"ngComponentOutletInjector\",\n      ngComponentOutletEnvironmentInjector: \"ngComponentOutletEnvironmentInjector\",\n      ngComponentOutletContent: \"ngComponentOutletContent\",\n      ngComponentOutletNgModule: \"ngComponentOutletNgModule\",\n      ngComponentOutletNgModuleFactory: \"ngComponentOutletNgModuleFactory\"\n    },\n    exportAs: [\"ngComponentOutlet\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgComponentOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[ngComponentOutlet]',\n      exportAs: 'ngComponentOutlet'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }], {\n    ngComponentOutlet: [{\n      type: Input\n    }],\n    ngComponentOutletInputs: [{\n      type: Input\n    }],\n    ngComponentOutletInjector: [{\n      type: Input\n    }],\n    ngComponentOutletEnvironmentInjector: [{\n      type: Input\n    }],\n    ngComponentOutletContent: [{\n      type: Input\n    }],\n    ngComponentOutletNgModule: [{\n      type: Input\n    }],\n    ngComponentOutletNgModuleFactory: [{\n      type: Input\n    }]\n  });\n})();\n// Helper function that returns an Injector instance of a parent NgModule.\nfunction getParentInjector(injector) {\n  const parentNgModule = injector.get(NgModuleRef);\n  return parentNgModule.injector;\n}\n\n/**\n * @publicApi\n *\n * @deprecated 20.0\n * The `ngFor` directive is deprecated. Use the `@for` block instead.\n */\nclass NgForOfContext {\n  $implicit;\n  ngForOf;\n  index;\n  count;\n  constructor(/** Reference to the current item from the collection. */\n  $implicit,\n  /**\n   * The value of the iterable expression. Useful when the expression is\n   * more complex then a property access, for example when using the async pipe\n   * (`userStreams | async`).\n   */\n  ngForOf, /** Returns an index of the current item in the collection. */\n  index, /** Returns total amount of items in the collection. */\n  count) {\n    this.$implicit = $implicit;\n    this.ngForOf = ngForOf;\n    this.index = index;\n    this.count = count;\n  }\n  // Indicates whether this is the first item in the collection.\n  get first() {\n    return this.index === 0;\n  }\n  // Indicates whether this is the last item in the collection.\n  get last() {\n    return this.index === this.count - 1;\n  }\n  // Indicates whether an index of this item in the collection is even.\n  get even() {\n    return this.index % 2 === 0;\n  }\n  // Indicates whether an index of this item in the collection is odd.\n  get odd() {\n    return !this.even;\n  }\n}\n/**\n * A [structural directive](guide/directives/structural-directives) that renders\n * a template for each item in a collection.\n * The directive is placed on an element, which becomes the parent\n * of the cloned templates.\n *\n * The `ngForOf` directive is generally used in the\n * [shorthand form](guide/directives/structural-directives#asterisk) `*ngFor`.\n * In this form, the template to be rendered for each iteration is the content\n * of an anchor element containing the directive.\n *\n * The following example shows the shorthand syntax with some options,\n * contained in an `<li>` element.\n *\n * ```html\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\n * ```\n *\n * The shorthand form expands into a long form that uses the `ngForOf` selector\n * on an `<ng-template>` element.\n * The content of the `<ng-template>` element is the `<li>` element that held the\n * short-form directive.\n *\n * Here is the expanded version of the short-form example.\n *\n * ```html\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * Angular automatically expands the shorthand syntax as it compiles the template.\n * The context for each embedded view is logically merged to the current component\n * context according to its lexical position.\n *\n * When using the shorthand syntax, Angular allows only [one structural directive\n * on an element](guide/directives/structural-directives#one-per-element).\n * If you want to iterate conditionally, for example,\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\n * For further discussion, see\n * [Structural Directives](guide/directives/structural-directives#one-per-element).\n *\n * @usageNotes\n *\n * ### Local variables\n *\n * `NgForOf` provides exported values that can be aliased to local variables.\n * For example:\n *\n *  ```html\n * <li *ngFor=\"let user of users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * The following exported values can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `count: number`: The length of the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ### Change propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * For more on animations, see [Transitions and Triggers](guide/animations/transition-and-triggers).\n *\n * The identities of elements in the iterator can change while the data does not.\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted).\n *\n * To avoid this expensive operation, you can customize the default tracking algorithm.\n * by supplying the `trackBy` option to `NgForOf`.\n * `trackBy` takes a function that has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * @see [Structural Directives](guide/directives/structural-directives)\n * @ngModule CommonModule\n * @publicApi\n *\n * @deprecated 20.0\n * Use the `@for` block instead. Intent to remove in v22\n */\nclass NgForOf {\n  _viewContainer;\n  _template;\n  _differs;\n  /**\n   * The value of the iterable expression, which can be used as a\n   * [template input variable](guide/directives/structural-directives#shorthand).\n   * @deprecated The `ngFor` directive is deprecated. Use the `@for` block instead.\n   */\n  set ngForOf(ngForOf) {\n    this._ngForOf = ngForOf;\n    this._ngForOfDirty = true;\n  }\n  /**\n   * Specifies a custom `TrackByFunction` to compute the identity of items in an iterable.\n   *\n   * If a custom `TrackByFunction` is not provided, `NgForOf` will use the item's [object\n   * identity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is)\n   * as the key.\n   *\n   * `NgForOf` uses the computed key to associate items in an iterable with DOM elements\n   * it produces for these items.\n   *\n   * A custom `TrackByFunction` is useful to provide good user experience in cases when items in an\n   * iterable rendered using `NgForOf` have a natural identifier (for example, custom ID or a\n   * primary key), and this iterable could be updated with new object instances that still\n   * represent the same underlying entity (for example, when data is re-fetched from the server,\n   * and the iterable is recreated and re-rendered, but most of the data is still the same).\n   *\n   * @see {@link TrackByFunction}\n   * @deprecated The `ngFor` directive is deprecated. Use the `@for` block instead.\n   */\n  set ngForTrackBy(fn) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}. ` + `See https://angular.io/api/common/NgForOf#change-propagation for more information.`);\n    }\n    this._trackByFn = fn;\n  }\n  get ngForTrackBy() {\n    return this._trackByFn;\n  }\n  _ngForOf = null;\n  _ngForOfDirty = true;\n  _differ = null;\n  // waiting for microsoft/typescript#43662 to allow the return type `TrackByFunction|undefined` for\n  // the getter\n  _trackByFn;\n  constructor(_viewContainer, _template, _differs) {\n    this._viewContainer = _viewContainer;\n    this._template = _template;\n    this._differs = _differs;\n  }\n  /**\n   * A reference to the template that is stamped out for each item in the iterable.\n   * @see [template reference variable](guide/templates/variables#template-reference-variables)\n   * @deprecated The `ngFor` directive is deprecated. Use the `@for` block instead.\n   */\n  set ngForTemplate(value) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n  /**\n   * Applies the changes when needed.\n   * @docs-private\n   */\n  ngDoCheck() {\n    if (this._ngForOfDirty) {\n      this._ngForOfDirty = false;\n      // React on ngForOf changes only once all inputs have been initialized\n      const value = this._ngForOf;\n      if (!this._differ && value) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          try {\n            // CAUTION: this logic is duplicated for production mode below, as the try-catch\n            // is only present in development builds.\n            this._differ = this._differs.find(value).create(this.ngForTrackBy);\n          } catch {\n            let errorMessage = `Cannot find a differ supporting object '${value}' of type '` + `${getTypeName(value)}'. NgFor only supports binding to Iterables, such as Arrays.`;\n            if (typeof value === 'object') {\n              errorMessage += ' Did you mean to use the keyvalue pipe?';\n            }\n            throw new _RuntimeError(-2200 /* RuntimeErrorCode.NG_FOR_MISSING_DIFFER */, errorMessage);\n          }\n        } else {\n          // CAUTION: this logic is duplicated for development mode above, as the try-catch\n          // is only present in development builds.\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        }\n      }\n    }\n    if (this._differ) {\n      const changes = this._differ.diff(this._ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n  _applyChanges(changes) {\n    const viewContainer = this._viewContainer;\n    changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n      if (item.previousIndex == null) {\n        // NgForOf is never \"null\" or \"undefined\" here because the differ detected\n        // that a new item needs to be inserted from the iterable. This implies that\n        // there is an iterable value for \"_ngForOf\".\n        viewContainer.createEmbeddedView(this._template, new NgForOfContext(item.item, this._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);\n      } else if (currentIndex == null) {\n        viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);\n      } else if (adjustedPreviousIndex !== null) {\n        const view = viewContainer.get(adjustedPreviousIndex);\n        viewContainer.move(view, currentIndex);\n        applyViewChange(view, item);\n      }\n    });\n    for (let i = 0, ilen = viewContainer.length; i < ilen; i++) {\n      const viewRef = viewContainer.get(i);\n      const context = viewRef.context;\n      context.index = i;\n      context.count = ilen;\n      context.ngForOf = this._ngForOf;\n    }\n    changes.forEachIdentityChange(record => {\n      const viewRef = viewContainer.get(record.currentIndex);\n      applyViewChange(viewRef, record);\n    });\n  }\n  /**\n   * Asserts the correct type of the context for the template that `NgForOf` will render.\n   *\n   * The presence of this method is a signal to the Ivy template type-check compiler that the\n   * `NgForOf` structural directive renders its template with a specific context type.\n   */\n  static ngTemplateContextGuard(dir, ctx) {\n    return true;\n  }\n  static ɵfac = function NgForOf_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgForOf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgForOf,\n    selectors: [[\"\", \"ngFor\", \"\", \"ngForOf\", \"\"]],\n    inputs: {\n      ngForOf: \"ngForOf\",\n      ngForTrackBy: \"ngForTrackBy\",\n      ngForTemplate: \"ngForTemplate\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgForOf, [{\n    type: Directive,\n    args: [{\n      selector: '[ngFor][ngForOf]'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: i0.IterableDiffers\n  }], {\n    ngForOf: [{\n      type: Input\n    }],\n    ngForTrackBy: [{\n      type: Input\n    }],\n    ngForTemplate: [{\n      type: Input\n    }]\n  });\n})();\nfunction applyViewChange(view, record) {\n  view.context.$implicit = record.item;\n}\nfunction getTypeName(type) {\n  return type['name'] || typeof type;\n}\n\n/**\n * A structural directive that conditionally includes a template based on the value of\n * an expression coerced to Boolean.\n * When the expression evaluates to true, Angular renders the template\n * provided in a `then` clause, and when  false or null,\n * Angular renders the template provided in an optional `else` clause. The default\n * template for the `else` clause is blank.\n *\n * A [shorthand form](guide/directives/structural-directives#asterisk) of the directive,\n * `*ngIf=\"condition\"`, is generally used, provided\n * as an attribute of the anchor element for the inserted template.\n * Angular expands this into a more explicit version, in which the anchor element\n * is contained in an `<ng-template>` element.\n *\n * Simple form with shorthand syntax:\n *\n * ```html\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\n * ```\n *\n * Simple form with expanded syntax:\n *\n * ```html\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\n * true.</div></ng-template>\n * ```\n *\n * Form with an \"else\" block:\n *\n * ```html\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Shorthand form with \"then\" and \"else\" blocks:\n *\n * ```html\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Form with storing the value locally:\n *\n * ```html\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\n * ```\n *\n * @usageNotes\n *\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\n * as seen in the following  example.\n * The default `else` template is blank.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * To display a template when `expression` evaluates to false, use an `else` template\n * binding as shown in the following example.\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\n * The template can be defined anywhere in the component view, but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using an external `then` template\n *\n * In the previous example, the then-clause template is specified inline, as the content of the\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\n * change which template to use at runtime, as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing a conditional result in a variable\n *\n * You might want to show a set of properties from the same object. If you are waiting\n * for asynchronous data, the object can be undefined.\n * In this case, you can use `ngIf` and store the result of the condition in a local\n * variable as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * This code uses only one `AsyncPipe`, so only one subscription is created.\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\n * You can then bind the local `user` repeatedly.\n *\n * The conditional displays the data only if `userStream` returns a value,\n * so you don't need to use the\n * safe-navigation-operator (`?.`)\n * to guard against null values when accessing properties.\n * You can display an alternative template while waiting for the data.\n *\n * ### Shorthand syntax\n *\n * The shorthand syntax `*ngIf` expands into two separate template specifications\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\n * that is meant to show a loading page while waiting for data to be loaded.\n *\n * ```html\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\n *  ...\n * </div>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * You can see that the \"else\" clause references the `<ng-template>`\n * with the `#loading` label, and the template for the \"then\" clause\n * is provided as the content of the anchor element.\n *\n * However, when Angular expands the shorthand syntax, it creates\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\n * The anchor element containing the template for the \"then\" clause becomes\n * the content of this unlabeled `<ng-template>` tag.\n *\n * ```html\n * <ng-template [ngIf]=\"heroes\" [ngIfElse]=\"loading\">\n *  <div class=\"hero-list\">\n *   ...\n *  </div>\n * </ng-template>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * The presence of the implicit template object has implications for the nesting of\n * structural directives. For more on this subject, see\n * [Structural Directives](guide/directives/structural-directives#one-per-element).\n *\n * @ngModule CommonModule\n * @publicApi\n *\n * @deprecated 20.0\n * Use the `@if` block instead. Intent to remove in v22\n */\nclass NgIf {\n  _viewContainer;\n  _context = new NgIfContext();\n  _thenTemplateRef = null;\n  _elseTemplateRef = null;\n  _thenViewRef = null;\n  _elseViewRef = null;\n  constructor(_viewContainer, templateRef) {\n    this._viewContainer = _viewContainer;\n    this._thenTemplateRef = templateRef;\n  }\n  /**\n   * The Boolean expression to evaluate as the condition for showing a template.\n   * @deprecated Use the `@if` block instead. Intent to remove in v22\n   */\n  set ngIf(condition) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n  /**\n   * A template to show if the condition expression evaluates to true.\n   * @deprecated Use the `@if` block instead. Intent to remove in v22\n   */\n  set ngIfThen(templateRef) {\n    assertTemplate(templateRef, (typeof ngDevMode === 'undefined' || ngDevMode) && 'ngIfThen');\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null; // clear previous view if any.\n    this._updateView();\n  }\n  /**\n   * A template to show if the condition expression evaluates to false.\n   * @deprecated Use the `@if` block instead. Intent to remove in v22\n   */\n  set ngIfElse(templateRef) {\n    assertTemplate(templateRef, (typeof ngDevMode === 'undefined' || ngDevMode) && 'ngIfElse');\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null; // clear previous view if any.\n    this._updateView();\n  }\n  _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\n  /** @internal */\n  static ngIfUseIfTypeGuard;\n  /**\n   * Assert the correct type of the expression bound to the `ngIf` input within the template.\n   *\n   * The presence of this static field is a signal to the Ivy template type check compiler that\n   * when the `NgIf` structural directive renders its template, the type of the expression bound\n   * to `ngIf` should be narrowed in some way. For `NgIf`, the binding expression itself is used to\n   * narrow its type, which allows the strictNullChecks feature of TypeScript to work with `NgIf`.\n   */\n  static ngTemplateGuard_ngIf;\n  /**\n   * Asserts the correct type of the context for the template that `NgIf` will render.\n   *\n   * The presence of this method is a signal to the Ivy template type-check compiler that the\n   * `NgIf` structural directive renders its template with a specific context type.\n   */\n  static ngTemplateContextGuard(dir, ctx) {\n    return true;\n  }\n  static ɵfac = function NgIf_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgIf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgIf,\n    selectors: [[\"\", \"ngIf\", \"\"]],\n    inputs: {\n      ngIf: \"ngIf\",\n      ngIfThen: \"ngIfThen\",\n      ngIfElse: \"ngIfElse\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgIf, [{\n    type: Directive,\n    args: [{\n      selector: '[ngIf]'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.TemplateRef\n  }], {\n    ngIf: [{\n      type: Input\n    }],\n    ngIfThen: [{\n      type: Input\n    }],\n    ngIfElse: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @publicApi\n *\n * @deprecated 20.0\n * The ngIf directive is deprecated in favor of the @if block instead.\n */\nclass NgIfContext {\n  $implicit = null;\n  ngIf = null;\n}\nfunction assertTemplate(templateRef, property) {\n  if (templateRef && !templateRef.createEmbeddedView) {\n    throw new _RuntimeError(2020 /* RuntimeErrorCode.NG_IF_NOT_A_TEMPLATE_REF */, (typeof ngDevMode === 'undefined' || ngDevMode) && `${property} must be a TemplateRef, but received '${_stringify(templateRef)}'.`);\n  }\n}\nclass SwitchView {\n  _viewContainerRef;\n  _templateRef;\n  _created = false;\n  constructor(_viewContainerRef, _templateRef) {\n    this._viewContainerRef = _viewContainerRef;\n    this._templateRef = _templateRef;\n  }\n  create() {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n  destroy() {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n  enforceState(created) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n/**\n * @ngModule CommonModule\n *\n * @description\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see {@link NgSwitchCase}\n * @see {@link NgSwitchDefault}\n * @see [Structural Directives](guide/directives/structural-directives)\n *\n * @deprecated 20.0\n * Use the `@switch` block instead. Intent to remove in v22\n */\nclass NgSwitch {\n  _defaultViews = [];\n  _defaultUsed = false;\n  _caseCount = 0;\n  _lastCaseCheckIndex = 0;\n  _lastCasesMatched = false;\n  _ngSwitch;\n  /** @deprecated Use the `@switch` block instead. Intent to remove in v22 */\n  set ngSwitch(newValue) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n  /** @internal */\n  _addCase() {\n    return this._caseCount++;\n  }\n  /** @internal */\n  _addDefault(view) {\n    this._defaultViews.push(view);\n  }\n  /** @internal */\n  _matchCase(value) {\n    const matched = value === this._ngSwitch;\n    this._lastCasesMatched ||= matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n  _updateDefaultCases(useDefault) {\n    if (this._defaultViews.length > 0 && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (const defaultView of this._defaultViews) {\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\n  static ɵfac = function NgSwitch_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgSwitch)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgSwitch,\n    selectors: [[\"\", \"ngSwitch\", \"\"]],\n    inputs: {\n      ngSwitch: \"ngSwitch\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSwitch, [{\n    type: Directive,\n    args: [{\n      selector: '[ngSwitch]'\n    }]\n  }], null, {\n    ngSwitch: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * As of Angular v17 the NgSwitch directive uses strict equality comparison (`===`) instead of\n * loose equality (`==`) to match different cases.\n *\n * @publicApi\n * @see {@link NgSwitch}\n * @see {@link NgSwitchDefault}\n *\n * @deprecated 20.0\n * Use the `@case` block within a `@switch` block instead. Intent to remove in v22\n */\nclass NgSwitchCase {\n  ngSwitch;\n  _view;\n  /**\n   * Stores the HTML template to be selected on match.\n   * @deprecated Use the `@case` block within a `@switch` block instead. Intent to remove in v22\n   */\n  ngSwitchCase;\n  constructor(viewContainer, templateRef, ngSwitch) {\n    this.ngSwitch = ngSwitch;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n      throwNgSwitchProviderNotFoundError('ngSwitchCase', 'NgSwitchCase');\n    }\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n  /**\n   * Performs case matching. For internal use only.\n   * @docs-private\n   */\n  ngDoCheck() {\n    this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));\n  }\n  static ɵfac = function NgSwitchCase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgSwitchCase)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(NgSwitch, 9));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgSwitchCase,\n    selectors: [[\"\", \"ngSwitchCase\", \"\"]],\n    inputs: {\n      ngSwitchCase: \"ngSwitchCase\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSwitchCase, [{\n    type: Directive,\n    args: [{\n      selector: '[ngSwitchCase]'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: NgSwitch,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngSwitchCase: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see {@link NgSwitch}\n * @see {@link NgSwitchCase}\n *\n * @deprecated 20.0\n * Use the `@default` block within a `@switch` block instead. Intent to remove in v22\n */\nclass NgSwitchDefault {\n  constructor(viewContainer, templateRef, ngSwitch) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n      throwNgSwitchProviderNotFoundError('ngSwitchDefault', 'NgSwitchDefault');\n    }\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\n  static ɵfac = function NgSwitchDefault_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgSwitchDefault)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(NgSwitch, 9));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgSwitchDefault,\n    selectors: [[\"\", \"ngSwitchDefault\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSwitchDefault, [{\n    type: Directive,\n    args: [{\n      selector: '[ngSwitchDefault]'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: NgSwitch,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], null);\n})();\nfunction throwNgSwitchProviderNotFoundError(attrName, directiveName) {\n  throw new _RuntimeError(2000 /* RuntimeErrorCode.PARENT_NG_SWITCH_NOT_FOUND */, `An element with the \"${attrName}\" attribute ` + `(matching the \"${directiveName}\" directive) must be located inside an element with the \"ngSwitch\" attribute ` + `(matching \"NgSwitch\" directive)`);\n}\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```html\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nclass NgPlural {\n  _localization;\n  _activeView;\n  _caseViews = {};\n  constructor(_localization) {\n    this._localization = _localization;\n  }\n  set ngPlural(value) {\n    this._updateView(value);\n  }\n  addCase(value, switchView) {\n    this._caseViews[value] = switchView;\n  }\n  _updateView(switchValue) {\n    this._clearViews();\n    const cases = Object.keys(this._caseViews);\n    const key = getPluralCategory(switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n  _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n  _activateView(view) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\n  static ɵfac = function NgPlural_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgPlural)(i0.ɵɵdirectiveInject(NgLocalization));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgPlural,\n    selectors: [[\"\", \"ngPlural\", \"\"]],\n    inputs: {\n      ngPlural: \"ngPlural\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgPlural, [{\n    type: Directive,\n    args: [{\n      selector: '[ngPlural]'\n    }]\n  }], () => [{\n    type: NgLocalization\n  }], {\n    ngPlural: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```html\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nclass NgPluralCase {\n  value;\n  constructor(value, template, viewContainer, ngPlural) {\n    this.value = value;\n    const isANumber = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\n  static ɵfac = function NgPluralCase_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgPluralCase)(i0.ɵɵinjectAttribute('ngPluralCase'), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgPlural, 1));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgPluralCase,\n    selectors: [[\"\", \"ngPluralCase\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgPluralCase, [{\n    type: Directive,\n    args: [{\n      selector: '[ngPluralCase]'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['ngPluralCase']\n    }]\n  }, {\n    type: i0.TemplateRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: NgPlural,\n    decorators: [{\n      type: Host\n    }]\n  }], null);\n})();\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n *\n * Set the width of the containing element to a pixel value returned by an expression.\n *\n * ```html\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * ```\n *\n * Set a collection of style values using an expression that returns key-value pairs.\n *\n * ```html\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * For more simple use cases you can use the [style bindings](/guide/templates/binding#css-class-and-style-property-bindings) directly.\n * It doesn't require importing a directive.\n *\n * Set the font of the containing element to the result of an expression.\n *\n * ```html\n * <some-element [style]=\"{'font-style': styleExp}\">...</some-element>\n * ```\n *\n * @description\n *\n * An attribute directive that updates styles for the containing HTML element.\n * Sets one or more style properties, specified as colon-separated key-value pairs.\n * The key is a style name, with an optional `.<unit>` suffix\n * (such as 'top.px', 'font-style.em').\n * The value is an expression to be evaluated.\n * The resulting non-null value, expressed in the given unit,\n * is assigned to the given style property.\n * If the result of evaluation is null, the corresponding style is removed.\n *\n * @see [Style bindings](/guide/templates/binding#css-class-and-style-property-bindings)\n *\n * @publicApi\n */\nclass NgStyle {\n  _ngEl;\n  _differs;\n  _renderer;\n  _ngStyle = null;\n  _differ = null;\n  constructor(_ngEl, _differs, _renderer) {\n    this._ngEl = _ngEl;\n    this._differs = _differs;\n    this._renderer = _renderer;\n  }\n  set ngStyle(values) {\n    this._ngStyle = values;\n    if (!this._differ && values) {\n      this._differ = this._differs.find(values).create();\n    }\n  }\n  ngDoCheck() {\n    if (this._differ) {\n      const changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n  _setStyle(nameAndUnit, value) {\n    const [name, unit] = nameAndUnit.split('.');\n    const flags = name.indexOf('-') === -1 ? undefined : RendererStyleFlags2.DashCase;\n    if (value != null) {\n      this._renderer.setStyle(this._ngEl.nativeElement, name, unit ? `${value}${unit}` : value, flags);\n    } else {\n      this._renderer.removeStyle(this._ngEl.nativeElement, name, flags);\n    }\n  }\n  _applyChanges(changes) {\n    changes.forEachRemovedItem(record => this._setStyle(record.key, null));\n    changes.forEachAddedItem(record => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem(record => this._setStyle(record.key, record.currentValue));\n  }\n  static ɵfac = function NgStyle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgStyle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgStyle,\n    selectors: [[\"\", \"ngStyle\", \"\"]],\n    inputs: {\n      ngStyle: \"ngStyle\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgStyle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngStyle]'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.KeyValueDiffers\n  }, {\n    type: i0.Renderer2\n  }], {\n    ngStyle: [{\n      type: Input,\n      args: ['ngStyle']\n    }]\n  });\n})();\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```html\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nclass NgTemplateOutlet {\n  _viewContainerRef;\n  _viewRef = null;\n  /**\n   * A context object to attach to the {@link EmbeddedViewRef}. This should be an\n   * object, the object's keys will be available for binding by the local template `let`\n   * declarations.\n   * Using the key `$implicit` in the context object will set its value as default.\n   */\n  ngTemplateOutletContext = null;\n  /**\n   * A string defining the template reference and optionally the context object for the template.\n   */\n  ngTemplateOutlet = null;\n  /** Injector to be used within the embedded view. */\n  ngTemplateOutletInjector = null;\n  constructor(_viewContainerRef) {\n    this._viewContainerRef = _viewContainerRef;\n  }\n  ngOnChanges(changes) {\n    if (this._shouldRecreateView(changes)) {\n      const viewContainerRef = this._viewContainerRef;\n      if (this._viewRef) {\n        viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\n      }\n      // If there is no outlet, clear the destroyed view ref.\n      if (!this.ngTemplateOutlet) {\n        this._viewRef = null;\n        return;\n      }\n      // Create a context forward `Proxy` that will always bind to the user-specified context,\n      // without having to destroy and re-create views whenever the context changes.\n      const viewContext = this._createContextForwardProxy();\n      this._viewRef = viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, viewContext, {\n        injector: this.ngTemplateOutletInjector ?? undefined\n      });\n    }\n  }\n  /**\n   * We need to re-create existing embedded view if either is true:\n   * - the outlet changed.\n   * - the injector changed.\n   */\n  _shouldRecreateView(changes) {\n    return !!changes['ngTemplateOutlet'] || !!changes['ngTemplateOutletInjector'];\n  }\n  /**\n   * For a given outlet instance, we create a proxy object that delegates\n   * to the user-specified context. This allows changing, or swapping out\n   * the context object completely without having to destroy/re-create the view.\n   */\n  _createContextForwardProxy() {\n    return new Proxy({}, {\n      set: (_target, prop, newValue) => {\n        if (!this.ngTemplateOutletContext) {\n          return false;\n        }\n        return Reflect.set(this.ngTemplateOutletContext, prop, newValue);\n      },\n      get: (_target, prop, receiver) => {\n        if (!this.ngTemplateOutletContext) {\n          return undefined;\n        }\n        return Reflect.get(this.ngTemplateOutletContext, prop, receiver);\n      }\n    });\n  }\n  static ɵfac = function NgTemplateOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgTemplateOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgTemplateOutlet,\n    selectors: [[\"\", \"ngTemplateOutlet\", \"\"]],\n    inputs: {\n      ngTemplateOutletContext: \"ngTemplateOutletContext\",\n      ngTemplateOutlet: \"ngTemplateOutlet\",\n      ngTemplateOutletInjector: \"ngTemplateOutletInjector\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgTemplateOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[ngTemplateOutlet]'\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }], {\n    ngTemplateOutletContext: [{\n      type: Input\n    }],\n    ngTemplateOutlet: [{\n      type: Input\n    }],\n    ngTemplateOutletInjector: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nconst COMMON_DIRECTIVES = [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase];\nfunction invalidPipeArgumentError(type, value) {\n  return new _RuntimeError(2100 /* RuntimeErrorCode.INVALID_PIPE_ARGUMENT */, ngDevMode && `InvalidPipeArgument: '${value}' for pipe '${_stringify(type)}'`);\n}\nclass SubscribableStrategy {\n  createSubscription(async, updateLatestValue, onError) {\n    // Subscription can be side-effectful, and we don't want any signal reads which happen in the\n    // side effect of the subscription to be tracked by a component's template when that\n    // subscription is triggered via the async pipe. So we wrap the subscription in `untracked` to\n    // decouple from the current reactive context.\n    //\n    // `untracked` also prevents signal _writes_ which happen in the subscription side effect from\n    // being treated as signal writes during the template evaluation (which throws errors).\n    return untracked(() => async.subscribe({\n      next: updateLatestValue,\n      error: onError\n    }));\n  }\n  dispose(subscription) {\n    // See the comment in `createSubscription` above on the use of `untracked`.\n    untracked(() => subscription.unsubscribe());\n  }\n}\nclass PromiseStrategy {\n  createSubscription(async, updateLatestValue, onError) {\n    // According to the promise specification, promises are not cancellable by default.\n    // Once a promise is created, it will either resolve or reject, and it doesn't\n    // provide a built-in mechanism to cancel it.\n    // There may be situations where a promise is provided, and it either resolves after\n    // the pipe has been destroyed or never resolves at all. If the promise never\n    // resolves — potentially due to factors beyond our control, such as third-party\n    // libraries — this can lead to a memory leak.\n    // When we use `async.then(updateLatestValue)`, the engine captures a reference to the\n    // `updateLatestValue` function. This allows the promise to invoke that function when it\n    // resolves. In this case, the promise directly captures a reference to the\n    // `updateLatestValue` function. If the promise resolves later, it retains a reference\n    // to the original `updateLatestValue`, meaning that even if the context where\n    // `updateLatestValue` was defined has been destroyed, the function reference remains in memory.\n    // This can lead to memory leaks if `updateLatestValue` is no longer needed or if it holds\n    // onto resources that should be released.\n    // When we do `async.then(v => ...)` the promise captures a reference to the lambda\n    // function (the arrow function).\n    // When we assign `updateLatestValue = null` within the context of an `unsubscribe` function,\n    // we're changing the reference of `updateLatestValue` in the current scope to `null`.\n    // The lambda will no longer have access to it after the assignment, effectively\n    // preventing any further calls to the original function and allowing it to be garbage collected.\n    async.then(\n    // Using optional chaining because we may have set it to `null`; since the promise\n    // is async, the view might be destroyed by the time the promise resolves.\n    v => updateLatestValue?.(v), e => onError?.(e));\n    return {\n      unsubscribe: () => {\n        updateLatestValue = null;\n        onError = null;\n      }\n    };\n  }\n  dispose(subscription) {\n    subscription.unsubscribe();\n  }\n}\nconst _promiseStrategy = new PromiseStrategy();\nconst _subscribableStrategy = new SubscribableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks. When the reference of the expression changes, the `async` pipe\n * automatically unsubscribes from the old `Observable` or `Promise` and subscribes to the new one.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nclass AsyncPipe {\n  _ref;\n  _latestValue = null;\n  markForCheckOnValueUpdate = true;\n  _subscription = null;\n  _obj = null;\n  _strategy = null;\n  applicationErrorHandler = inject(_INTERNAL_APPLICATION_ERROR_HANDLER);\n  constructor(ref) {\n    // Assign `ref` into `this._ref` manually instead of declaring `_ref` in the constructor\n    // parameter list, as the type of `this._ref` includes `null` unlike the type of `ref`.\n    this._ref = ref;\n  }\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._dispose();\n    }\n    // Clear the `ChangeDetectorRef` and its association with the view data, to mitigate\n    // potential memory leaks in Observables that could otherwise cause the view data to\n    // be retained.\n    // https://github.com/angular/angular/issues/17624\n    this._ref = null;\n  }\n  transform(obj) {\n    if (!this._obj) {\n      if (obj) {\n        try {\n          // Only call `markForCheck` if the value is updated asynchronously.\n          // Synchronous updates _during_ subscription should not wastefully mark for check -\n          // this value is already going to be returned from the transform function.\n          this.markForCheckOnValueUpdate = false;\n          this._subscribe(obj);\n        } finally {\n          this.markForCheckOnValueUpdate = true;\n        }\n      }\n      return this._latestValue;\n    }\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform(obj);\n    }\n    return this._latestValue;\n  }\n  _subscribe(obj) {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(obj, value => this._updateLatestValue(obj, value), e => this.applicationErrorHandler(e));\n  }\n  _selectStrategy(obj) {\n    if (_isPromise(obj)) {\n      return _promiseStrategy;\n    }\n    if (_isSubscribable(obj)) {\n      return _subscribableStrategy;\n    }\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n  _dispose() {\n    // Note: `dispose` is only called if a subscription has been initialized before, indicating\n    // that `this._strategy` is also available.\n    this._strategy.dispose(this._subscription);\n    this._latestValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n  _updateLatestValue(async, value) {\n    if (async === this._obj) {\n      this._latestValue = value;\n      if (this.markForCheckOnValueUpdate) {\n        this._ref?.markForCheck();\n      }\n    }\n  }\n  static ɵfac = function AsyncPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AsyncPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"async\",\n    type: AsyncPipe,\n    pure: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsyncPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'async',\n      pure: false\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\n\n/**\n * Transforms text to all lower case.\n *\n * @see {@link UpperCasePipe}\n * @see {@link TitleCasePipe}\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass LowerCasePipe {\n  transform(value) {\n    if (value == null) return null;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\n  static ɵfac = function LowerCasePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LowerCasePipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"lowercase\",\n    type: LowerCasePipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LowerCasePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'lowercase'\n    }]\n  }], null, null);\n})();\n//\n// Regex below matches any Unicode word and number compatible with ES5. In ES2018 the same result\n// can be achieved by using /[0-9\\p{L}]\\S*/gu and also known as Unicode Property Escapes\n// (https://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+%2F%5B0-9%5Cp%7BL%7D%5D%5CS*%2Fgu%3B%0A%0A&unicodePropertyEscape=1\n//\nconst unicodeWordMatch = /(?:[0-9A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see {@link LowerCasePipe}\n * @see {@link UpperCasePipe}\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * {@example common/pipes/ts/titlecase_pipe.ts region='TitleCasePipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass TitleCasePipe {\n  transform(value) {\n    if (value == null) return null;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n    return value.replace(unicodeWordMatch, txt => txt[0].toUpperCase() + txt.slice(1).toLowerCase());\n  }\n  static ɵfac = function TitleCasePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TitleCasePipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"titlecase\",\n    type: TitleCasePipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleCasePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'titlecase'\n    }]\n  }], null, null);\n})();\n/**\n * Transforms text to all upper case.\n * @see {@link LowerCasePipe}\n * @see {@link TitleCasePipe}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass UpperCasePipe {\n  transform(value) {\n    if (value == null) return null;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\n  static ɵfac = function UpperCasePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UpperCasePipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"uppercase\",\n    type: UpperCasePipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UpperCasePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'uppercase'\n    }]\n  }], null, null);\n})();\n\n/**\n * The default date format of Angular date pipe, which corresponds to the following format:\n * `'MMM d,y'` (e.g. `Jun 15, 2015`)\n */\nconst DEFAULT_DATE_FORMAT = 'mediumDate';\n\n/**\n * Optionally-provided default timezone to use for all instances of `DatePipe` (such as `'+0430'`).\n * If the value isn't provided, the `DatePipe` will use the end-user's local system timezone.\n *\n * @deprecated use DATE_PIPE_DEFAULT_OPTIONS token to configure DatePipe\n */\nconst DATE_PIPE_DEFAULT_TIMEZONE = new InjectionToken(ngDevMode ? 'DATE_PIPE_DEFAULT_TIMEZONE' : '');\n/**\n * DI token that allows to provide default configuration for the `DatePipe` instances in an\n * application. The value is an object which can include the following fields:\n * - `dateFormat`: configures the default date format. If not provided, the `DatePipe`\n * will use the 'mediumDate' as a value.\n * - `timezone`: configures the default timezone. If not provided, the `DatePipe` will\n * use the end-user's local system timezone.\n *\n * @see {@link DatePipeConfig}\n *\n * @usageNotes\n *\n * Various date pipe default values can be overwritten by providing this token with\n * the value that has this interface.\n *\n * For example:\n *\n * Override the default date format by providing a value using the token:\n * ```ts\n * providers: [\n *   {provide: DATE_PIPE_DEFAULT_OPTIONS, useValue: {dateFormat: 'shortDate'}}\n * ]\n * ```\n *\n * Override the default timezone by providing a value using the token:\n * ```ts\n * providers: [\n *   {provide: DATE_PIPE_DEFAULT_OPTIONS, useValue: {timezone: '-1200'}}\n * ]\n * ```\n */\nconst DATE_PIPE_DEFAULT_OPTIONS = new InjectionToken(ngDevMode ? 'DATE_PIPE_DEFAULT_OPTIONS' : '');\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * `DatePipe` is executed only when it detects a pure change to the input value.\n * A pure change is either a change to a primitive input value\n * (such as `String`, `Number`, `Boolean`, or `Symbol`),\n * or a changed object reference (such as `Date`, `Array`, `Function`, or `Object`).\n *\n * Note that mutating a `Date` object does not cause the pipe to be rendered again.\n * To ensure that the pipe is executed, you must create a new `Date` object.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n/format-data-locale) for more information.\n *\n * The time zone of the formatted value can be specified either by passing it in as the second\n * parameter of the pipe, or by setting the default through the `DATE_PIPE_DEFAULT_OPTIONS`\n * injection token. The value that is passed in as the second parameter takes precedence over\n * the one defined using the injection token.\n *\n * @see {@link formatDate}\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * | Option        | Equivalent to                       | Examples (given in `en-US` locale)              |\n * |---------------|-------------------------------------|-------------------------------------------------|\n * | `'short'`     | `'M/d/yy, h:mm a'`                  | `6/15/15, 9:03 AM`                              |\n * | `'medium'`    | `'MMM d, y, h:mm:ss a'`             | `Jun 15, 2015, 9:03:01 AM`                      |\n * | `'long'`      | `'MMMM d, y, h:mm:ss a z'`          | `June 15, 2015 at 9:03:01 AM GMT+1`             |\n * | `'full'`      | `'EEEE, MMMM d, y, h:mm:ss a zzzz'` | `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00` |\n * | `'shortDate'` | `'M/d/yy'`                          | `6/15/15`                                       |\n * | `'mediumDate'`| `'MMM d, y'`                        | `Jun 15, 2015`                                  |\n * | `'longDate'`  | `'MMMM d, y'`                       | `June 15, 2015`                                 |\n * | `'fullDate'`  | `'EEEE, MMMM d, y'`                 | `Monday, June 15, 2015`                         |\n * | `'shortTime'` | `'h:mm a'`                          | `9:03 AM`                                       |\n * | `'mediumTime'`| `'h:mm:ss a'`                       | `9:03:01 AM`                                    |\n * | `'longTime'`  | `'h:mm:ss a z'`                     | `9:03:01 AM GMT+1`                              |\n * | `'fullTime'`  | `'h:mm:ss a zzzz'`                  | `9:03:01 AM GMT+01:00`                          |\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type              | Format      | Description                                                   | Example Value                                              |\n *  |-------------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                     | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                         | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                         | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year                    | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                         | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                         | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                         | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | ISO Week-numbering year | Y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                         | YY          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                         | YYY         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                         | YYYY        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month                   | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                         | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                         | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                         | MMMM        | Wide                                                          | September                                                  |\n *  |                         | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone        | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                         | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                         | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                         | LLLL        | Wide                                                          | September                                                  |\n *  |                         | LLLLL       | Narrow                                                        | S                                                          |\n *  | ISO Week of year        | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                         | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month           | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month            | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                         | dd          | Numeric: 2 digits + zero padded                               | 01                                                         |\n *  | Week day                | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                         | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                         | EEEEE       | Narrow                                                        | T                                                          |\n *  |                         | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Week day standalone     | c, cc       | Numeric: 1 digit                                              | 2                                                          |\n *  |                         | ccc         | Abbreviated                                                   | Tue                                                        |\n *  |                         | cccc        | Wide                                                          | Tuesday                                                    |\n *  |                         | ccccc       | Narrow                                                        | T                                                          |\n *  |                         | cccccc      | Short                                                         | Tu                                                         |\n *  | Period                  | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                         | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                         | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*                 | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                         | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                         | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone*      | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                         | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                         | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12               | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                         | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23               | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                         | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute                  | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                         | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second                  | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                         | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds      | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                         | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                         | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone                    | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                         | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                         | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                         | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                         | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                         | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                         | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mm:ss' }}       // output is '43:11'\n * {{ dateObj | date:\"MMM dd, yyyy 'at' hh:mm a\" }}  // output is 'Jun 15, 2015 at 09:43 PM'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```angular-ts\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\nclass DatePipe {\n  locale;\n  defaultTimezone;\n  defaultOptions;\n  constructor(locale, defaultTimezone, defaultOptions) {\n    this.locale = locale;\n    this.defaultTimezone = defaultTimezone;\n    this.defaultOptions = defaultOptions;\n  }\n  transform(value, format, timezone, locale) {\n    if (value == null || value === '' || value !== value) return null;\n    try {\n      const _format = format ?? this.defaultOptions?.dateFormat ?? DEFAULT_DATE_FORMAT;\n      const _timezone = timezone ?? this.defaultOptions?.timezone ?? this.defaultTimezone ?? undefined;\n      return formatDate(value, _format, locale || this.locale, _timezone);\n    } catch (error) {\n      throw invalidPipeArgumentError(DatePipe, error.message);\n    }\n  }\n  static ɵfac = function DatePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DatePipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16), i0.ɵɵdirectiveInject(DATE_PIPE_DEFAULT_TIMEZONE, 24), i0.ɵɵdirectiveInject(DATE_PIPE_DEFAULT_OPTIONS, 24));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"date\",\n    type: DatePipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'date'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DATE_PIPE_DEFAULT_TIMEZONE]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DATE_PIPE_DEFAULT_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\nconst _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nclass I18nPluralPipe {\n  _localization;\n  constructor(_localization) {\n    this._localization = _localization;\n  }\n  /**\n   * @param value the number to be formatted\n   * @param pluralMap an object that mimics the ICU format, see\n   * https://unicode-org.github.io/icu/userguide/format_parse/messages/.\n   * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n   * default).\n   */\n  transform(value, pluralMap, locale) {\n    if (value == null) return '';\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n    const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\n  static ɵfac = function I18nPluralPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || I18nPluralPipe)(i0.ɵɵdirectiveInject(NgLocalization, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"i18nPlural\",\n    type: I18nPluralPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(I18nPluralPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'i18nPlural'\n    }]\n  }], () => [{\n    type: NgLocalization\n  }], null);\n})();\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nclass I18nSelectPipe {\n  /**\n   * @param value a string to be internationalized.\n   * @param mapping an object that indicates the text that should be displayed\n   * for different values of the provided `value`.\n   */\n  transform(value, mapping) {\n    if (value == null) return '';\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n    return '';\n  }\n  static ɵfac = function I18nSelectPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || I18nSelectPipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"i18nSelect\",\n    type: I18nSelectPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(I18nSelectPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'i18nSelect'\n    }]\n  }], null, null);\n})();\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nclass JsonPipe {\n  /**\n   * @param value A value of any type to convert into a JSON-format string.\n   */\n  transform(value) {\n    return JSON.stringify(value, null, 2);\n  }\n  static ɵfac = function JsonPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || JsonPipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"json\",\n    type: JsonPipe,\n    pure: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'json',\n      pure: false\n    }]\n  }], null, null);\n})();\nfunction makeKeyValuePair(key, value) {\n  return {\n    key: key,\n    value: value\n  };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n * Passing `null` as the compareFn will use natural ordering of the input.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\n * keyvalue pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nclass KeyValuePipe {\n  differs;\n  constructor(differs) {\n    this.differs = differs;\n  }\n  differ;\n  keyValues = [];\n  compareFn = defaultComparator;\n  transform(input, compareFn = defaultComparator) {\n    if (!input || !(input instanceof Map) && typeof input !== 'object') {\n      return null;\n    }\n    // make a differ for whatever type we've been passed in\n    this.differ ??= this.differs.find(input).create();\n    const differChanges = this.differ.diff(input);\n    const compareFnChanged = compareFn !== this.compareFn;\n    if (differChanges) {\n      this.keyValues = [];\n      differChanges.forEachItem(r => {\n        this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n      });\n    }\n    if (differChanges || compareFnChanged) {\n      if (compareFn) {\n        this.keyValues.sort(compareFn);\n      }\n      this.compareFn = compareFn;\n    }\n    return this.keyValues;\n  }\n  static ɵfac = function KeyValuePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || KeyValuePipe)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"keyvalue\",\n    type: KeyValuePipe,\n    pure: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyValuePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'keyvalue',\n      pure: false\n    }]\n  }], () => [{\n    type: i0.KeyValueDiffers\n  }], null);\n})();\nfunction defaultComparator(keyValueA, keyValueB) {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // If both keys are the same, return 0 (no sorting needed).\n  if (a === b) return 0;\n  // If one of the keys is `null` or `undefined`, place it at the end of the sort.\n  if (a == null) return 1; // `a` comes after `b`.\n  if (b == null) return -1; // `b` comes after `a`.\n  // If both keys are strings, compare them lexicographically.\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  // If both keys are numbers, sort them numerically.\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  // If both keys are booleans, sort `false` before `true`.\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // Fallback case: if keys are of different types, compare their string representations.\n  const aString = String(a);\n  const bString = String(b);\n  // Compare the string representations lexicographically.\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a value according to digit options and locale rules.\n * Locale determines group sizing and separator,\n * decimal point character, and other locale-specific configurations.\n *\n * @see {@link formatNumber}\n *\n * @usageNotes\n *\n * ### digitsInfo\n *\n * The value's decimal representation is specified by the `digitsInfo`\n * parameter, written in the following format:<br>\n *\n * ```\n * {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}\n * ```\n *\n *  - `minIntegerDigits`:\n * The minimum number of integer digits before the decimal point.\n * Default is 1.\n *\n * - `minFractionDigits`:\n * The minimum number of digits after the decimal point.\n * Default is 0.\n *\n *  - `maxFractionDigits`:\n * The maximum number of digits after the decimal point.\n * Default is 3.\n *\n * If the formatted value is truncated it will be rounded using the \"to-nearest\" method:\n *\n * ```\n * {{3.6 | number: '1.0-0'}}\n * <!--will output '4'-->\n *\n * {{-3.6 | number:'1.0-0'}}\n * <!--will output '-4'-->\n * ```\n *\n * ### locale\n *\n * `locale` will format a value according to locale rules.\n * Locale determines group sizing and separator,\n * decimal point character, and other locale-specific configurations.\n *\n * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n *\n * See [Setting your app locale](guide/i18n/locale-id).\n *\n * ### Example\n *\n * The following code shows how the pipe transforms values\n * according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n *\n * @publicApi\n */\nclass DecimalPipe {\n  _locale;\n  constructor(_locale) {\n    this._locale = _locale;\n  }\n  transform(value, digitsInfo, locale) {\n    if (!isValue(value)) return null;\n    locale ||= this._locale;\n    try {\n      const num = strToNumber(value);\n      return formatNumber(num, locale, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(DecimalPipe, error.message);\n    }\n  }\n  static ɵfac = function DecimalPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DecimalPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"number\",\n    type: DecimalPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DecimalPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'number'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }], null);\n})();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see {@link formatPercent}\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/percent_pipe.ts region='PercentPipe'}\n *\n * @publicApi\n */\nclass PercentPipe {\n  _locale;\n  constructor(_locale) {\n    this._locale = _locale;\n  }\n  /**\n   *\n   * @param value The number to be formatted as a percentage.\n   * @param digitsInfo Decimal representation options, specified by a string\n   * in the following format:<br>\n   * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n   *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n   * Default is `1`.\n   *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n   * Default is `0`.\n   *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n   * Default is `0`.\n   * @param locale A locale code for the locale format rules to use.\n   * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n   * See [Setting your app locale](guide/i18n/locale-id).\n   */\n  transform(value, digitsInfo, locale) {\n    if (!isValue(value)) return null;\n    locale ||= this._locale;\n    try {\n      const num = strToNumber(value);\n      return formatPercent(num, locale, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(PercentPipe, error.message);\n    }\n  }\n  static ɵfac = function PercentPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PercentPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"percent\",\n    type: PercentPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PercentPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'percent'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }], null);\n})();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n *\n * @see {@link getCurrencySymbol}\n * @see {@link formatCurrency}\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/currency_pipe.ts region='CurrencyPipe'}\n *\n * @publicApi\n */\nclass CurrencyPipe {\n  _locale;\n  _defaultCurrencyCode;\n  constructor(_locale, _defaultCurrencyCode = 'USD') {\n    this._locale = _locale;\n    this._defaultCurrencyCode = _defaultCurrencyCode;\n  }\n  transform(value, currencyCode = this._defaultCurrencyCode, display = 'symbol', digitsInfo, locale) {\n    if (!isValue(value)) return null;\n    locale ||= this._locale;\n    if (typeof display === 'boolean') {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(`Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n      }\n      display = display ? 'symbol' : 'code';\n    }\n    let currency = currencyCode || this._defaultCurrencyCode;\n    if (display !== 'code') {\n      if (display === 'symbol' || display === 'symbol-narrow') {\n        currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n      } else {\n        currency = display;\n      }\n    }\n    try {\n      const num = strToNumber(value);\n      return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n    } catch (error) {\n      throw invalidPipeArgumentError(CurrencyPipe, error.message);\n    }\n  }\n  static ɵfac = function CurrencyPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CurrencyPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16), i0.ɵɵdirectiveInject(DEFAULT_CURRENCY_CODE, 16));\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"currency\",\n    type: CurrencyPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CurrencyPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'currency'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DEFAULT_CURRENCY_CODE]\n    }]\n  }], null);\n})();\nfunction isValue(value) {\n  return !(value == null || value === '' || value !== value);\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n  // Convert strings to numbers\n  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n  if (typeof value !== 'number') {\n    throw new _RuntimeError(2309 /* RuntimeErrorCode.VALUE_NOT_A_NUMBER */, ngDevMode && `${value} is not a number`);\n  }\n  return value;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nclass SlicePipe {\n  transform(value, start, end) {\n    if (value == null) return null;\n    const supports = typeof value === 'string' || Array.isArray(value);\n    if (!supports) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n    return value.slice(start, end);\n  }\n  static ɵfac = function SlicePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SlicePipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"slice\",\n    type: SlicePipe,\n    pure: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlicePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'slice',\n      pure: false\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nconst COMMON_PIPES = [AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe];\n\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nclass CommonModule {\n  static ɵfac = function CommonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CommonModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CommonModule,\n    imports: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe],\n    exports: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [COMMON_DIRECTIVES, COMMON_PIPES],\n      exports: [COMMON_DIRECTIVES, COMMON_PIPES]\n    }]\n  }], null, null);\n})();\nexport { AsyncPipe, CommonModule, CurrencyPipe, DATE_PIPE_DEFAULT_OPTIONS, DATE_PIPE_DEFAULT_TIMEZONE, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PercentPipe, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nfunction parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    for (const cookie of cookieStr.split(';')) {\n        const eqIndex = cookie.indexOf('=');\n        const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n        if (cookieName.trim() === name) {\n            return decodeURIComponent(cookieValue);\n        }\n    }\n    return null;\n}\n\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {\n}\n\nexport { XhrFactory, parseCookieValue };\n\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { AsyncPipe, CommonModule, CurrencyPipe, DATE_PIPE_DEFAULT_OPTIONS, DATE_PIPE_DEFAULT_TIMEZONE, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf as NgFor, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PercentPipe, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits } from './common_module.mjs';\nimport * as i0 from '@angular/core';\nimport { ɵregisterLocaleData as _registerLocaleData, Version, ɵɵdefineInjectable as __defineInjectable, inject, DOCUMENT, ɵformatRuntimeError as _formatRuntimeError, InjectionToken, ɵRuntimeError as _RuntimeError, Injectable, ɵIMAGE_CONFIG as _IMAGE_CONFIG, Renderer2, ElementRef, Injector, DestroyRef, ɵperformanceMarkFeature as _performanceMarkFeature, NgZone, ApplicationRef, numberAttribute, booleanAttribute, Directive, Input, ɵIMAGE_CONFIG_DEFAULTS as _IMAGE_CONFIG_DEFAULTS, ɵunwrapSafeValue as _unwrapSafeValue, ChangeDetectorRef } from '@angular/core';\nexport { DOCUMENT, ɵIMAGE_CONFIG as IMAGE_CONFIG } from '@angular/core';\nexport { XhrFactory, parseCookieValue as ɵparseCookieValue } from './xhr.mjs';\nexport { APP_BASE_HREF, BrowserPlatformLocation, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, normalizeQueryParams as ɵnormalizeQueryParams, setRootDomAdapter as ɵsetRootDomAdapter } from './location.mjs';\nexport { PlatformNavigation as ɵPlatformNavigation } from './platform_navigation.mjs';\nimport 'rxjs';\n\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n/format-data-locale) to know how to import additional locale\n * data.\n *\n * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\n *\n * @publicApi\n */\nfunction registerLocaleData(data, localeId, extraData) {\n  return _registerLocaleData(data, localeId, extraData);\n}\nconst PLATFORM_BROWSER_ID = 'browser';\nconst PLATFORM_SERVER_ID = 'server';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n  return platformId === PLATFORM_SERVER_ID;\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.1.3');\n\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nclass ViewportScroller {\n  // De-sugared tree-shakable injection\n  // See #23917\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ /* @__PURE__ */__defineInjectable({\n    token: ViewportScroller,\n    providedIn: 'root',\n    factory: () => typeof ngServerMode !== 'undefined' && ngServerMode ? new NullViewportScroller() : new BrowserViewportScroller(inject(DOCUMENT), window)\n  });\n}\n/**\n * Manages the scroll position for a browser window.\n */\nclass BrowserViewportScroller {\n  document;\n  window;\n  offset = () => [0, 0];\n  constructor(document, window) {\n    this.document = document;\n    this.window = window;\n  }\n  /**\n   * Configures the top offset used when scrolling to an anchor.\n   * @param offset A position in screen coordinates (a tuple with x and y values)\n   * or a function that returns the top offset position.\n   *\n   */\n  setOffset(offset) {\n    if (Array.isArray(offset)) {\n      this.offset = () => offset;\n    } else {\n      this.offset = offset;\n    }\n  }\n  /**\n   * Retrieves the current scroll position.\n   * @returns The position in screen coordinates.\n   */\n  getScrollPosition() {\n    return [this.window.scrollX, this.window.scrollY];\n  }\n  /**\n   * Sets the scroll position.\n   * @param position The new position in screen coordinates.\n   */\n  scrollToPosition(position, options) {\n    this.window.scrollTo({\n      ...options,\n      left: position[0],\n      top: position[1]\n    });\n  }\n  /**\n   * Scrolls to an element and attempts to focus the element.\n   *\n   * Note that the function name here is misleading in that the target string may be an ID for a\n   * non-anchor element.\n   *\n   * @param target The ID of an element or name of the anchor.\n   *\n   * @see https://html.spec.whatwg.org/#the-indicated-part-of-the-document\n   * @see https://html.spec.whatwg.org/#scroll-to-fragid\n   */\n  scrollToAnchor(target, options) {\n    const elSelected = findAnchorFromDocument(this.document, target);\n    if (elSelected) {\n      this.scrollToElement(elSelected, options);\n      // After scrolling to the element, the spec dictates that we follow the focus steps for the\n      // target. Rather than following the robust steps, simply attempt focus.\n      //\n      // @see https://html.spec.whatwg.org/#get-the-focusable-area\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOrForeignElement/focus\n      // @see https://html.spec.whatwg.org/#focusable-area\n      elSelected.focus();\n    }\n  }\n  /**\n   * Disables automatic scroll restoration provided by the browser.\n   */\n  setHistoryScrollRestoration(scrollRestoration) {\n    try {\n      this.window.history.scrollRestoration = scrollRestoration;\n    } catch {\n      console.warn(_formatRuntimeError(2400 /* RuntimeErrorCode.SCROLL_RESTORATION_UNSUPPORTED */, ngDevMode && 'Failed to set `window.history.scrollRestoration`. ' + 'This may occur when:\\n' + '• The script is running inside a sandboxed iframe\\n' + '• The window is partially navigated or inactive\\n' + '• The script is executed in an untrusted or special context (e.g., test runners, browser extensions, or content previews)\\n' + 'Scroll position may not be preserved across navigation.'));\n    }\n  }\n  /**\n   * Scrolls to an element using the native offset and the specified offset set on this scroller.\n   *\n   * The offset can be used when we know that there is a floating header and scrolling naively to an\n   * element (ex: `scrollIntoView`) leaves the element hidden behind the floating header.\n   */\n  scrollToElement(el, options) {\n    const rect = el.getBoundingClientRect();\n    const left = rect.left + this.window.pageXOffset;\n    const top = rect.top + this.window.pageYOffset;\n    const offset = this.offset();\n    this.window.scrollTo({\n      ...options,\n      left: left - offset[0],\n      top: top - offset[1]\n    });\n  }\n}\nfunction findAnchorFromDocument(document, target) {\n  const documentResult = document.getElementById(target) || document.getElementsByName(target)[0];\n  if (documentResult) {\n    return documentResult;\n  }\n  // `getElementById` and `getElementsByName` won't pierce through the shadow DOM so we\n  // have to traverse the DOM manually and do the lookup through the shadow roots.\n  if (typeof document.createTreeWalker === 'function' && document.body && typeof document.body.attachShadow === 'function') {\n    const treeWalker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT);\n    let currentNode = treeWalker.currentNode;\n    while (currentNode) {\n      const shadowRoot = currentNode.shadowRoot;\n      if (shadowRoot) {\n        // Note that `ShadowRoot` doesn't support `getElementsByName`\n        // so we have to fall back to `querySelector`.\n        const result = shadowRoot.getElementById(target) || shadowRoot.querySelector(`[name=\"${target}\"]`);\n        if (result) {\n          return result;\n        }\n      }\n      currentNode = treeWalker.nextNode();\n    }\n  }\n  return null;\n}\n/**\n * Provides an empty implementation of the viewport scroller.\n */\nclass NullViewportScroller {\n  /**\n   * Empty implementation\n   */\n  setOffset(offset) {}\n  /**\n   * Empty implementation\n   */\n  getScrollPosition() {\n    return [0, 0];\n  }\n  /**\n   * Empty implementation\n   */\n  scrollToPosition(position) {}\n  /**\n   * Empty implementation\n   */\n  scrollToAnchor(anchor) {}\n  /**\n   * Empty implementation\n   */\n  setHistoryScrollRestoration(scrollRestoration) {}\n}\n\n/**\n * Value (out of 100) of the requested quality for placeholder images.\n */\nconst PLACEHOLDER_QUALITY = '20';\n\n// Converts a string that represents a URL into a URL class instance.\nfunction getUrl(src, win) {\n  // Don't use a base URL is the URL is absolute.\n  return isAbsoluteUrl(src) ? new URL(src) : new URL(src, win.location.href);\n}\n// Checks whether a URL is absolute (i.e. starts with `http://` or `https://`).\nfunction isAbsoluteUrl(src) {\n  return /^https?:\\/\\//.test(src);\n}\n// Given a URL, extract the hostname part.\n// If a URL is a relative one - the URL is returned as is.\nfunction extractHostname(url) {\n  return isAbsoluteUrl(url) ? new URL(url).hostname : url;\n}\nfunction isValidPath(path) {\n  const isString = typeof path === 'string';\n  if (!isString || path.trim() === '') {\n    return false;\n  }\n  // Calling new URL() will throw if the path string is malformed\n  try {\n    const url = new URL(path);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction normalizePath(path) {\n  return path.endsWith('/') ? path.slice(0, -1) : path;\n}\nfunction normalizeSrc(src) {\n  return src.startsWith('/') ? src.slice(1) : src;\n}\n\n/**\n * Noop image loader that does no transformation to the original src and just returns it as is.\n * This loader is used as a default one if more specific logic is not provided in an app config.\n *\n * @see {@link ImageLoader}\n * @see {@link NgOptimizedImage}\n */\nconst noopImageLoader = config => config.src;\n/**\n * Injection token that configures the image loader function.\n *\n * @see {@link ImageLoader}\n * @see {@link NgOptimizedImage}\n * @publicApi\n */\nconst IMAGE_LOADER = new InjectionToken(ngDevMode ? 'ImageLoader' : '', {\n  providedIn: 'root',\n  factory: () => noopImageLoader\n});\n/**\n * Internal helper function that makes it easier to introduce custom image loaders for the\n * `NgOptimizedImage` directive. It is enough to specify a URL builder function to obtain full DI\n * configuration for a given loader: a DI token corresponding to the actual loader function, plus DI\n * tokens managing preconnect check functionality.\n * @param buildUrlFn a function returning a full URL based on loader's configuration\n * @param exampleUrls example of full URLs for a given loader (used in error messages)\n * @returns a set of DI providers corresponding to the configured image loader\n */\nfunction createImageLoader(buildUrlFn, exampleUrls) {\n  return function provideImageLoader(path) {\n    if (!isValidPath(path)) {\n      throwInvalidPathError(path, exampleUrls || []);\n    }\n    // The trailing / is stripped (if provided) to make URL construction (concatenation) easier in\n    // the individual loader functions.\n    path = normalizePath(path);\n    const loaderFn = config => {\n      if (isAbsoluteUrl(config.src)) {\n        // Image loader functions expect an image file name (e.g. `my-image.png`)\n        // or a relative path + a file name (e.g. `/a/b/c/my-image.png`) as an input,\n        // so the final absolute URL can be constructed.\n        // When an absolute URL is provided instead - the loader can not\n        // build a final URL, thus the error is thrown to indicate that.\n        throwUnexpectedAbsoluteUrlError(path, config.src);\n      }\n      return buildUrlFn(path, {\n        ...config,\n        src: normalizeSrc(config.src)\n      });\n    };\n    const providers = [{\n      provide: IMAGE_LOADER,\n      useValue: loaderFn\n    }];\n    return providers;\n  };\n}\nfunction throwInvalidPathError(path, exampleUrls) {\n  throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected an invalid path (\\`${path}\\`). ` + `To fix this, supply a path using one of the following formats: ${exampleUrls.join(' or ')}`);\n}\nfunction throwUnexpectedAbsoluteUrlError(path, url) {\n  throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected a \\`<img>\\` tag with an invalid \\`ngSrc\\` attribute: ${url}. ` + `This image loader expects \\`ngSrc\\` to be a relative URL - ` + `however the provided value is an absolute URL. ` + `To fix this, provide \\`ngSrc\\` as a path relative to the base URL ` + `configured for this loader (\\`${path}\\`).`);\n}\n\n/**\n * Function that generates an ImageLoader for [Cloudflare Image\n * Resizing](https://developers.cloudflare.com/images/image-resizing/) and turns it into an Angular\n * provider. Note: Cloudflare has multiple image products - this provider is specifically for\n * Cloudflare Image Resizing; it will not work with Cloudflare Images or Cloudflare Polish.\n *\n * @param path Your domain name, e.g. https://mysite.com\n * @returns Provider that provides an ImageLoader function\n *\n * @publicApi\n */\nconst provideCloudflareLoader = createImageLoader(createCloudflareUrl, ngDevMode ? ['https://<ZONE>/cdn-cgi/image/<OPTIONS>/<SOURCE-IMAGE>'] : undefined);\nfunction createCloudflareUrl(path, config) {\n  let params = `format=auto`;\n  if (config.width) {\n    params += `,width=${config.width}`;\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    params += `,quality=${PLACEHOLDER_QUALITY}`;\n  }\n  // Cloudflare image URLs format:\n  // https://developers.cloudflare.com/images/image-resizing/url-format/\n  return `${path}/cdn-cgi/image/${params}/${config.src}`;\n}\n\n/**\n * Name and URL tester for Cloudinary.\n */\nconst cloudinaryLoaderInfo = {\n  name: 'Cloudinary',\n  testUrl: isCloudinaryUrl\n};\nconst CLOUDINARY_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.cloudinary\\.com\\/.+/;\n/**\n * Tests whether a URL is from Cloudinary CDN.\n */\nfunction isCloudinaryUrl(url) {\n  return CLOUDINARY_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Cloudinary and turns it into an Angular provider.\n *\n * @param path Base URL of your Cloudinary images\n * This URL should match one of the following formats:\n * https://res.cloudinary.com/mysite\n * https://mysite.cloudinary.com\n * https://subdomain.mysite.com\n * @returns Set of providers to configure the Cloudinary loader.\n *\n * @publicApi\n */\nconst provideCloudinaryLoader = createImageLoader(createCloudinaryUrl, ngDevMode ? ['https://res.cloudinary.com/mysite', 'https://mysite.cloudinary.com', 'https://subdomain.mysite.com'] : undefined);\nfunction createCloudinaryUrl(path, config) {\n  // Cloudinary image URLformat:\n  // https://cloudinary.com/documentation/image_transformations#transformation_url_structure\n  // Example of a Cloudinary image URL:\n  // https://res.cloudinary.com/mysite/image/upload/c_scale,f_auto,q_auto,w_600/marketing/tile-topics-m.png\n  // For a placeholder image, we use the lowest image setting available to reduce the load time\n  // else we use the auto size\n  const quality = config.isPlaceholder ? 'q_auto:low' : 'q_auto';\n  let params = `f_auto,${quality}`;\n  if (config.width) {\n    params += `,w_${config.width}`;\n  }\n  if (config.loaderParams?.['rounded']) {\n    params += `,r_max`;\n  }\n  return `${path}/image/upload/${params}/${config.src}`;\n}\n\n/**\n * Name and URL tester for ImageKit.\n */\nconst imageKitLoaderInfo = {\n  name: 'ImageKit',\n  testUrl: isImageKitUrl\n};\nconst IMAGE_KIT_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.imagekit\\.io\\/.+/;\n/**\n * Tests whether a URL is from ImageKit CDN.\n */\nfunction isImageKitUrl(url) {\n  return IMAGE_KIT_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for ImageKit and turns it into an Angular provider.\n *\n * @param path Base URL of your ImageKit images\n * This URL should match one of the following formats:\n * https://ik.imagekit.io/myaccount\n * https://subdomain.mysite.com\n * @returns Set of providers to configure the ImageKit loader.\n *\n * @publicApi\n */\nconst provideImageKitLoader = createImageLoader(createImagekitUrl, ngDevMode ? ['https://ik.imagekit.io/mysite', 'https://subdomain.mysite.com'] : undefined);\nfunction createImagekitUrl(path, config) {\n  // Example of an ImageKit image URL:\n  // https://ik.imagekit.io/demo/tr:w-300,h-300/medium_cafe_B1iTdD0C.jpg\n  const {\n    src,\n    width\n  } = config;\n  const params = [];\n  if (width) {\n    params.push(`w-${width}`);\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    params.push(`q-${PLACEHOLDER_QUALITY}`);\n  }\n  const urlSegments = params.length ? [path, `tr:${params.join(',')}`, src] : [path, src];\n  const url = new URL(urlSegments.join('/'));\n  return url.href;\n}\n\n/**\n * Name and URL tester for Imgix.\n */\nconst imgixLoaderInfo = {\n  name: 'Imgix',\n  testUrl: isImgixUrl\n};\nconst IMGIX_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.imgix\\.net\\/.+/;\n/**\n * Tests whether a URL is from Imgix CDN.\n */\nfunction isImgixUrl(url) {\n  return IMGIX_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Imgix and turns it into an Angular provider.\n *\n * @param path path to the desired Imgix origin,\n * e.g. https://somepath.imgix.net or https://images.mysite.com\n * @returns Set of providers to configure the Imgix loader.\n *\n * @publicApi\n */\nconst provideImgixLoader = createImageLoader(createImgixUrl, ngDevMode ? ['https://somepath.imgix.net/'] : undefined);\nfunction createImgixUrl(path, config) {\n  const url = new URL(`${path}/${config.src}`);\n  // This setting ensures the smallest allowable format is set.\n  url.searchParams.set('auto', 'format');\n  if (config.width) {\n    url.searchParams.set('w', config.width.toString());\n  }\n  // When requesting a placeholder image we ask a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    url.searchParams.set('q', PLACEHOLDER_QUALITY);\n  }\n  return url.href;\n}\n\n/**\n * Name and URL tester for Netlify.\n */\nconst netlifyLoaderInfo = {\n  name: 'Netlify',\n  testUrl: isNetlifyUrl\n};\nconst NETLIFY_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.netlify\\.app\\/.+/;\n/**\n * Tests whether a URL is from a Netlify site. This won't catch sites with a custom domain,\n * but it's a good start for sites in development. This is only used to warn users who haven't\n * configured an image loader.\n */\nfunction isNetlifyUrl(url) {\n  return NETLIFY_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Netlify and turns it into an Angular provider.\n *\n * @param path optional URL of the desired Netlify site. Defaults to the current site.\n * @returns Set of providers to configure the Netlify loader.\n *\n * @publicApi\n */\nfunction provideNetlifyLoader(path) {\n  if (path && !isValidPath(path)) {\n    throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected an invalid path (\\`${path}\\`). ` + `To fix this, supply either the full URL to the Netlify site, or leave it empty to use the current site.`);\n  }\n  if (path) {\n    const url = new URL(path);\n    path = url.origin;\n  }\n  const loaderFn = config => {\n    return createNetlifyUrl(config, path);\n  };\n  const providers = [{\n    provide: IMAGE_LOADER,\n    useValue: loaderFn\n  }];\n  return providers;\n}\nconst validParams = new Map([['height', 'h'], ['fit', 'fit'], ['quality', 'q'], ['q', 'q'], ['position', 'position']]);\nfunction createNetlifyUrl(config, path) {\n  // Note: `path` can be undefined, in which case we use a fake one to construct a `URL` instance.\n  const url = new URL(path ?? 'https://a/');\n  url.pathname = '/.netlify/images';\n  if (!isAbsoluteUrl(config.src) && !config.src.startsWith('/')) {\n    config.src = '/' + config.src;\n  }\n  url.searchParams.set('url', config.src);\n  if (config.width) {\n    url.searchParams.set('w', config.width.toString());\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  // If the quality is specified in the loader config - always use provided value.\n  const configQuality = config.loaderParams?.['quality'] ?? config.loaderParams?.['q'];\n  if (config.isPlaceholder && !configQuality) {\n    url.searchParams.set('q', PLACEHOLDER_QUALITY);\n  }\n  for (const [param, value] of Object.entries(config.loaderParams ?? {})) {\n    if (validParams.has(param)) {\n      url.searchParams.set(validParams.get(param), value.toString());\n    } else {\n      if (ngDevMode) {\n        console.warn(_formatRuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, `The Netlify image loader has detected an \\`<img>\\` tag with the unsupported attribute \"\\`${param}\\`\".`));\n      }\n    }\n  }\n  // The \"a\" hostname is used for relative URLs, so we can remove it from the final URL.\n  return url.hostname === 'a' ? url.href.replace(url.origin, '') : url.href;\n}\n\n// Assembles directive details string, useful for error messages.\nfunction imgDirectiveDetails(ngSrc, includeNgSrc = true) {\n  const ngSrcInfo = includeNgSrc ? `(activated on an <img> element with the \\`ngSrc=\"${ngSrc}\"\\`) ` : '';\n  return `The NgOptimizedImage directive ${ngSrcInfo}has detected that`;\n}\n\n/**\n * Asserts that the application is in development mode. Throws an error if the application is in\n * production mode. This assert can be used to make sure that there is no dev-mode code invoked in\n * the prod mode accidentally.\n */\nfunction assertDevMode(checkName) {\n  if (!ngDevMode) {\n    throw new _RuntimeError(2958 /* RuntimeErrorCode.UNEXPECTED_DEV_MODE_CHECK_IN_PROD_MODE */, `Unexpected invocation of the ${checkName} in the prod mode. ` + `Please make sure that the prod mode is enabled for production builds.`);\n  }\n}\n\n/**\n * Observer that detects whether an image with `NgOptimizedImage`\n * is treated as a Largest Contentful Paint (LCP) element. If so,\n * asserts that the image has the `priority` attribute.\n *\n * Note: this is a dev-mode only class and it does not appear in prod bundles,\n * thus there is no `ngDevMode` use in the code.\n *\n * Based on https://web.dev/lcp/#measure-lcp-in-javascript.\n */\nclass LCPImageObserver {\n  // Map of full image URLs -> original `ngSrc` values.\n  images = new Map();\n  window = inject(DOCUMENT).defaultView;\n  observer = null;\n  constructor() {\n    assertDevMode('LCP checker');\n    if ((typeof ngServerMode === 'undefined' || !ngServerMode) && typeof PerformanceObserver !== 'undefined') {\n      this.observer = this.initPerformanceObserver();\n    }\n  }\n  /**\n   * Inits PerformanceObserver and subscribes to LCP events.\n   * Based on https://web.dev/lcp/#measure-lcp-in-javascript\n   */\n  initPerformanceObserver() {\n    const observer = new PerformanceObserver(entryList => {\n      const entries = entryList.getEntries();\n      if (entries.length === 0) return;\n      // We use the latest entry produced by the `PerformanceObserver` as the best\n      // signal on which element is actually an LCP one. As an example, the first image to load on\n      // a page, by virtue of being the only thing on the page so far, is often a LCP candidate\n      // and gets reported by PerformanceObserver, but isn't necessarily the LCP element.\n      const lcpElement = entries[entries.length - 1];\n      // Cast to `any` due to missing `element` on the `LargestContentfulPaint` type of entry.\n      // See https://developer.mozilla.org/en-US/docs/Web/API/LargestContentfulPaint\n      const imgSrc = lcpElement.element?.src ?? '';\n      // Exclude `data:` and `blob:` URLs, since they are not supported by the directive.\n      if (imgSrc.startsWith('data:') || imgSrc.startsWith('blob:')) return;\n      const img = this.images.get(imgSrc);\n      if (!img) return;\n      if (!img.priority && !img.alreadyWarnedPriority) {\n        img.alreadyWarnedPriority = true;\n        logMissingPriorityError(imgSrc);\n      }\n      if (img.modified && !img.alreadyWarnedModified) {\n        img.alreadyWarnedModified = true;\n        logModifiedWarning(imgSrc);\n      }\n    });\n    observer.observe({\n      type: 'largest-contentful-paint',\n      buffered: true\n    });\n    return observer;\n  }\n  registerImage(rewrittenSrc, originalNgSrc, isPriority) {\n    if (!this.observer) return;\n    const newObservedImageState = {\n      priority: isPriority,\n      modified: false,\n      alreadyWarnedModified: false,\n      alreadyWarnedPriority: false\n    };\n    this.images.set(getUrl(rewrittenSrc, this.window).href, newObservedImageState);\n  }\n  unregisterImage(rewrittenSrc) {\n    if (!this.observer) return;\n    this.images.delete(getUrl(rewrittenSrc, this.window).href);\n  }\n  updateImage(originalSrc, newSrc) {\n    if (!this.observer) return;\n    const originalUrl = getUrl(originalSrc, this.window).href;\n    const img = this.images.get(originalUrl);\n    if (img) {\n      img.modified = true;\n      this.images.set(getUrl(newSrc, this.window).href, img);\n      this.images.delete(originalUrl);\n    }\n  }\n  ngOnDestroy() {\n    if (!this.observer) return;\n    this.observer.disconnect();\n    this.images.clear();\n  }\n  static ɵfac = function LCPImageObserver_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LCPImageObserver)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LCPImageObserver,\n    factory: LCPImageObserver.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LCPImageObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nfunction logMissingPriorityError(ngSrc) {\n  const directiveDetails = imgDirectiveDetails(ngSrc);\n  console.error(_formatRuntimeError(2955 /* RuntimeErrorCode.LCP_IMG_MISSING_PRIORITY */, `${directiveDetails} this image is the Largest Contentful Paint (LCP) ` + `element but was not marked \"priority\". This image should be marked ` + `\"priority\" in order to prioritize its loading. ` + `To fix this, add the \"priority\" attribute.`));\n}\nfunction logModifiedWarning(ngSrc) {\n  const directiveDetails = imgDirectiveDetails(ngSrc);\n  console.warn(_formatRuntimeError(2964 /* RuntimeErrorCode.LCP_IMG_NGSRC_MODIFIED */, `${directiveDetails} this image is the Largest Contentful Paint (LCP) ` + `element and has had its \"ngSrc\" attribute modified. This can cause ` + `slower loading performance. It is recommended not to modify the \"ngSrc\" ` + `property on any image which could be the LCP element.`));\n}\n\n// Set of origins that are always excluded from the preconnect checks.\nconst INTERNAL_PRECONNECT_CHECK_BLOCKLIST = new Set(['localhost', '127.0.0.1', '0.0.0.0']);\n/**\n * Injection token to configure which origins should be excluded\n * from the preconnect checks. It can either be a single string or an array of strings\n * to represent a group of origins, for example:\n *\n * ```ts\n *  {provide: PRECONNECT_CHECK_BLOCKLIST, useValue: 'https://your-domain.com'}\n * ```\n *\n * or:\n *\n * ```ts\n *  {provide: PRECONNECT_CHECK_BLOCKLIST,\n *   useValue: ['https://your-domain-1.com', 'https://your-domain-2.com']}\n * ```\n *\n * @publicApi\n */\nconst PRECONNECT_CHECK_BLOCKLIST = new InjectionToken(ngDevMode ? 'PRECONNECT_CHECK_BLOCKLIST' : '');\n/**\n * Contains the logic to detect whether an image, marked with the \"priority\" attribute\n * has a corresponding `<link rel=\"preconnect\">` tag in the `document.head`.\n *\n * Note: this is a dev-mode only class, which should not appear in prod bundles,\n * thus there is no `ngDevMode` use in the code.\n */\nclass PreconnectLinkChecker {\n  document = inject(DOCUMENT);\n  /**\n   * Set of <link rel=\"preconnect\"> tags found on this page.\n   * The `null` value indicates that there was no DOM query operation performed.\n   */\n  preconnectLinks = null;\n  /*\n   * Keep track of all already seen origin URLs to avoid repeating the same check.\n   */\n  alreadySeen = new Set();\n  window = this.document.defaultView;\n  blocklist = new Set(INTERNAL_PRECONNECT_CHECK_BLOCKLIST);\n  constructor() {\n    assertDevMode('preconnect link checker');\n    const blocklist = inject(PRECONNECT_CHECK_BLOCKLIST, {\n      optional: true\n    });\n    if (blocklist) {\n      this.populateBlocklist(blocklist);\n    }\n  }\n  populateBlocklist(origins) {\n    if (Array.isArray(origins)) {\n      deepForEach(origins, origin => {\n        this.blocklist.add(extractHostname(origin));\n      });\n    } else {\n      this.blocklist.add(extractHostname(origins));\n    }\n  }\n  /**\n   * Checks that a preconnect resource hint exists in the head for the\n   * given src.\n   *\n   * @param rewrittenSrc src formatted with loader\n   * @param originalNgSrc ngSrc value\n   */\n  assertPreconnect(rewrittenSrc, originalNgSrc) {\n    if (typeof ngServerMode !== 'undefined' && ngServerMode) return;\n    const imgUrl = getUrl(rewrittenSrc, this.window);\n    if (this.blocklist.has(imgUrl.hostname) || this.alreadySeen.has(imgUrl.origin)) return;\n    // Register this origin as seen, so we don't check it again later.\n    this.alreadySeen.add(imgUrl.origin);\n    // Note: we query for preconnect links only *once* and cache the results\n    // for the entire lifespan of an application, since it's unlikely that the\n    // list would change frequently. This allows to make sure there are no\n    // performance implications of making extra DOM lookups for each image.\n    this.preconnectLinks ??= this.queryPreconnectLinks();\n    if (!this.preconnectLinks.has(imgUrl.origin)) {\n      console.warn(_formatRuntimeError(2956 /* RuntimeErrorCode.PRIORITY_IMG_MISSING_PRECONNECT_TAG */, `${imgDirectiveDetails(originalNgSrc)} there is no preconnect tag present for this ` + `image. Preconnecting to the origin(s) that serve priority images ensures that these ` + `images are delivered as soon as possible. To fix this, please add the following ` + `element into the <head> of the document:\\n` + `  <link rel=\"preconnect\" href=\"${imgUrl.origin}\">`));\n    }\n  }\n  queryPreconnectLinks() {\n    const preconnectUrls = new Set();\n    const links = this.document.querySelectorAll('link[rel=preconnect]');\n    for (const link of links) {\n      const url = getUrl(link.href, this.window);\n      preconnectUrls.add(url.origin);\n    }\n    return preconnectUrls;\n  }\n  ngOnDestroy() {\n    this.preconnectLinks?.clear();\n    this.alreadySeen.clear();\n  }\n  static ɵfac = function PreconnectLinkChecker_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PreconnectLinkChecker)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PreconnectLinkChecker,\n    factory: PreconnectLinkChecker.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PreconnectLinkChecker, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Invokes a callback for each element in the array. Also invokes a callback\n * recursively for each nested array.\n */\nfunction deepForEach(input, fn) {\n  for (let value of input) {\n    Array.isArray(value) ? deepForEach(value, fn) : fn(value);\n  }\n}\n\n/**\n * In SSR scenarios, a preload `<link>` element is generated for priority images.\n * Having a large number of preload tags may negatively affect the performance,\n * so we warn developers (by throwing an error) if the number of preloaded images\n * is above a certain threshold. This const specifies this threshold.\n */\nconst DEFAULT_PRELOADED_IMAGES_LIMIT = 5;\n/**\n * Helps to keep track of priority images that already have a corresponding\n * preload tag (to avoid generating multiple preload tags with the same URL).\n *\n * This Set tracks the original src passed into the `ngSrc` input not the src after it has been\n * run through the specified `IMAGE_LOADER`.\n */\nconst PRELOADED_IMAGES = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'NG_OPTIMIZED_PRELOADED_IMAGES' : '', {\n  providedIn: 'root',\n  factory: () => new Set()\n});\n\n/**\n * @description Contains the logic needed to track and add preload link tags to the `<head>` tag. It\n * will also track what images have already had preload link tags added so as to not duplicate link\n * tags.\n *\n * In dev mode this service will validate that the number of preloaded images does not exceed the\n * configured default preloaded images limit: {@link DEFAULT_PRELOADED_IMAGES_LIMIT}.\n */\nclass PreloadLinkCreator {\n  preloadedImages = inject(PRELOADED_IMAGES);\n  document = inject(DOCUMENT);\n  errorShown = false;\n  /**\n   * @description Add a preload `<link>` to the `<head>` of the `index.html` that is served from the\n   * server while using Angular Universal and SSR to kick off image loads for high priority images.\n   *\n   * The `sizes` (passed in from the user) and `srcset` (parsed and formatted from `ngSrcset`)\n   * properties used to set the corresponding attributes, `imagesizes` and `imagesrcset`\n   * respectively, on the preload `<link>` tag so that the correctly sized image is preloaded from\n   * the CDN.\n   *\n   * {@link https://web.dev/preload-responsive-images/#imagesrcset-and-imagesizes}\n   *\n   * @param renderer The `Renderer2` passed in from the directive\n   * @param src The original src of the image that is set on the `ngSrc` input.\n   * @param srcset The parsed and formatted srcset created from the `ngSrcset` input\n   * @param sizes The value of the `sizes` attribute passed in to the `<img>` tag\n   */\n  createPreloadLinkTag(renderer, src, srcset, sizes) {\n    if (ngDevMode && !this.errorShown && this.preloadedImages.size >= DEFAULT_PRELOADED_IMAGES_LIMIT) {\n      this.errorShown = true;\n      console.warn(_formatRuntimeError(2961 /* RuntimeErrorCode.TOO_MANY_PRELOADED_IMAGES */, `The \\`NgOptimizedImage\\` directive has detected that more than ` + `${DEFAULT_PRELOADED_IMAGES_LIMIT} images were marked as priority. ` + `This might negatively affect an overall performance of the page. ` + `To fix this, remove the \"priority\" attribute from images with less priority.`));\n    }\n    if (this.preloadedImages.has(src)) {\n      return;\n    }\n    this.preloadedImages.add(src);\n    const preload = renderer.createElement('link');\n    renderer.setAttribute(preload, 'as', 'image');\n    renderer.setAttribute(preload, 'href', src);\n    renderer.setAttribute(preload, 'rel', 'preload');\n    renderer.setAttribute(preload, 'fetchpriority', 'high');\n    if (sizes) {\n      renderer.setAttribute(preload, 'imageSizes', sizes);\n    }\n    if (srcset) {\n      renderer.setAttribute(preload, 'imageSrcset', srcset);\n    }\n    renderer.appendChild(this.document.head, preload);\n  }\n  static ɵfac = function PreloadLinkCreator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PreloadLinkCreator)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PreloadLinkCreator,\n    factory: PreloadLinkCreator.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PreloadLinkCreator, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * When a Base64-encoded image is passed as an input to the `NgOptimizedImage` directive,\n * an error is thrown. The image content (as a string) might be very long, thus making\n * it hard to read an error message if the entire string is included. This const defines\n * the number of characters that should be included into the error message. The rest\n * of the content is truncated.\n */\nconst BASE64_IMG_MAX_LENGTH_IN_ERROR = 50;\n/**\n * RegExpr to determine whether a src in a srcset is using width descriptors.\n * Should match something like: \"100w, 200w\".\n */\nconst VALID_WIDTH_DESCRIPTOR_SRCSET = /^((\\s*\\d+w\\s*(,|$)){1,})$/;\n/**\n * RegExpr to determine whether a src in a srcset is using density descriptors.\n * Should match something like: \"1x, 2x, 50x\". Also supports decimals like \"1.5x, 1.50x\".\n */\nconst VALID_DENSITY_DESCRIPTOR_SRCSET = /^((\\s*\\d+(\\.\\d+)?x\\s*(,|$)){1,})$/;\n/**\n * Srcset values with a density descriptor higher than this value will actively\n * throw an error. Such densities are not permitted as they cause image sizes\n * to be unreasonably large and slow down LCP.\n */\nconst ABSOLUTE_SRCSET_DENSITY_CAP = 3;\n/**\n * Used only in error message text to communicate best practices, as we will\n * only throw based on the slightly more conservative ABSOLUTE_SRCSET_DENSITY_CAP.\n */\nconst RECOMMENDED_SRCSET_DENSITY_CAP = 2;\n/**\n * Used in generating automatic density-based srcsets\n */\nconst DENSITY_SRCSET_MULTIPLIERS = [1, 2];\n/**\n * Used to determine which breakpoints to use on full-width images\n */\nconst VIEWPORT_BREAKPOINT_CUTOFF = 640;\n/**\n * Used to determine whether two aspect ratios are similar in value.\n */\nconst ASPECT_RATIO_TOLERANCE = 0.1;\n/**\n * Used to determine whether the image has been requested at an overly\n * large size compared to the actual rendered image size (after taking\n * into account a typical device pixel ratio). In pixels.\n */\nconst OVERSIZED_IMAGE_TOLERANCE = 1000;\n/**\n * Used to limit automatic srcset generation of very large sources for\n * fixed-size images. In pixels.\n */\nconst FIXED_SRCSET_WIDTH_LIMIT = 1920;\nconst FIXED_SRCSET_HEIGHT_LIMIT = 1080;\n/**\n * Placeholder dimension (height or width) limit in pixels. Angular produces a warning\n * when this limit is crossed.\n */\nconst PLACEHOLDER_DIMENSION_LIMIT = 1000;\n/**\n * Used to warn or error when the user provides an overly large dataURL for the placeholder\n * attribute.\n * Character count of Base64 images is 1 character per byte, and base64 encoding is approximately\n * 33% larger than base images, so 4000 characters is around 3KB on disk and 10000 characters is\n * around 7.7KB. Experimentally, 4000 characters is about 20x20px in PNG or medium-quality JPEG\n * format, and 10,000 is around 50x50px, but there's quite a bit of variation depending on how the\n * image is saved.\n */\nconst DATA_URL_WARN_LIMIT = 4000;\nconst DATA_URL_ERROR_LIMIT = 10000;\n/** Info about built-in loaders we can test for. */\nconst BUILT_IN_LOADERS = [imgixLoaderInfo, imageKitLoaderInfo, cloudinaryLoaderInfo, netlifyLoaderInfo];\n/**\n * Threshold for the PRIORITY_TRUE_COUNT\n */\nconst PRIORITY_COUNT_THRESHOLD = 10;\n/**\n * This count is used to log a devMode warning\n * when the count of directive instances with priority=true\n * exceeds the threshold PRIORITY_COUNT_THRESHOLD\n */\nlet IMGS_WITH_PRIORITY_ATTR_COUNT = 0;\n/**\n * Directive that improves image loading performance by enforcing best practices.\n *\n * `NgOptimizedImage` ensures that the loading of the Largest Contentful Paint (LCP) image is\n * prioritized by:\n * - Automatically setting the `fetchpriority` attribute on the `<img>` tag\n * - Lazy loading non-priority images by default\n * - Automatically generating a preconnect link tag in the document head\n *\n * In addition, the directive:\n * - Generates appropriate asset URLs if a corresponding `ImageLoader` function is provided\n * - Automatically generates a srcset\n * - Requires that `width` and `height` are set\n * - Warns if `width` or `height` have been set incorrectly\n * - Warns if the image will be visually distorted when rendered\n *\n * @usageNotes\n * The `NgOptimizedImage` directive is marked as [standalone](guide/components/importing) and can\n * be imported directly.\n *\n * Follow the steps below to enable and use the directive:\n * 1. Import it into the necessary NgModule or a standalone Component.\n * 2. Optionally provide an `ImageLoader` if you use an image hosting service.\n * 3. Update the necessary `<img>` tags in templates and replace `src` attributes with `ngSrc`.\n * Using a `ngSrc` allows the directive to control when the `src` gets set, which triggers an image\n * download.\n *\n * Step 1: import the `NgOptimizedImage` directive.\n *\n * ```ts\n * import { NgOptimizedImage } from '@angular/common';\n *\n * // Include it into the necessary NgModule\n * @NgModule({\n *   imports: [NgOptimizedImage],\n * })\n * class AppModule {}\n *\n * // ... or a standalone Component\n * @Component({\n *   imports: [NgOptimizedImage],\n * })\n * class MyStandaloneComponent {}\n * ```\n *\n * Step 2: configure a loader.\n *\n * To use the **default loader**: no additional code changes are necessary. The URL returned by the\n * generic loader will always match the value of \"src\". In other words, this loader applies no\n * transformations to the resource URL and the value of the `ngSrc` attribute will be used as is.\n *\n * To use an existing loader for a **third-party image service**: add the provider factory for your\n * chosen service to the `providers` array. In the example below, the Imgix loader is used:\n *\n * ```ts\n * import {provideImgixLoader} from '@angular/common';\n *\n * // Call the function and add the result to the `providers` array:\n * providers: [\n *   provideImgixLoader(\"https://my.base.url/\"),\n * ],\n * ```\n *\n * The `NgOptimizedImage` directive provides the following functions:\n * - `provideCloudflareLoader`\n * - `provideCloudinaryLoader`\n * - `provideImageKitLoader`\n * - `provideImgixLoader`\n *\n * If you use a different image provider, you can create a custom loader function as described\n * below.\n *\n * To use a **custom loader**: provide your loader function as a value for the `IMAGE_LOADER` DI\n * token.\n *\n * ```ts\n * import {IMAGE_LOADER, ImageLoaderConfig} from '@angular/common';\n *\n * // Configure the loader using the `IMAGE_LOADER` token.\n * providers: [\n *   {\n *      provide: IMAGE_LOADER,\n *      useValue: (config: ImageLoaderConfig) => {\n *        return `https://example.com/${config.src}-${config.width}.jpg`;\n *      }\n *   },\n * ],\n * ```\n *\n * Step 3: update `<img>` tags in templates to use `ngSrc` instead of `src`.\n *\n * ```html\n * <img ngSrc=\"logo.png\" width=\"200\" height=\"100\">\n * ```\n *\n * @publicApi\n */\nclass NgOptimizedImage {\n  imageLoader = inject(IMAGE_LOADER);\n  config = processConfig(inject(_IMAGE_CONFIG));\n  renderer = inject(Renderer2);\n  imgElement = inject(ElementRef).nativeElement;\n  injector = inject(Injector);\n  // An LCP image observer should be injected only in development mode.\n  // Do not assign it to `null` to avoid having a redundant property in the production bundle.\n  lcpObserver;\n  /**\n   * Calculate the rewritten `src` once and store it.\n   * This is needed to avoid repetitive calculations and make sure the directive cleanup in the\n   * `ngOnDestroy` does not rely on the `IMAGE_LOADER` logic (which in turn can rely on some other\n   * instance that might be already destroyed).\n   */\n  _renderedSrc = null;\n  /**\n   * Name of the source image.\n   * Image name will be processed by the image loader and the final URL will be applied as the `src`\n   * property of the image.\n   */\n  ngSrc;\n  /**\n   * A comma separated list of width or density descriptors.\n   * The image name will be taken from `ngSrc` and combined with the list of width or density\n   * descriptors to generate the final `srcset` property of the image.\n   *\n   * Example:\n   * ```html\n   * <img ngSrc=\"hello.jpg\" ngSrcset=\"100w, 200w\" />  =>\n   * <img src=\"path/hello.jpg\" srcset=\"path/hello.jpg?w=100 100w, path/hello.jpg?w=200 200w\" />\n   * ```\n   */\n  ngSrcset;\n  /**\n   * The base `sizes` attribute passed through to the `<img>` element.\n   * Providing sizes causes the image to create an automatic responsive srcset.\n   */\n  sizes;\n  /**\n   * For responsive images: the intrinsic width of the image in pixels.\n   * For fixed size images: the desired rendered width of the image in pixels.\n   */\n  width;\n  /**\n   * For responsive images: the intrinsic height of the image in pixels.\n   * For fixed size images: the desired rendered height of the image in pixels.\n   */\n  height;\n  /**\n   * The desired decoding behavior for the image. Defaults to `auto`\n   * if not explicitly set, matching native browser behavior.\n   *\n   * Use `async` to decode the image off the main thread (non-blocking),\n   * `sync` for immediate decoding (blocking), or `auto` to let the\n   * browser decide the optimal strategy.\n   *\n   * [Spec](https://html.spec.whatwg.org/multipage/images.html#image-decoding-hint)\n   */\n  decoding;\n  /**\n   * The desired loading behavior (lazy, eager, or auto). Defaults to `lazy`,\n   * which is recommended for most images.\n   *\n   * Warning: Setting images as loading=\"eager\" or loading=\"auto\" marks them\n   * as non-priority images and can hurt loading performance. For images which\n   * may be the LCP element, use the `priority` attribute instead of `loading`.\n   */\n  loading;\n  /**\n   * Indicates whether this image should have a high priority.\n   */\n  priority = false;\n  /**\n   * Data to pass through to custom loaders.\n   */\n  loaderParams;\n  /**\n   * Disables automatic srcset generation for this image.\n   */\n  disableOptimizedSrcset = false;\n  /**\n   * Sets the image to \"fill mode\", which eliminates the height/width requirement and adds\n   * styles such that the image fills its containing element.\n   */\n  fill = false;\n  /**\n   * A URL or data URL for an image to be used as a placeholder while this image loads.\n   */\n  placeholder;\n  /**\n   * Configuration object for placeholder settings. Options:\n   *   * blur: Setting this to false disables the automatic CSS blur.\n   */\n  placeholderConfig;\n  /**\n   * Value of the `src` attribute if set on the host `<img>` element.\n   * This input is exclusively read to assert that `src` is not set in conflict\n   * with `ngSrc` and that images don't start to load until a lazy loading strategy is set.\n   * @internal\n   */\n  src;\n  /**\n   * Value of the `srcset` attribute if set on the host `<img>` element.\n   * This input is exclusively read to assert that `srcset` is not set in conflict\n   * with `ngSrcset` and that images don't start to load until a lazy loading strategy is set.\n   * @internal\n   */\n  srcset;\n  constructor() {\n    if (ngDevMode) {\n      this.lcpObserver = this.injector.get(LCPImageObserver);\n      // Using `DestroyRef` to avoid having an empty `ngOnDestroy` method since this\n      // is only run in development mode.\n      const destroyRef = inject(DestroyRef);\n      destroyRef.onDestroy(() => {\n        if (!this.priority && this._renderedSrc !== null) {\n          this.lcpObserver.unregisterImage(this._renderedSrc);\n        }\n      });\n    }\n  }\n  /** @docs-private */\n  ngOnInit() {\n    _performanceMarkFeature('NgOptimizedImage');\n    if (ngDevMode) {\n      const ngZone = this.injector.get(NgZone);\n      assertNonEmptyInput(this, 'ngSrc', this.ngSrc);\n      assertValidNgSrcset(this, this.ngSrcset);\n      assertNoConflictingSrc(this);\n      if (this.ngSrcset) {\n        assertNoConflictingSrcset(this);\n      }\n      assertNotBase64Image(this);\n      assertNotBlobUrl(this);\n      if (this.fill) {\n        assertEmptyWidthAndHeight(this);\n        // This leaves the Angular zone to avoid triggering unnecessary change detection cycles when\n        // `load` tasks are invoked on images.\n        ngZone.runOutsideAngular(() => assertNonZeroRenderedHeight(this, this.imgElement, this.renderer));\n      } else {\n        assertNonEmptyWidthAndHeight(this);\n        if (this.height !== undefined) {\n          assertGreaterThanZero(this, this.height, 'height');\n        }\n        if (this.width !== undefined) {\n          assertGreaterThanZero(this, this.width, 'width');\n        }\n        // Only check for distorted images when not in fill mode, where\n        // images may be intentionally stretched, cropped or letterboxed.\n        ngZone.runOutsideAngular(() => assertNoImageDistortion(this, this.imgElement, this.renderer));\n      }\n      assertValidLoadingInput(this);\n      assertValidDecodingInput(this);\n      if (!this.ngSrcset) {\n        assertNoComplexSizes(this);\n      }\n      assertValidPlaceholder(this, this.imageLoader);\n      assertNotMissingBuiltInLoader(this.ngSrc, this.imageLoader);\n      assertNoNgSrcsetWithoutLoader(this, this.imageLoader);\n      assertNoLoaderParamsWithoutLoader(this, this.imageLoader);\n      ngZone.runOutsideAngular(() => {\n        this.lcpObserver.registerImage(this.getRewrittenSrc(), this.ngSrc, this.priority);\n      });\n      if (this.priority) {\n        const checker = this.injector.get(PreconnectLinkChecker);\n        checker.assertPreconnect(this.getRewrittenSrc(), this.ngSrc);\n        if (typeof ngServerMode !== 'undefined' && !ngServerMode) {\n          const applicationRef = this.injector.get(ApplicationRef);\n          assetPriorityCountBelowThreshold(applicationRef);\n        }\n      }\n    }\n    if (this.placeholder) {\n      this.removePlaceholderOnLoad(this.imgElement);\n    }\n    this.setHostAttributes();\n  }\n  setHostAttributes() {\n    // Must set width/height explicitly in case they are bound (in which case they will\n    // only be reflected and not found by the browser)\n    if (this.fill) {\n      this.sizes ||= '100vw';\n    } else {\n      this.setHostAttribute('width', this.width.toString());\n      this.setHostAttribute('height', this.height.toString());\n    }\n    this.setHostAttribute('loading', this.getLoadingBehavior());\n    this.setHostAttribute('fetchpriority', this.getFetchPriority());\n    this.setHostAttribute('decoding', this.getDecoding());\n    // The `data-ng-img` attribute flags an image as using the directive, to allow\n    // for analysis of the directive's performance.\n    this.setHostAttribute('ng-img', 'true');\n    // The `src` and `srcset` attributes should be set last since other attributes\n    // could affect the image's loading behavior.\n    const rewrittenSrcset = this.updateSrcAndSrcset();\n    if (this.sizes) {\n      if (this.getLoadingBehavior() === 'lazy') {\n        this.setHostAttribute('sizes', 'auto, ' + this.sizes);\n      } else {\n        this.setHostAttribute('sizes', this.sizes);\n      }\n    } else {\n      if (this.ngSrcset && VALID_WIDTH_DESCRIPTOR_SRCSET.test(this.ngSrcset) && this.getLoadingBehavior() === 'lazy') {\n        this.setHostAttribute('sizes', 'auto, 100vw');\n      }\n    }\n    if (typeof ngServerMode !== 'undefined' && ngServerMode && this.priority) {\n      const preloadLinkCreator = this.injector.get(PreloadLinkCreator);\n      preloadLinkCreator.createPreloadLinkTag(this.renderer, this.getRewrittenSrc(), rewrittenSrcset, this.sizes);\n    }\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if (ngDevMode) {\n      assertNoPostInitInputChange(this, changes, ['ngSrcset', 'width', 'height', 'priority', 'fill', 'loading', 'sizes', 'loaderParams', 'disableOptimizedSrcset']);\n    }\n    if (changes['ngSrc'] && !changes['ngSrc'].isFirstChange()) {\n      const oldSrc = this._renderedSrc;\n      this.updateSrcAndSrcset(true);\n      if (ngDevMode) {\n        const newSrc = this._renderedSrc;\n        if (oldSrc && newSrc && oldSrc !== newSrc) {\n          const ngZone = this.injector.get(NgZone);\n          ngZone.runOutsideAngular(() => {\n            this.lcpObserver.updateImage(oldSrc, newSrc);\n          });\n        }\n      }\n    }\n    if (ngDevMode && changes['placeholder']?.currentValue && typeof ngServerMode !== 'undefined' && !ngServerMode) {\n      assertPlaceholderDimensions(this, this.imgElement);\n    }\n  }\n  callImageLoader(configWithoutCustomParams) {\n    let augmentedConfig = configWithoutCustomParams;\n    if (this.loaderParams) {\n      augmentedConfig.loaderParams = this.loaderParams;\n    }\n    return this.imageLoader(augmentedConfig);\n  }\n  getLoadingBehavior() {\n    if (!this.priority && this.loading !== undefined) {\n      return this.loading;\n    }\n    return this.priority ? 'eager' : 'lazy';\n  }\n  getFetchPriority() {\n    return this.priority ? 'high' : 'auto';\n  }\n  getDecoding() {\n    if (this.priority) {\n      // `sync` means the image is decoded immediately when it's loaded,\n      // reducing the risk of content shifting later (important for LCP).\n      // If we're marking an image as priority, we want it decoded and\n      // painted as early as possible.\n      return 'sync';\n    }\n    // Returns the value of the `decoding` attribute, defaulting to `auto`\n    // if not explicitly provided. This mimics native browser behavior and\n    // avoids breaking changes when no decoding strategy is specified.\n    return this.decoding ?? 'auto';\n  }\n  getRewrittenSrc() {\n    // ImageLoaderConfig supports setting a width property. However, we're not setting width here\n    // because if the developer uses rendered width instead of intrinsic width in the HTML width\n    // attribute, the image requested may be too small for 2x+ screens.\n    if (!this._renderedSrc) {\n      const imgConfig = {\n        src: this.ngSrc\n      };\n      // Cache calculated image src to reuse it later in the code.\n      this._renderedSrc = this.callImageLoader(imgConfig);\n    }\n    return this._renderedSrc;\n  }\n  getRewrittenSrcset() {\n    const widthSrcSet = VALID_WIDTH_DESCRIPTOR_SRCSET.test(this.ngSrcset);\n    const finalSrcs = this.ngSrcset.split(',').filter(src => src !== '').map(srcStr => {\n      srcStr = srcStr.trim();\n      const width = widthSrcSet ? parseFloat(srcStr) : parseFloat(srcStr) * this.width;\n      return `${this.callImageLoader({\n        src: this.ngSrc,\n        width\n      })} ${srcStr}`;\n    });\n    return finalSrcs.join(', ');\n  }\n  getAutomaticSrcset() {\n    if (this.sizes) {\n      return this.getResponsiveSrcset();\n    } else {\n      return this.getFixedSrcset();\n    }\n  }\n  getResponsiveSrcset() {\n    const {\n      breakpoints\n    } = this.config;\n    let filteredBreakpoints = breakpoints;\n    if (this.sizes?.trim() === '100vw') {\n      // Since this is a full-screen-width image, our srcset only needs to include\n      // breakpoints with full viewport widths.\n      filteredBreakpoints = breakpoints.filter(bp => bp >= VIEWPORT_BREAKPOINT_CUTOFF);\n    }\n    const finalSrcs = filteredBreakpoints.map(bp => `${this.callImageLoader({\n      src: this.ngSrc,\n      width: bp\n    })} ${bp}w`);\n    return finalSrcs.join(', ');\n  }\n  updateSrcAndSrcset(forceSrcRecalc = false) {\n    if (forceSrcRecalc) {\n      // Reset cached value, so that the followup `getRewrittenSrc()` call\n      // will recalculate it and update the cache.\n      this._renderedSrc = null;\n    }\n    const rewrittenSrc = this.getRewrittenSrc();\n    this.setHostAttribute('src', rewrittenSrc);\n    let rewrittenSrcset = undefined;\n    if (this.ngSrcset) {\n      rewrittenSrcset = this.getRewrittenSrcset();\n    } else if (this.shouldGenerateAutomaticSrcset()) {\n      rewrittenSrcset = this.getAutomaticSrcset();\n    }\n    if (rewrittenSrcset) {\n      this.setHostAttribute('srcset', rewrittenSrcset);\n    }\n    return rewrittenSrcset;\n  }\n  getFixedSrcset() {\n    const finalSrcs = DENSITY_SRCSET_MULTIPLIERS.map(multiplier => `${this.callImageLoader({\n      src: this.ngSrc,\n      width: this.width * multiplier\n    })} ${multiplier}x`);\n    return finalSrcs.join(', ');\n  }\n  shouldGenerateAutomaticSrcset() {\n    let oversizedImage = false;\n    if (!this.sizes) {\n      oversizedImage = this.width > FIXED_SRCSET_WIDTH_LIMIT || this.height > FIXED_SRCSET_HEIGHT_LIMIT;\n    }\n    return !this.disableOptimizedSrcset && !this.srcset && this.imageLoader !== noopImageLoader && !oversizedImage;\n  }\n  /**\n   * Returns an image url formatted for use with the CSS background-image property. Expects one of:\n   * * A base64 encoded image, which is wrapped and passed through.\n   * * A boolean. If true, calls the image loader to generate a small placeholder url.\n   */\n  generatePlaceholder(placeholderInput) {\n    const {\n      placeholderResolution\n    } = this.config;\n    if (placeholderInput === true) {\n      return `url(${this.callImageLoader({\n        src: this.ngSrc,\n        width: placeholderResolution,\n        isPlaceholder: true\n      })})`;\n    } else if (typeof placeholderInput === 'string') {\n      return `url(${placeholderInput})`;\n    }\n    return null;\n  }\n  /**\n   * Determines if blur should be applied, based on an optional boolean\n   * property `blur` within the optional configuration object `placeholderConfig`.\n   */\n  shouldBlurPlaceholder(placeholderConfig) {\n    if (!placeholderConfig || !placeholderConfig.hasOwnProperty('blur')) {\n      return true;\n    }\n    return Boolean(placeholderConfig.blur);\n  }\n  removePlaceholderOnLoad(img) {\n    const callback = () => {\n      const changeDetectorRef = this.injector.get(ChangeDetectorRef);\n      removeLoadListenerFn();\n      removeErrorListenerFn();\n      this.placeholder = false;\n      changeDetectorRef.markForCheck();\n    };\n    const removeLoadListenerFn = this.renderer.listen(img, 'load', callback);\n    const removeErrorListenerFn = this.renderer.listen(img, 'error', callback);\n    callOnLoadIfImageIsLoaded(img, callback);\n  }\n  setHostAttribute(name, value) {\n    this.renderer.setAttribute(this.imgElement, name, value);\n  }\n  static ɵfac = function NgOptimizedImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgOptimizedImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgOptimizedImage,\n    selectors: [[\"img\", \"ngSrc\", \"\"]],\n    hostVars: 18,\n    hostBindings: function NgOptimizedImage_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"position\", ctx.fill ? \"absolute\" : null)(\"width\", ctx.fill ? \"100%\" : null)(\"height\", ctx.fill ? \"100%\" : null)(\"inset\", ctx.fill ? \"0\" : null)(\"background-size\", ctx.placeholder ? \"cover\" : null)(\"background-position\", ctx.placeholder ? \"50% 50%\" : null)(\"background-repeat\", ctx.placeholder ? \"no-repeat\" : null)(\"background-image\", ctx.placeholder ? ctx.generatePlaceholder(ctx.placeholder) : null)(\"filter\", ctx.placeholder && ctx.shouldBlurPlaceholder(ctx.placeholderConfig) ? \"blur(15px)\" : null);\n      }\n    },\n    inputs: {\n      ngSrc: [2, \"ngSrc\", \"ngSrc\", unwrapSafeUrl],\n      ngSrcset: \"ngSrcset\",\n      sizes: \"sizes\",\n      width: [2, \"width\", \"width\", numberAttribute],\n      height: [2, \"height\", \"height\", numberAttribute],\n      decoding: \"decoding\",\n      loading: \"loading\",\n      priority: [2, \"priority\", \"priority\", booleanAttribute],\n      loaderParams: \"loaderParams\",\n      disableOptimizedSrcset: [2, \"disableOptimizedSrcset\", \"disableOptimizedSrcset\", booleanAttribute],\n      fill: [2, \"fill\", \"fill\", booleanAttribute],\n      placeholder: [2, \"placeholder\", \"placeholder\", booleanOrUrlAttribute],\n      placeholderConfig: \"placeholderConfig\",\n      src: \"src\",\n      srcset: \"srcset\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgOptimizedImage, [{\n    type: Directive,\n    args: [{\n      selector: 'img[ngSrc]',\n      host: {\n        '[style.position]': 'fill ? \"absolute\" : null',\n        '[style.width]': 'fill ? \"100%\" : null',\n        '[style.height]': 'fill ? \"100%\" : null',\n        '[style.inset]': 'fill ? \"0\" : null',\n        '[style.background-size]': 'placeholder ? \"cover\" : null',\n        '[style.background-position]': 'placeholder ? \"50% 50%\" : null',\n        '[style.background-repeat]': 'placeholder ? \"no-repeat\" : null',\n        '[style.background-image]': 'placeholder ? generatePlaceholder(placeholder) : null',\n        '[style.filter]': 'placeholder && shouldBlurPlaceholder(placeholderConfig) ? \"blur(15px)\" : null'\n      }\n    }]\n  }], () => [], {\n    ngSrc: [{\n      type: Input,\n      args: [{\n        required: true,\n        transform: unwrapSafeUrl\n      }]\n    }],\n    ngSrcset: [{\n      type: Input\n    }],\n    sizes: [{\n      type: Input\n    }],\n    width: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    height: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    decoding: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    priority: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loaderParams: [{\n      type: Input\n    }],\n    disableOptimizedSrcset: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    fill: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input,\n      args: [{\n        transform: booleanOrUrlAttribute\n      }]\n    }],\n    placeholderConfig: [{\n      type: Input\n    }],\n    src: [{\n      type: Input\n    }],\n    srcset: [{\n      type: Input\n    }]\n  });\n})();\n/***** Helpers *****/\n/**\n * Sorts provided config breakpoints and uses defaults.\n */\nfunction processConfig(config) {\n  let sortedBreakpoints = {};\n  if (config.breakpoints) {\n    sortedBreakpoints.breakpoints = config.breakpoints.sort((a, b) => a - b);\n  }\n  return Object.assign({}, _IMAGE_CONFIG_DEFAULTS, config, sortedBreakpoints);\n}\n/***** Assert functions *****/\n/**\n * Verifies that there is no `src` set on a host element.\n */\nfunction assertNoConflictingSrc(dir) {\n  if (dir.src) {\n    throw new _RuntimeError(2950 /* RuntimeErrorCode.UNEXPECTED_SRC_ATTR */, `${imgDirectiveDetails(dir.ngSrc)} both \\`src\\` and \\`ngSrc\\` have been set. ` + `Supplying both of these attributes breaks lazy loading. ` + `The NgOptimizedImage directive sets \\`src\\` itself based on the value of \\`ngSrc\\`. ` + `To fix this, please remove the \\`src\\` attribute.`);\n  }\n}\n/**\n * Verifies that there is no `srcset` set on a host element.\n */\nfunction assertNoConflictingSrcset(dir) {\n  if (dir.srcset) {\n    throw new _RuntimeError(2951 /* RuntimeErrorCode.UNEXPECTED_SRCSET_ATTR */, `${imgDirectiveDetails(dir.ngSrc)} both \\`srcset\\` and \\`ngSrcset\\` have been set. ` + `Supplying both of these attributes breaks lazy loading. ` + `The NgOptimizedImage directive sets \\`srcset\\` itself based on the value of ` + `\\`ngSrcset\\`. To fix this, please remove the \\`srcset\\` attribute.`);\n  }\n}\n/**\n * Verifies that the `ngSrc` is not a Base64-encoded image.\n */\nfunction assertNotBase64Image(dir) {\n  let ngSrc = dir.ngSrc.trim();\n  if (ngSrc.startsWith('data:')) {\n    if (ngSrc.length > BASE64_IMG_MAX_LENGTH_IN_ERROR) {\n      ngSrc = ngSrc.substring(0, BASE64_IMG_MAX_LENGTH_IN_ERROR) + '...';\n    }\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`ngSrc\\` is a Base64-encoded string ` + `(${ngSrc}). NgOptimizedImage does not support Base64-encoded strings. ` + `To fix this, disable the NgOptimizedImage directive for this element ` + `by removing \\`ngSrc\\` and using a standard \\`src\\` attribute instead.`);\n  }\n}\n/**\n * Verifies that the 'sizes' only includes responsive values.\n */\nfunction assertNoComplexSizes(dir) {\n  let sizes = dir.sizes;\n  if (sizes?.match(/((\\)|,)\\s|^)\\d+px/)) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`sizes\\` was set to a string including ` + `pixel values. For automatic \\`srcset\\` generation, \\`sizes\\` must only include responsive ` + `values, such as \\`sizes=\"50vw\"\\` or \\`sizes=\"(min-width: 768px) 50vw, 100vw\"\\`. ` + `To fix this, modify the \\`sizes\\` attribute, or provide your own \\`ngSrcset\\` value directly.`);\n  }\n}\nfunction assertValidPlaceholder(dir, imageLoader) {\n  assertNoPlaceholderConfigWithoutPlaceholder(dir);\n  assertNoRelativePlaceholderWithoutLoader(dir, imageLoader);\n  assertNoOversizedDataUrl(dir);\n}\n/**\n * Verifies that placeholderConfig isn't being used without placeholder\n */\nfunction assertNoPlaceholderConfigWithoutPlaceholder(dir) {\n  if (dir.placeholderConfig && !dir.placeholder) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`placeholderConfig\\` options were provided for an ` + `image that does not use the \\`placeholder\\` attribute, and will have no effect.`);\n  }\n}\n/**\n * Warns if a relative URL placeholder is specified, but no loader is present to provide the small\n * image.\n */\nfunction assertNoRelativePlaceholderWithoutLoader(dir, imageLoader) {\n  if (dir.placeholder === true && imageLoader === noopImageLoader) {\n    throw new _RuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to true but ` + `no image loader is configured (i.e. the default one is being used), ` + `which would result in the same image being used for the primary image and its placeholder. ` + `To fix this, provide a loader or remove the \\`placeholder\\` attribute from the image.`);\n  }\n}\n/**\n * Warns or throws an error if an oversized dataURL placeholder is provided.\n */\nfunction assertNoOversizedDataUrl(dir) {\n  if (dir.placeholder && typeof dir.placeholder === 'string' && dir.placeholder.startsWith('data:')) {\n    if (dir.placeholder.length > DATA_URL_ERROR_LIMIT) {\n      throw new _RuntimeError(2965 /* RuntimeErrorCode.OVERSIZED_PLACEHOLDER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to a data URL which is longer ` + `than ${DATA_URL_ERROR_LIMIT} characters. This is strongly discouraged, as large inline placeholders ` + `directly increase the bundle size of Angular and hurt page load performance. To fix this, generate ` + `a smaller data URL placeholder.`);\n    }\n    if (dir.placeholder.length > DATA_URL_WARN_LIMIT) {\n      console.warn(_formatRuntimeError(2965 /* RuntimeErrorCode.OVERSIZED_PLACEHOLDER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to a data URL which is longer ` + `than ${DATA_URL_WARN_LIMIT} characters. This is discouraged, as large inline placeholders ` + `directly increase the bundle size of Angular and hurt page load performance. For better loading performance, ` + `generate a smaller data URL placeholder.`));\n    }\n  }\n}\n/**\n * Verifies that the `ngSrc` is not a Blob URL.\n */\nfunction assertNotBlobUrl(dir) {\n  const ngSrc = dir.ngSrc.trim();\n  if (ngSrc.startsWith('blob:')) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`ngSrc\\` was set to a blob URL (${ngSrc}). ` + `Blob URLs are not supported by the NgOptimizedImage directive. ` + `To fix this, disable the NgOptimizedImage directive for this element ` + `by removing \\`ngSrc\\` and using a regular \\`src\\` attribute instead.`);\n  }\n}\n/**\n * Verifies that the input is set to a non-empty string.\n */\nfunction assertNonEmptyInput(dir, name, value) {\n  const isString = typeof value === 'string';\n  const isEmptyString = isString && value.trim() === '';\n  if (!isString || isEmptyString) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`${name}\\` has an invalid value ` + `(\\`${value}\\`). To fix this, change the value to a non-empty string.`);\n  }\n}\n/**\n * Verifies that the `ngSrcset` is in a valid format, e.g. \"100w, 200w\" or \"1x, 2x\".\n */\nfunction assertValidNgSrcset(dir, value) {\n  if (value == null) return;\n  assertNonEmptyInput(dir, 'ngSrcset', value);\n  const stringVal = value;\n  const isValidWidthDescriptor = VALID_WIDTH_DESCRIPTOR_SRCSET.test(stringVal);\n  const isValidDensityDescriptor = VALID_DENSITY_DESCRIPTOR_SRCSET.test(stringVal);\n  if (isValidDensityDescriptor) {\n    assertUnderDensityCap(dir, stringVal);\n  }\n  const isValidSrcset = isValidWidthDescriptor || isValidDensityDescriptor;\n  if (!isValidSrcset) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`ngSrcset\\` has an invalid value (\\`${value}\\`). ` + `To fix this, supply \\`ngSrcset\\` using a comma-separated list of one or more width ` + `descriptors (e.g. \"100w, 200w\") or density descriptors (e.g. \"1x, 2x\").`);\n  }\n}\nfunction assertUnderDensityCap(dir, value) {\n  const underDensityCap = value.split(',').every(num => num === '' || parseFloat(num) <= ABSOLUTE_SRCSET_DENSITY_CAP);\n  if (!underDensityCap) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`ngSrcset\\` contains an unsupported image density:` + `\\`${value}\\`. NgOptimizedImage generally recommends a max image density of ` + `${RECOMMENDED_SRCSET_DENSITY_CAP}x but supports image densities up to ` + `${ABSOLUTE_SRCSET_DENSITY_CAP}x. The human eye cannot distinguish between image densities ` + `greater than ${RECOMMENDED_SRCSET_DENSITY_CAP}x - which makes them unnecessary for ` + `most use cases. Images that will be pinch-zoomed are typically the primary use case for ` + `${ABSOLUTE_SRCSET_DENSITY_CAP}x images. Please remove the high density descriptor and try again.`);\n  }\n}\n/**\n * Creates a `RuntimeError` instance to represent a situation when an input is set after\n * the directive has initialized.\n */\nfunction postInitInputChangeError(dir, inputName) {\n  let reason;\n  if (inputName === 'width' || inputName === 'height') {\n    reason = `Changing \\`${inputName}\\` may result in different attribute value ` + `applied to the underlying image element and cause layout shifts on a page.`;\n  } else {\n    reason = `Changing the \\`${inputName}\\` would have no effect on the underlying ` + `image element, because the resource loading has already occurred.`;\n  }\n  return new _RuntimeError(2953 /* RuntimeErrorCode.UNEXPECTED_INPUT_CHANGE */, `${imgDirectiveDetails(dir.ngSrc)} \\`${inputName}\\` was updated after initialization. ` + `The NgOptimizedImage directive will not react to this input change. ${reason} ` + `To fix this, either switch \\`${inputName}\\` to a static value ` + `or wrap the image element in an @if that is gated on the necessary value.`);\n}\n/**\n * Verify that none of the listed inputs has changed.\n */\nfunction assertNoPostInitInputChange(dir, changes, inputs) {\n  inputs.forEach(input => {\n    const isUpdated = changes.hasOwnProperty(input);\n    if (isUpdated && !changes[input].isFirstChange()) {\n      if (input === 'ngSrc') {\n        // When the `ngSrc` input changes, we detect that only in the\n        // `ngOnChanges` hook, thus the `ngSrc` is already set. We use\n        // `ngSrc` in the error message, so we use a previous value, but\n        // not the updated one in it.\n        dir = {\n          ngSrc: changes[input].previousValue\n        };\n      }\n      throw postInitInputChangeError(dir, input);\n    }\n  });\n}\n/**\n * Verifies that a specified input is a number greater than 0.\n */\nfunction assertGreaterThanZero(dir, inputValue, inputName) {\n  const validNumber = typeof inputValue === 'number' && inputValue > 0;\n  const validString = typeof inputValue === 'string' && /^\\d+$/.test(inputValue.trim()) && parseInt(inputValue) > 0;\n  if (!validNumber && !validString) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`${inputName}\\` has an invalid value. ` + `To fix this, provide \\`${inputName}\\` as a number greater than 0.`);\n  }\n}\n/**\n * Verifies that the rendered image is not visually distorted. Effectively this is checking:\n * - Whether the \"width\" and \"height\" attributes reflect the actual dimensions of the image.\n * - Whether image styling is \"correct\" (see below for a longer explanation).\n */\nfunction assertNoImageDistortion(dir, img, renderer) {\n  const callback = () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n    const computedStyle = window.getComputedStyle(img);\n    let renderedWidth = parseFloat(computedStyle.getPropertyValue('width'));\n    let renderedHeight = parseFloat(computedStyle.getPropertyValue('height'));\n    const boxSizing = computedStyle.getPropertyValue('box-sizing');\n    if (boxSizing === 'border-box') {\n      const paddingTop = computedStyle.getPropertyValue('padding-top');\n      const paddingRight = computedStyle.getPropertyValue('padding-right');\n      const paddingBottom = computedStyle.getPropertyValue('padding-bottom');\n      const paddingLeft = computedStyle.getPropertyValue('padding-left');\n      renderedWidth -= parseFloat(paddingRight) + parseFloat(paddingLeft);\n      renderedHeight -= parseFloat(paddingTop) + parseFloat(paddingBottom);\n    }\n    const renderedAspectRatio = renderedWidth / renderedHeight;\n    const nonZeroRenderedDimensions = renderedWidth !== 0 && renderedHeight !== 0;\n    const intrinsicWidth = img.naturalWidth;\n    const intrinsicHeight = img.naturalHeight;\n    const intrinsicAspectRatio = intrinsicWidth / intrinsicHeight;\n    const suppliedWidth = dir.width;\n    const suppliedHeight = dir.height;\n    const suppliedAspectRatio = suppliedWidth / suppliedHeight;\n    // Tolerance is used to account for the impact of subpixel rendering.\n    // Due to subpixel rendering, the rendered, intrinsic, and supplied\n    // aspect ratios of a correctly configured image may not exactly match.\n    // For example, a `width=4030 height=3020` image might have a rendered\n    // size of \"1062w, 796.48h\". (An aspect ratio of 1.334... vs. 1.333...)\n    const inaccurateDimensions = Math.abs(suppliedAspectRatio - intrinsicAspectRatio) > ASPECT_RATIO_TOLERANCE;\n    const stylingDistortion = nonZeroRenderedDimensions && Math.abs(intrinsicAspectRatio - renderedAspectRatio) > ASPECT_RATIO_TOLERANCE;\n    if (inaccurateDimensions) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the aspect ratio of the image does not match ` + `the aspect ratio indicated by the width and height attributes. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h ` + `(aspect-ratio: ${round(intrinsicAspectRatio)}). \\nSupplied width and height attributes: ` + `${suppliedWidth}w x ${suppliedHeight}h (aspect-ratio: ${round(suppliedAspectRatio)}). ` + `\\nTo fix this, update the width and height attributes.`));\n    } else if (stylingDistortion) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the aspect ratio of the rendered image ` + `does not match the image's intrinsic aspect ratio. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h ` + `(aspect-ratio: ${round(intrinsicAspectRatio)}). \\nRendered image size: ` + `${renderedWidth}w x ${renderedHeight}h (aspect-ratio: ` + `${round(renderedAspectRatio)}). \\nThis issue can occur if \"width\" and \"height\" ` + `attributes are added to an image without updating the corresponding ` + `image styling. To fix this, adjust image styling. In most cases, ` + `adding \"height: auto\" or \"width: auto\" to the image styling will fix ` + `this issue.`));\n    } else if (!dir.ngSrcset && nonZeroRenderedDimensions) {\n      // If `ngSrcset` hasn't been set, sanity check the intrinsic size.\n      const recommendedWidth = RECOMMENDED_SRCSET_DENSITY_CAP * renderedWidth;\n      const recommendedHeight = RECOMMENDED_SRCSET_DENSITY_CAP * renderedHeight;\n      const oversizedWidth = intrinsicWidth - recommendedWidth >= OVERSIZED_IMAGE_TOLERANCE;\n      const oversizedHeight = intrinsicHeight - recommendedHeight >= OVERSIZED_IMAGE_TOLERANCE;\n      if (oversizedWidth || oversizedHeight) {\n        console.warn(_formatRuntimeError(2960 /* RuntimeErrorCode.OVERSIZED_IMAGE */, `${imgDirectiveDetails(dir.ngSrc)} the intrinsic image is significantly ` + `larger than necessary. ` + `\\nRendered image size: ${renderedWidth}w x ${renderedHeight}h. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h. ` + `\\nRecommended intrinsic image size: ${recommendedWidth}w x ${recommendedHeight}h. ` + `\\nNote: Recommended intrinsic image size is calculated assuming a maximum DPR of ` + `${RECOMMENDED_SRCSET_DENSITY_CAP}. To improve loading time, resize the image ` + `or consider using the \"ngSrcset\" and \"sizes\" attributes.`));\n      }\n    }\n  };\n  const removeLoadListenerFn = renderer.listen(img, 'load', callback);\n  // We only listen to the `error` event to remove the `load` event listener because it will not be\n  // fired if the image fails to load. This is done to prevent memory leaks in development mode\n  // because image elements aren't garbage-collected properly. It happens because zone.js stores the\n  // event listener directly on the element and closures capture `dir`.\n  const removeErrorListenerFn = renderer.listen(img, 'error', () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n  });\n  callOnLoadIfImageIsLoaded(img, callback);\n}\n/**\n * Verifies that a specified input is set.\n */\nfunction assertNonEmptyWidthAndHeight(dir) {\n  let missingAttributes = [];\n  if (dir.width === undefined) missingAttributes.push('width');\n  if (dir.height === undefined) missingAttributes.push('height');\n  if (missingAttributes.length > 0) {\n    throw new _RuntimeError(2954 /* RuntimeErrorCode.REQUIRED_INPUT_MISSING */, `${imgDirectiveDetails(dir.ngSrc)} these required attributes ` + `are missing: ${missingAttributes.map(attr => `\"${attr}\"`).join(', ')}. ` + `Including \"width\" and \"height\" attributes will prevent image-related layout shifts. ` + `To fix this, include \"width\" and \"height\" attributes on the image tag or turn on ` + `\"fill\" mode with the \\`fill\\` attribute.`);\n  }\n}\n/**\n * Verifies that width and height are not set. Used in fill mode, where those attributes don't make\n * sense.\n */\nfunction assertEmptyWidthAndHeight(dir) {\n  if (dir.width || dir.height) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the attributes \\`height\\` and/or \\`width\\` are present ` + `along with the \\`fill\\` attribute. Because \\`fill\\` mode causes an image to fill its containing ` + `element, the size attributes have no effect and should be removed.`);\n  }\n}\n/**\n * Verifies that the rendered image has a nonzero height. If the image is in fill mode, provides\n * guidance that this can be caused by the containing element's CSS position property.\n */\nfunction assertNonZeroRenderedHeight(dir, img, renderer) {\n  const callback = () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n    const renderedHeight = img.clientHeight;\n    if (dir.fill && renderedHeight === 0) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the height of the fill-mode image is zero. ` + `This is likely because the containing element does not have the CSS 'position' ` + `property set to one of the following: \"relative\", \"fixed\", or \"absolute\". ` + `To fix this problem, make sure the container element has the CSS 'position' ` + `property defined and the height of the element is not zero.`));\n    }\n  };\n  const removeLoadListenerFn = renderer.listen(img, 'load', callback);\n  // See comments in the `assertNoImageDistortion`.\n  const removeErrorListenerFn = renderer.listen(img, 'error', () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n  });\n  callOnLoadIfImageIsLoaded(img, callback);\n}\n/**\n * Verifies that the `loading` attribute is set to a valid input &\n * is not used on priority images.\n */\nfunction assertValidLoadingInput(dir) {\n  if (dir.loading && dir.priority) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loading\\` attribute ` + `was used on an image that was marked \"priority\". ` + `Setting \\`loading\\` on priority images is not allowed ` + `because these images will always be eagerly loaded. ` + `To fix this, remove the “loading” attribute from the priority image.`);\n  }\n  const validInputs = ['auto', 'eager', 'lazy'];\n  if (typeof dir.loading === 'string' && !validInputs.includes(dir.loading)) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loading\\` attribute ` + `has an invalid value (\\`${dir.loading}\\`). ` + `To fix this, provide a valid value (\"lazy\", \"eager\", or \"auto\").`);\n  }\n}\n/**\n * Verifies that the `decoding` attribute is set to a valid input.\n */\nfunction assertValidDecodingInput(dir) {\n  const validInputs = ['sync', 'async', 'auto'];\n  if (typeof dir.decoding === 'string' && !validInputs.includes(dir.decoding)) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`decoding\\` attribute ` + `has an invalid value (\\`${dir.decoding}\\`). ` + `To fix this, provide a valid value (\"sync\", \"async\", or \"auto\").`);\n  }\n}\n/**\n * Warns if NOT using a loader (falling back to the generic loader) and\n * the image appears to be hosted on one of the image CDNs for which\n * we do have a built-in image loader. Suggests switching to the\n * built-in loader.\n *\n * @param ngSrc Value of the ngSrc attribute\n * @param imageLoader ImageLoader provided\n */\nfunction assertNotMissingBuiltInLoader(ngSrc, imageLoader) {\n  if (imageLoader === noopImageLoader) {\n    let builtInLoaderName = '';\n    for (const loader of BUILT_IN_LOADERS) {\n      if (loader.testUrl(ngSrc)) {\n        builtInLoaderName = loader.name;\n        break;\n      }\n    }\n    if (builtInLoaderName) {\n      console.warn(_formatRuntimeError(2962 /* RuntimeErrorCode.MISSING_BUILTIN_LOADER */, `NgOptimizedImage: It looks like your images may be hosted on the ` + `${builtInLoaderName} CDN, but your app is not using Angular's ` + `built-in loader for that CDN. We recommend switching to use ` + `the built-in by calling \\`provide${builtInLoaderName}Loader()\\` ` + `in your \\`providers\\` and passing it your instance's base URL. ` + `If you don't want to use the built-in loader, define a custom ` + `loader function using IMAGE_LOADER to silence this warning.`));\n    }\n  }\n}\n/**\n * Warns if ngSrcset is present and no loader is configured (i.e. the default one is being used).\n */\nfunction assertNoNgSrcsetWithoutLoader(dir, imageLoader) {\n  if (dir.ngSrcset && imageLoader === noopImageLoader) {\n    console.warn(_formatRuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`ngSrcset\\` attribute is present but ` + `no image loader is configured (i.e. the default one is being used), ` + `which would result in the same image being used for all configured sizes. ` + `To fix this, provide a loader or remove the \\`ngSrcset\\` attribute from the image.`));\n  }\n}\n/**\n * Warns if loaderParams is present and no loader is configured (i.e. the default one is being\n * used).\n */\nfunction assertNoLoaderParamsWithoutLoader(dir, imageLoader) {\n  if (dir.loaderParams && imageLoader === noopImageLoader) {\n    console.warn(_formatRuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loaderParams\\` attribute is present but ` + `no image loader is configured (i.e. the default one is being used), ` + `which means that the loaderParams data will not be consumed and will not affect the URL. ` + `To fix this, provide a custom loader or remove the \\`loaderParams\\` attribute from the image.`));\n  }\n}\n/**\n * Warns if the priority attribute is used too often on page load\n */\nasync function assetPriorityCountBelowThreshold(appRef) {\n  if (IMGS_WITH_PRIORITY_ATTR_COUNT === 0) {\n    IMGS_WITH_PRIORITY_ATTR_COUNT++;\n    await appRef.whenStable();\n    if (IMGS_WITH_PRIORITY_ATTR_COUNT > PRIORITY_COUNT_THRESHOLD) {\n      console.warn(_formatRuntimeError(2966 /* RuntimeErrorCode.TOO_MANY_PRIORITY_ATTRIBUTES */, `NgOptimizedImage: The \"priority\" attribute is set to true more than ${PRIORITY_COUNT_THRESHOLD} times (${IMGS_WITH_PRIORITY_ATTR_COUNT} times). ` + `Marking too many images as \"high\" priority can hurt your application's LCP (https://web.dev/lcp). ` + `\"Priority\" should only be set on the image expected to be the page's LCP element.`));\n    }\n  } else {\n    IMGS_WITH_PRIORITY_ATTR_COUNT++;\n  }\n}\n/**\n * Warns if placeholder's dimension are over a threshold.\n *\n * This assert function is meant to only run on the browser.\n */\nfunction assertPlaceholderDimensions(dir, imgElement) {\n  const computedStyle = window.getComputedStyle(imgElement);\n  let renderedWidth = parseFloat(computedStyle.getPropertyValue('width'));\n  let renderedHeight = parseFloat(computedStyle.getPropertyValue('height'));\n  if (renderedWidth > PLACEHOLDER_DIMENSION_LIMIT || renderedHeight > PLACEHOLDER_DIMENSION_LIMIT) {\n    console.warn(_formatRuntimeError(2967 /* RuntimeErrorCode.PLACEHOLDER_DIMENSION_LIMIT_EXCEEDED */, `${imgDirectiveDetails(dir.ngSrc)} it uses a placeholder image, but at least one ` + `of the dimensions attribute (height or width) exceeds the limit of ${PLACEHOLDER_DIMENSION_LIMIT}px. ` + `To fix this, use a smaller image as a placeholder.`));\n  }\n}\nfunction callOnLoadIfImageIsLoaded(img, callback) {\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-complete\n  // The spec defines that `complete` is truthy once its request state is fully available.\n  // The image may already be available if it’s loaded from the browser cache.\n  // In that case, the `load` event will not fire at all, meaning that all setup\n  // callbacks listening for the `load` event will not be invoked.\n  // In Safari, there is a known behavior where the `complete` property of an\n  // `HTMLImageElement` may sometimes return `true` even when the image is not fully loaded.\n  // Checking both `img.complete` and `img.naturalWidth` is the most reliable way to\n  // determine if an image has been fully loaded, especially in browsers where the\n  // `complete` property may return `true` prematurely.\n  if (img.complete && img.naturalWidth) {\n    callback();\n  }\n}\nfunction round(input) {\n  return Number.isInteger(input) ? input : input.toFixed(2);\n}\n// Transform function to handle SafeValue input for ngSrc. This doesn't do any sanitization,\n// as that is not needed for img.src and img.srcset. This transform is purely for compatibility.\nfunction unwrapSafeUrl(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return _unwrapSafeValue(value);\n}\n// Transform function to handle inputs which may be booleans, strings, or string representations\n// of boolean values. Used for the placeholder attribute.\nfunction booleanOrUrlAttribute(value) {\n  if (typeof value === 'string' && value !== 'true' && value !== 'false' && value !== '') {\n    return value;\n  }\n  return booleanAttribute(value);\n}\nexport { IMAGE_LOADER, NgOptimizedImage, PRECONNECT_CHECK_BLOCKLIST, VERSION, ViewportScroller, isPlatformBrowser, isPlatformServer, provideCloudflareLoader, provideCloudinaryLoader, provideImageKitLoader, provideImgixLoader, provideNetlifyLoader, registerLocaleData, NullViewportScroller as ɵNullViewportScroller, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError as _RuntimeError, Injectable, InjectionToken, inject, NgZone, DestroyRef, ɵformatRuntimeError as _formatRuntimeError, PendingTasks, ɵConsole as _Console, runInInjectionContext, DOCUMENT, Inject, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { concatMap, filter, map, finalize, switchMap } from 'rxjs/operators';\nimport { of, Observable, from } from 'rxjs';\nimport { XhrFactory, parseCookieValue } from './xhr.mjs';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {}\n\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n  /**\n   * Internal map of lowercase header names to values.\n   */\n  headers;\n  /**\n   * Internal map of lowercased header names to the normalized\n   * form of the name (the form seen first).\n   */\n  normalizedNames = new Map();\n  /**\n   * Complete the lazy initialization of this object (needed before reading).\n   */\n  lazyInit;\n  /**\n   * Queued updates to be materialized the next initialization.\n   */\n  lazyUpdate = null;\n  /**  Constructs a new HTTP header object with the given values.*/\n  constructor(headers) {\n    if (!headers) {\n      this.headers = new Map();\n    } else if (typeof headers === 'string') {\n      this.lazyInit = () => {\n        this.headers = new Map();\n        headers.split('\\n').forEach(line => {\n          const index = line.indexOf(':');\n          if (index > 0) {\n            const name = line.slice(0, index);\n            const value = line.slice(index + 1).trim();\n            this.addHeaderEntry(name, value);\n          }\n        });\n      };\n    } else if (typeof Headers !== 'undefined' && headers instanceof Headers) {\n      this.headers = new Map();\n      headers.forEach((value, name) => {\n        this.addHeaderEntry(name, value);\n      });\n    } else {\n      this.lazyInit = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          assertValidHeaders(headers);\n        }\n        this.headers = new Map();\n        Object.entries(headers).forEach(([name, values]) => {\n          this.setHeaderEntries(name, values);\n        });\n      };\n    }\n  }\n  /**\n   * Checks for existence of a given header.\n   *\n   * @param name The header name to check for existence.\n   *\n   * @returns True if the header exists, false otherwise.\n   */\n  has(name) {\n    this.init();\n    return this.headers.has(name.toLowerCase());\n  }\n  /**\n   * Retrieves the first value of a given header.\n   *\n   * @param name The header name.\n   *\n   * @returns The value string if the header exists, null otherwise\n   */\n  get(name) {\n    this.init();\n    const values = this.headers.get(name.toLowerCase());\n    return values && values.length > 0 ? values[0] : null;\n  }\n  /**\n   * Retrieves the names of the headers.\n   *\n   * @returns A list of header names.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.normalizedNames.values());\n  }\n  /**\n   * Retrieves a list of values for a given header.\n   *\n   * @param name The header name from which to retrieve values.\n   *\n   * @returns A string of values if the header exists, null otherwise.\n   */\n  getAll(name) {\n    this.init();\n    return this.headers.get(name.toLowerCase()) || null;\n  }\n  /**\n   * Appends a new value to the existing set of values for a header\n   * and returns them in a clone of the original instance.\n   *\n   * @param name The header name for which to append the values.\n   * @param value The value to append.\n   *\n   * @returns A clone of the HTTP headers object with the value appended to the given header.\n   */\n  append(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Sets or modifies a value for a given header in a clone of the original instance.\n   * If the header already exists, its value is replaced with the given value\n   * in the returned object.\n   *\n   * @param name The header name.\n   * @param value The value or values to set or override for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the newly set header value.\n   */\n  set(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Deletes values for a given header in a clone of the original instance.\n   *\n   * @param name The header name.\n   * @param value The value or values to delete for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the given value deleted.\n   */\n  delete(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'd'\n    });\n  }\n  maybeSetNormalizedName(name, lcName) {\n    if (!this.normalizedNames.has(lcName)) {\n      this.normalizedNames.set(lcName, name);\n    }\n  }\n  init() {\n    if (!!this.lazyInit) {\n      if (this.lazyInit instanceof HttpHeaders) {\n        this.copyFrom(this.lazyInit);\n      } else {\n        this.lazyInit();\n      }\n      this.lazyInit = null;\n      if (!!this.lazyUpdate) {\n        this.lazyUpdate.forEach(update => this.applyUpdate(update));\n        this.lazyUpdate = null;\n      }\n    }\n  }\n  copyFrom(other) {\n    other.init();\n    Array.from(other.headers.keys()).forEach(key => {\n      this.headers.set(key, other.headers.get(key));\n      this.normalizedNames.set(key, other.normalizedNames.get(key));\n    });\n  }\n  clone(update) {\n    const clone = new HttpHeaders();\n    clone.lazyInit = !!this.lazyInit && this.lazyInit instanceof HttpHeaders ? this.lazyInit : this;\n    clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n    return clone;\n  }\n  applyUpdate(update) {\n    const key = update.name.toLowerCase();\n    switch (update.op) {\n      case 'a':\n      case 's':\n        let value = update.value;\n        if (typeof value === 'string') {\n          value = [value];\n        }\n        if (value.length === 0) {\n          return;\n        }\n        this.maybeSetNormalizedName(update.name, key);\n        const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n        base.push(...value);\n        this.headers.set(key, base);\n        break;\n      case 'd':\n        const toDelete = update.value;\n        if (!toDelete) {\n          this.headers.delete(key);\n          this.normalizedNames.delete(key);\n        } else {\n          let existing = this.headers.get(key);\n          if (!existing) {\n            return;\n          }\n          existing = existing.filter(value => toDelete.indexOf(value) === -1);\n          if (existing.length === 0) {\n            this.headers.delete(key);\n            this.normalizedNames.delete(key);\n          } else {\n            this.headers.set(key, existing);\n          }\n        }\n        break;\n    }\n  }\n  addHeaderEntry(name, value) {\n    const key = name.toLowerCase();\n    this.maybeSetNormalizedName(name, key);\n    if (this.headers.has(key)) {\n      this.headers.get(key).push(value);\n    } else {\n      this.headers.set(key, [value]);\n    }\n  }\n  setHeaderEntries(name, values) {\n    const headerValues = (Array.isArray(values) ? values : [values]).map(value => value.toString());\n    const key = name.toLowerCase();\n    this.headers.set(key, headerValues);\n    this.maybeSetNormalizedName(name, key);\n  }\n  /**\n   * @internal\n   */\n  forEach(fn) {\n    this.init();\n    Array.from(this.normalizedNames.keys()).forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n  }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings, numbers or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n  for (const [key, value] of Object.entries(headers)) {\n    if (!(typeof value === 'string' || typeof value === 'number') && !Array.isArray(value)) {\n      throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` + `Expecting either a string, a number or an array, but got: \\`${value}\\`.`);\n    }\n  }\n}\n\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n  /**\n   * Encodes a key name for a URL parameter or query-string.\n   * @param key The key name.\n   * @returns The encoded key name.\n   */\n  encodeKey(key) {\n    return standardEncoding(key);\n  }\n  /**\n   * Encodes the value of a URL parameter or query-string.\n   * @param value The value.\n   * @returns The encoded value.\n   */\n  encodeValue(value) {\n    return standardEncoding(value);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string key.\n   * @param key The encoded key name.\n   * @returns The decoded key name.\n   */\n  decodeKey(key) {\n    return decodeURIComponent(key);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string value.\n   * @param value The encoded value.\n   * @returns The decoded value.\n   */\n  decodeValue(value) {\n    return decodeURIComponent(value);\n  }\n}\nfunction paramParser(rawParams, codec) {\n  const map = new Map();\n  if (rawParams.length > 0) {\n    // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n    // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n    // may start with the `?` char, so we strip it if it's present.\n    const params = rawParams.replace(/^\\?/, '').split('&');\n    params.forEach(param => {\n      const eqIdx = param.indexOf('=');\n      const [key, val] = eqIdx == -1 ? [codec.decodeKey(param), ''] : [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n      const list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n  '40': '@',\n  '3A': ':',\n  '24': '$',\n  '2C': ',',\n  '3B': ';',\n  '3D': '=',\n  '3F': '?',\n  '2F': '/'\n};\nfunction standardEncoding(v) {\n  return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n  return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n  map;\n  encoder;\n  updates = null;\n  cloneFrom = null;\n  constructor(options = {}) {\n    this.encoder = options.encoder || new HttpUrlEncodingCodec();\n    if (options.fromString) {\n      if (options.fromObject) {\n        throw new _RuntimeError(2805 /* RuntimeErrorCode.CANNOT_SPECIFY_BOTH_FROM_STRING_AND_FROM_OBJECT */, ngDevMode && 'Cannot specify both fromString and fromObject.');\n      }\n      this.map = paramParser(options.fromString, this.encoder);\n    } else if (!!options.fromObject) {\n      this.map = new Map();\n      Object.keys(options.fromObject).forEach(key => {\n        const value = options.fromObject[key];\n        // convert the values to strings\n        const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n        this.map.set(key, values);\n      });\n    } else {\n      this.map = null;\n    }\n  }\n  /**\n   * Reports whether the body includes one or more values for a given parameter.\n   * @param param The parameter name.\n   * @returns True if the parameter has one or more values,\n   * false if it has no value or is not present.\n   */\n  has(param) {\n    this.init();\n    return this.map.has(param);\n  }\n  /**\n   * Retrieves the first value for a parameter.\n   * @param param The parameter name.\n   * @returns The first value of the given parameter,\n   * or `null` if the parameter is not present.\n   */\n  get(param) {\n    this.init();\n    const res = this.map.get(param);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Retrieves all values for a  parameter.\n   * @param param The parameter name.\n   * @returns All values in a string array,\n   * or `null` if the parameter not present.\n   */\n  getAll(param) {\n    this.init();\n    return this.map.get(param) || null;\n  }\n  /**\n   * Retrieves all the parameters for this body.\n   * @returns The parameter names in a string array.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.map.keys());\n  }\n  /**\n   * Appends a new value to existing values for a parameter.\n   * @param param The parameter name.\n   * @param value The new value to add.\n   * @return A new body with the appended value.\n   */\n  append(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Constructs a new body with appended values for the given parameter name.\n   * @param params parameters and values\n   * @return A new body with the new value.\n   */\n  appendAll(params) {\n    const updates = [];\n    Object.keys(params).forEach(param => {\n      const value = params[param];\n      if (Array.isArray(value)) {\n        value.forEach(_value => {\n          updates.push({\n            param,\n            value: _value,\n            op: 'a'\n          });\n        });\n      } else {\n        updates.push({\n          param,\n          value: value,\n          op: 'a'\n        });\n      }\n    });\n    return this.clone(updates);\n  }\n  /**\n   * Replaces the value for a parameter.\n   * @param param The parameter name.\n   * @param value The new value.\n   * @return A new body with the new value.\n   */\n  set(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Removes a given value or all values from a parameter.\n   * @param param The parameter name.\n   * @param value The value to remove, if provided.\n   * @return A new body with the given value removed, or with all values\n   * removed if no value is specified.\n   */\n  delete(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'd'\n    });\n  }\n  /**\n   * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n   * separated by `&`s.\n   */\n  toString() {\n    this.init();\n    return this.keys().map(key => {\n      const eKey = this.encoder.encodeKey(key);\n      // `a: ['1']` produces `'a=1'`\n      // `b: []` produces `''`\n      // `c: ['1', '2']` produces `'c=1&c=2'`\n      return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value)).join('&');\n    })\n    // filter out empty values because `b: []` produces `''`\n    // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n    .filter(param => param !== '').join('&');\n  }\n  clone(update) {\n    const clone = new HttpParams({\n      encoder: this.encoder\n    });\n    clone.cloneFrom = this.cloneFrom || this;\n    clone.updates = (this.updates || []).concat(update);\n    return clone;\n  }\n  init() {\n    if (this.map === null) {\n      this.map = new Map();\n    }\n    if (this.cloneFrom !== null) {\n      this.cloneFrom.init();\n      this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n      this.updates.forEach(update => {\n        switch (update.op) {\n          case 'a':\n          case 's':\n            const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n            base.push(valueToString(update.value));\n            this.map.set(update.param, base);\n            break;\n          case 'd':\n            if (update.value !== undefined) {\n              let base = this.map.get(update.param) || [];\n              const idx = base.indexOf(valueToString(update.value));\n              if (idx !== -1) {\n                base.splice(idx, 1);\n              }\n              if (base.length > 0) {\n                this.map.set(update.param, base);\n              } else {\n                this.map.delete(update.param);\n              }\n            } else {\n              this.map.delete(update.param);\n              break;\n            }\n        }\n      });\n      this.cloneFrom = this.updates = null;\n    }\n  }\n}\n\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n  defaultValue;\n  constructor(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```ts\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n  map = new Map();\n  /**\n   * Store a value in the context. If a value is already present it will be overwritten.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   * @param value The value to store.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  set(token, value) {\n    this.map.set(token, value);\n    return this;\n  }\n  /**\n   * Retrieve the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns The stored value or default if one is defined.\n   */\n  get(token) {\n    if (!this.map.has(token)) {\n      this.map.set(token, token.defaultValue());\n    }\n    return this.map.get(token);\n  }\n  /**\n   * Delete the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  delete(token) {\n    this.map.delete(token);\n    return this;\n  }\n  /**\n   * Checks for existence of a given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns True if the token exists, false otherwise.\n   */\n  has(token) {\n    return this.map.has(token);\n  }\n  /**\n   * @returns a list of tokens currently stored in the context.\n   */\n  keys() {\n    return this.map.keys();\n  }\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n  switch (method) {\n    case 'DELETE':\n    case 'GET':\n    case 'HEAD':\n    case 'OPTIONS':\n    case 'JSONP':\n      return false;\n    default:\n      return true;\n  }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n  return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n  return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n  return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n  return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * `Content-Type` is an HTTP header used to indicate the media type\n * (also known as MIME type) of the resource being sent to the client\n * or received from the server.\n */\nconst CONTENT_TYPE_HEADER = 'Content-Type';\n/**\n * The `Accept` header is an HTTP request header that indicates the media types\n * (or content types) the client is willing to receive from the server.\n */\nconst ACCEPT_HEADER = 'Accept';\n/**\n * `X-Request-URL` is a custom HTTP header used in older browser versions,\n * including Firefox (< 32), Chrome (< 37), Safari (< 8), and Internet Explorer,\n * to include the full URL of the request in cross-origin requests.\n */\nconst X_REQUEST_URL_HEADER = 'X-Request-URL';\n/**\n * `text/plain` is a content type used to indicate that the content being\n * sent is plain text with no special formatting or structured data\n * like HTML, XML, or JSON.\n */\nconst TEXT_CONTENT_TYPE = 'text/plain';\n/**\n * `application/json` is a content type used to indicate that the content\n * being sent is in the JSON format.\n */\nconst JSON_CONTENT_TYPE = 'application/json';\n/**\n * `application/json, text/plain, *\\/*` is a content negotiation string often seen in the\n * Accept header of HTTP requests. It indicates the types of content the client is willing\n * to accept from the server, with a preference for `application/json` and `text/plain`,\n * but also accepting any other type (*\\/*).\n */\nconst ACCEPT_HEADER_VALUE = `${JSON_CONTENT_TYPE}, ${TEXT_CONTENT_TYPE}, */*`;\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n  url;\n  /**\n   * The request body, or `null` if one isn't set.\n   *\n   * Bodies are not enforced to be immutable, as they can include a reference to any\n   * user-defined data type. However, interceptors should take care to preserve\n   * idempotence by treating them as such.\n   */\n  body = null;\n  /**\n   * Outgoing headers for this request.\n   */\n  headers;\n  /**\n   * Shared and mutable context that can be used by interceptors\n   */\n  context;\n  /**\n   * Whether this request should be made in a way that exposes progress events.\n   *\n   * Progress events are expensive (change detection runs on each event) and so\n   * they should only be requested if the consumer intends to monitor them.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  reportProgress = false;\n  /**\n   * Whether this request should be sent with outgoing credentials (cookies).\n   */\n  withCredentials = false;\n  /**\n   *  The credentials mode of the request, which determines how cookies and HTTP authentication are handled.\n   *  This can affect whether cookies are sent with the request, and how authentication is handled.\n   */\n  credentials;\n  /**\n   * When using the fetch implementation and set to `true`, the browser will not abort the associated request if the page that initiated it is unloaded before the request is complete.\n   */\n  keepalive = false;\n  /**\n   * Controls how the request will interact with the browser's HTTP cache.\n   * This affects whether a response is retrieved from the cache, how it is stored, or if it bypasses the cache altogether.\n   */\n  cache;\n  /**\n   * Indicates the relative priority of the request. This may be used by the browser to decide the order in which requests are dispatched and resources fetched.\n   */\n  priority;\n  /**\n   * The mode of the request, which determines how the request will interact with the browser's security model.\n   * This can affect things like CORS (Cross-Origin Resource Sharing) and same-origin policies.\n   */\n  mode;\n  /**\n   * The redirect mode of the request, which determines how redirects are handled.\n   * This can affect whether the request follows redirects automatically, or if it fails when a redirect occurs.\n   */\n  redirect;\n  /**\n   * The expected response type of the server.\n   *\n   * This is used to parse the response appropriately before returning it to\n   * the requestee.\n   */\n  responseType = 'json';\n  /**\n   * The outgoing HTTP request method.\n   */\n  method;\n  /**\n   * Outgoing URL parameters.\n   *\n   * To pass a string representation of HTTP parameters in the URL-query-string format,\n   * the `HttpParamsOptions`' `fromString` may be used. For example:\n   *\n   * ```ts\n   * new HttpParams({fromString: 'angular=awesome'})\n   * ```\n   */\n  params;\n  /**\n   * The outgoing URL with all URL parameters set.\n   */\n  urlWithParams;\n  /**\n   * The HttpTransferCache option for the request\n   */\n  transferCache;\n  /**\n   * The timeout for the backend HTTP request in ms.\n   */\n  timeout;\n  constructor(method, url, third, fourth) {\n    this.url = url;\n    this.method = method.toUpperCase();\n    // Next, need to figure out which argument holds the HttpRequestInit\n    // options, if any.\n    let options;\n    // Check whether a body argument is expected. The only valid way to omit\n    // the body argument is to use a known no-body method like GET.\n    if (mightHaveBody(this.method) || !!fourth) {\n      // Body is the third argument, options are the fourth.\n      this.body = third !== undefined ? third : null;\n      options = fourth;\n    } else {\n      // No body required, options are the third argument. The body stays null.\n      options = third;\n    }\n    // If options have been passed, interpret them.\n    if (options) {\n      // Normalize reportProgress and withCredentials.\n      this.reportProgress = !!options.reportProgress;\n      this.withCredentials = !!options.withCredentials;\n      this.keepalive = !!options.keepalive;\n      // Override default response type of 'json' if one is provided.\n      if (!!options.responseType) {\n        this.responseType = options.responseType;\n      }\n      // Override headers if they're provided.\n      if (options.headers) {\n        this.headers = options.headers;\n      }\n      if (options.context) {\n        this.context = options.context;\n      }\n      if (options.params) {\n        this.params = options.params;\n      }\n      if (options.priority) {\n        this.priority = options.priority;\n      }\n      if (options.cache) {\n        this.cache = options.cache;\n      }\n      if (options.credentials) {\n        this.credentials = options.credentials;\n      }\n      if (typeof options.timeout === 'number') {\n        // XHR will ignore any value below 1. AbortSignals only accept unsigned integers.\n        if (options.timeout < 1 || !Number.isInteger(options.timeout)) {\n          // TODO: create a runtime error\n          throw new Error(ngDevMode ? '`timeout` must be a positive integer value' : '');\n        }\n        this.timeout = options.timeout;\n      }\n      if (options.mode) {\n        this.mode = options.mode;\n      }\n      if (options.redirect) {\n        this.redirect = options.redirect;\n      }\n      // We do want to assign transferCache even if it's falsy (false is valid value)\n      this.transferCache = options.transferCache;\n    }\n    // If no headers have been passed in, construct a new HttpHeaders instance.\n    this.headers ??= new HttpHeaders();\n    // If no context have been passed in, construct a new HttpContext instance.\n    this.context ??= new HttpContext();\n    // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n    if (!this.params) {\n      this.params = new HttpParams();\n      this.urlWithParams = url;\n    } else {\n      // Encode the parameters to a string in preparation for inclusion in the URL.\n      const params = this.params.toString();\n      if (params.length === 0) {\n        // No parameters, the visible URL is just the URL given at creation time.\n        this.urlWithParams = url;\n      } else {\n        // Does the URL already have query parameters? Look for '?'.\n        const qIdx = url.indexOf('?');\n        // There are 3 cases to handle:\n        // 1) No existing parameters -> append '?' followed by params.\n        // 2) '?' exists and is followed by existing query string ->\n        //    append '&' followed by params.\n        // 3) '?' exists at the end of the url -> append params directly.\n        // This basically amounts to determining the character, if any, with\n        // which to join the URL and parameters.\n        const sep = qIdx === -1 ? '?' : qIdx < url.length - 1 ? '&' : '';\n        this.urlWithParams = url + sep + params;\n      }\n    }\n  }\n  /**\n   * Transform the free-form body into a serialized format suitable for\n   * transmission to the server.\n   */\n  serializeBody() {\n    // If no body is present, no need to serialize it.\n    if (this.body === null) {\n      return null;\n    }\n    // Check whether the body is already in a serialized form. If so,\n    // it can just be returned directly.\n    if (typeof this.body === 'string' || isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) || isUrlSearchParams(this.body)) {\n      return this.body;\n    }\n    // Check whether the body is an instance of HttpUrlEncodedParams.\n    if (this.body instanceof HttpParams) {\n      return this.body.toString();\n    }\n    // Check whether the body is an object or array, and serialize with JSON if so.\n    if (typeof this.body === 'object' || typeof this.body === 'boolean' || Array.isArray(this.body)) {\n      return JSON.stringify(this.body);\n    }\n    // Fall back on toString() for everything else.\n    return this.body.toString();\n  }\n  /**\n   * Examine the body and attempt to infer an appropriate MIME type\n   * for it.\n   *\n   * If no such type can be inferred, this method will return `null`.\n   */\n  detectContentTypeHeader() {\n    // An empty body has no content type.\n    if (this.body === null) {\n      return null;\n    }\n    // FormData bodies rely on the browser's content type assignment.\n    if (isFormData(this.body)) {\n      return null;\n    }\n    // Blobs usually have their own content type. If it doesn't, then\n    // no type can be inferred.\n    if (isBlob(this.body)) {\n      return this.body.type || null;\n    }\n    // Array buffers have unknown contents and thus no type can be inferred.\n    if (isArrayBuffer(this.body)) {\n      return null;\n    }\n    // Technically, strings could be a form of JSON data, but it's safe enough\n    // to assume they're plain strings.\n    if (typeof this.body === 'string') {\n      return TEXT_CONTENT_TYPE;\n    }\n    // `HttpUrlEncodedParams` has its own content-type.\n    if (this.body instanceof HttpParams) {\n      return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Arrays, objects, boolean and numbers will be encoded as JSON.\n    if (typeof this.body === 'object' || typeof this.body === 'number' || typeof this.body === 'boolean') {\n      return JSON_CONTENT_TYPE;\n    }\n    // No type could be inferred.\n    return null;\n  }\n  clone(update = {}) {\n    // For method, url, and responseType, take the current value unless\n    // it is overridden in the update hash.\n    const method = update.method || this.method;\n    const url = update.url || this.url;\n    const responseType = update.responseType || this.responseType;\n    const keepalive = update.keepalive ?? this.keepalive;\n    const priority = update.priority || this.priority;\n    const cache = update.cache || this.cache;\n    const mode = update.mode || this.mode;\n    const redirect = update.redirect || this.redirect;\n    const credentials = update.credentials || this.credentials;\n    // Carefully handle the transferCache to differentiate between\n    // `false` and `undefined` in the update args.\n    const transferCache = update.transferCache ?? this.transferCache;\n    const timeout = update.timeout ?? this.timeout;\n    // The body is somewhat special - a `null` value in update.body means\n    // whatever current body is present is being overridden with an empty\n    // body, whereas an `undefined` value in update.body implies no\n    // override.\n    const body = update.body !== undefined ? update.body : this.body;\n    // Carefully handle the boolean options to differentiate between\n    // `false` and `undefined` in the update args.\n    const withCredentials = update.withCredentials ?? this.withCredentials;\n    const reportProgress = update.reportProgress ?? this.reportProgress;\n    // Headers and params may be appended to if `setHeaders` or\n    // `setParams` are used.\n    let headers = update.headers || this.headers;\n    let params = update.params || this.params;\n    // Pass on context if needed\n    const context = update.context ?? this.context;\n    // Check whether the caller has asked to add headers.\n    if (update.setHeaders !== undefined) {\n      // Set every requested header.\n      headers = Object.keys(update.setHeaders).reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n    }\n    // Check whether the caller has asked to set params.\n    if (update.setParams) {\n      // Set every requested param.\n      params = Object.keys(update.setParams).reduce((params, param) => params.set(param, update.setParams[param]), params);\n    }\n    // Finally, construct the new HttpRequest using the pieces from above.\n    return new HttpRequest(method, url, body, {\n      params,\n      headers,\n      context,\n      reportProgress,\n      responseType,\n      withCredentials,\n      transferCache,\n      keepalive,\n      cache,\n      priority,\n      timeout,\n      mode,\n      redirect,\n      credentials\n    });\n  }\n}\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n  /**\n   * The request was sent out over the wire.\n   */\n  HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n  /**\n   * An upload progress event was received.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n  /**\n   * The response status code and headers were received.\n   */\n  HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n  /**\n   * A download progress event was received.\n   */\n  HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n  /**\n   * The full response including the body was received.\n   */\n  HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n  /**\n   * A custom event from an interceptor or a backend.\n   */\n  HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n  /**\n   * All response headers.\n   */\n  headers;\n  /**\n   * Response status code.\n   */\n  status;\n  /**\n   * Textual description of response status code, defaults to OK.\n   *\n   * Do not depend on this.\n   */\n  statusText;\n  /**\n   * URL of the resource retrieved, or null if not available.\n   */\n  url;\n  /**\n   * Whether the status code falls in the 2xx range.\n   */\n  ok;\n  /**\n   * Type of the response, narrowed to either the full response or the header.\n   */\n  type;\n  /**\n   * Super-constructor for all responses.\n   *\n   * The single parameter accepted is an initialization hash. Any properties\n   * of the response passed there will override the default values.\n   */\n  constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n    // If the hash has values passed, use them to initialize the response.\n    // Otherwise use the default values.\n    this.headers = init.headers || new HttpHeaders();\n    this.status = init.status !== undefined ? init.status : defaultStatus;\n    this.statusText = init.statusText || defaultStatusText;\n    this.url = init.url || null;\n    // Cache the ok value to avoid defining a getter.\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n  /**\n   * Create a new `HttpHeaderResponse` with the given parameters.\n   */\n  constructor(init = {}) {\n    super(init);\n  }\n  type = HttpEventType.ResponseHeader;\n  /**\n   * Copy this `HttpHeaderResponse`, overriding its contents with the\n   * given parameter hash.\n   */\n  clone(update = {}) {\n    // Perform a straightforward initialization of the new HttpHeaderResponse,\n    // overriding the current parameters with new ones if given.\n    return new HttpHeaderResponse({\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  body;\n  /**\n   * Construct a new `HttpResponse`.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.body = init.body !== undefined ? init.body : null;\n  }\n  type = HttpEventType.Response;\n  clone(update = {}) {\n    return new HttpResponse({\n      body: update.body !== undefined ? update.body : this.body,\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n  name = 'HttpErrorResponse';\n  message;\n  error;\n  /**\n   * Errors are never okay, even when the status code is in the 2xx success range.\n   */\n  ok = false;\n  constructor(init) {\n    // Initialize with a default status of 0 / Unknown Error.\n    super(init, 0, 'Unknown Error');\n    // If the response was successful, then this was a parse error. Otherwise, it was\n    // a protocol-level failure of some sort. Either the request failed in transit\n    // or the server returned an unsuccessful status code.\n    if (this.status >= 200 && this.status < 300) {\n      this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n    } else {\n      this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n    }\n    this.error = init.error || null;\n  }\n}\n/**\n * We use these constant to prevent pulling the whole HttpStatusCode enum\n * Those are the only ones referenced directly by the framework\n */\nconst HTTP_STATUS_CODE_OK = 200;\nconst HTTP_STATUS_CODE_NO_CONTENT = 204;\n/**\n * Http status codes.\n * As per https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n * @publicApi\n */\nvar HttpStatusCode;\n(function (HttpStatusCode) {\n  HttpStatusCode[HttpStatusCode[\"Continue\"] = 100] = \"Continue\";\n  HttpStatusCode[HttpStatusCode[\"SwitchingProtocols\"] = 101] = \"SwitchingProtocols\";\n  HttpStatusCode[HttpStatusCode[\"Processing\"] = 102] = \"Processing\";\n  HttpStatusCode[HttpStatusCode[\"EarlyHints\"] = 103] = \"EarlyHints\";\n  HttpStatusCode[HttpStatusCode[\"Ok\"] = 200] = \"Ok\";\n  HttpStatusCode[HttpStatusCode[\"Created\"] = 201] = \"Created\";\n  HttpStatusCode[HttpStatusCode[\"Accepted\"] = 202] = \"Accepted\";\n  HttpStatusCode[HttpStatusCode[\"NonAuthoritativeInformation\"] = 203] = \"NonAuthoritativeInformation\";\n  HttpStatusCode[HttpStatusCode[\"NoContent\"] = 204] = \"NoContent\";\n  HttpStatusCode[HttpStatusCode[\"ResetContent\"] = 205] = \"ResetContent\";\n  HttpStatusCode[HttpStatusCode[\"PartialContent\"] = 206] = \"PartialContent\";\n  HttpStatusCode[HttpStatusCode[\"MultiStatus\"] = 207] = \"MultiStatus\";\n  HttpStatusCode[HttpStatusCode[\"AlreadyReported\"] = 208] = \"AlreadyReported\";\n  HttpStatusCode[HttpStatusCode[\"ImUsed\"] = 226] = \"ImUsed\";\n  HttpStatusCode[HttpStatusCode[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n  HttpStatusCode[HttpStatusCode[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n  HttpStatusCode[HttpStatusCode[\"Found\"] = 302] = \"Found\";\n  HttpStatusCode[HttpStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n  HttpStatusCode[HttpStatusCode[\"NotModified\"] = 304] = \"NotModified\";\n  HttpStatusCode[HttpStatusCode[\"UseProxy\"] = 305] = \"UseProxy\";\n  HttpStatusCode[HttpStatusCode[\"Unused\"] = 306] = \"Unused\";\n  HttpStatusCode[HttpStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n  HttpStatusCode[HttpStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n  HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n  HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n  HttpStatusCode[HttpStatusCode[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n  HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n  HttpStatusCode[HttpStatusCode[\"NotFound\"] = 404] = \"NotFound\";\n  HttpStatusCode[HttpStatusCode[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n  HttpStatusCode[HttpStatusCode[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n  HttpStatusCode[HttpStatusCode[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n  HttpStatusCode[HttpStatusCode[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n  HttpStatusCode[HttpStatusCode[\"Conflict\"] = 409] = \"Conflict\";\n  HttpStatusCode[HttpStatusCode[\"Gone\"] = 410] = \"Gone\";\n  HttpStatusCode[HttpStatusCode[\"LengthRequired\"] = 411] = \"LengthRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionFailed\"] = 412] = \"PreconditionFailed\";\n  HttpStatusCode[HttpStatusCode[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UriTooLong\"] = 414] = \"UriTooLong\";\n  HttpStatusCode[HttpStatusCode[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n  HttpStatusCode[HttpStatusCode[\"RangeNotSatisfiable\"] = 416] = \"RangeNotSatisfiable\";\n  HttpStatusCode[HttpStatusCode[\"ExpectationFailed\"] = 417] = \"ExpectationFailed\";\n  HttpStatusCode[HttpStatusCode[\"ImATeapot\"] = 418] = \"ImATeapot\";\n  HttpStatusCode[HttpStatusCode[\"MisdirectedRequest\"] = 421] = \"MisdirectedRequest\";\n  HttpStatusCode[HttpStatusCode[\"UnprocessableEntity\"] = 422] = \"UnprocessableEntity\";\n  HttpStatusCode[HttpStatusCode[\"Locked\"] = 423] = \"Locked\";\n  HttpStatusCode[HttpStatusCode[\"FailedDependency\"] = 424] = \"FailedDependency\";\n  HttpStatusCode[HttpStatusCode[\"TooEarly\"] = 425] = \"TooEarly\";\n  HttpStatusCode[HttpStatusCode[\"UpgradeRequired\"] = 426] = \"UpgradeRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionRequired\"] = 428] = \"PreconditionRequired\";\n  HttpStatusCode[HttpStatusCode[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n  HttpStatusCode[HttpStatusCode[\"RequestHeaderFieldsTooLarge\"] = 431] = \"RequestHeaderFieldsTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UnavailableForLegalReasons\"] = 451] = \"UnavailableForLegalReasons\";\n  HttpStatusCode[HttpStatusCode[\"InternalServerError\"] = 500] = \"InternalServerError\";\n  HttpStatusCode[HttpStatusCode[\"NotImplemented\"] = 501] = \"NotImplemented\";\n  HttpStatusCode[HttpStatusCode[\"BadGateway\"] = 502] = \"BadGateway\";\n  HttpStatusCode[HttpStatusCode[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n  HttpStatusCode[HttpStatusCode[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n  HttpStatusCode[HttpStatusCode[\"HttpVersionNotSupported\"] = 505] = \"HttpVersionNotSupported\";\n  HttpStatusCode[HttpStatusCode[\"VariantAlsoNegotiates\"] = 506] = \"VariantAlsoNegotiates\";\n  HttpStatusCode[HttpStatusCode[\"InsufficientStorage\"] = 507] = \"InsufficientStorage\";\n  HttpStatusCode[HttpStatusCode[\"LoopDetected\"] = 508] = \"LoopDetected\";\n  HttpStatusCode[HttpStatusCode[\"NotExtended\"] = 510] = \"NotExtended\";\n  HttpStatusCode[HttpStatusCode[\"NetworkAuthenticationRequired\"] = 511] = \"NetworkAuthenticationRequired\";\n})(HttpStatusCode || (HttpStatusCode = {}));\n\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n  return {\n    body,\n    headers: options.headers,\n    context: options.context,\n    observe: options.observe,\n    params: options.params,\n    reportProgress: options.reportProgress,\n    responseType: options.responseType,\n    withCredentials: options.withCredentials,\n    transferCache: options.transferCache,\n    keepalive: options.keepalive,\n    priority: options.priority,\n    cache: options.cache,\n    mode: options.mode,\n    redirect: options.redirect\n  };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @usageNotes\n *\n * ### HTTP Request Example\n *\n * ```ts\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```ts\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```ts\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```ts\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nclass HttpClient {\n  handler;\n  constructor(handler) {\n    this.handler = handler;\n  }\n  /**\n   * Constructs an observable for a generic HTTP request that, when subscribed,\n   * fires the request through the chain of registered interceptors and on to the\n   * server.\n   *\n   * You can pass an `HttpRequest` directly as the only parameter. In this case,\n   * the call returns an observable of the raw `HttpEvent` stream.\n   *\n   * Alternatively you can pass an HTTP method as the first parameter,\n   * a URL string as the second, and an options hash containing the request body as the third.\n   * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n   * type of returned observable.\n   *   * The `responseType` value determines how a successful response body is parsed.\n   *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n   * object as a type parameter to the call.\n   *\n   * The `observe` value determines the return type, according to what you are interested in\n   * observing.\n   *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n   * progress events by default.\n   *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n   * where the `T` parameter depends on the `responseType` and any optionally provided type\n   * parameter.\n   *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n   *\n   */\n  request(first, url, options = {}) {\n    let req;\n    // First, check whether the primary argument is an instance of `HttpRequest`.\n    if (first instanceof HttpRequest) {\n      // It is. The other arguments must be undefined (per the signatures) and can be\n      // ignored.\n      req = first;\n    } else {\n      // It's a string, so it represents a URL. Construct a request based on it,\n      // and incorporate the remaining arguments (assuming `GET` unless a method is\n      // provided.\n      // Figure out the headers.\n      let headers = undefined;\n      if (options.headers instanceof HttpHeaders) {\n        headers = options.headers;\n      } else {\n        headers = new HttpHeaders(options.headers);\n      }\n      // Sort out parameters.\n      let params = undefined;\n      if (!!options.params) {\n        if (options.params instanceof HttpParams) {\n          params = options.params;\n        } else {\n          params = new HttpParams({\n            fromObject: options.params\n          });\n        }\n      }\n      // Construct the request.\n      req = new HttpRequest(first, url, options.body !== undefined ? options.body : null, {\n        headers,\n        context: options.context,\n        params,\n        reportProgress: options.reportProgress,\n        // By default, JSON is assumed to be returned for all calls.\n        responseType: options.responseType || 'json',\n        withCredentials: options.withCredentials,\n        transferCache: options.transferCache,\n        keepalive: options.keepalive,\n        priority: options.priority,\n        cache: options.cache,\n        mode: options.mode,\n        redirect: options.redirect,\n        credentials: options.credentials\n      });\n    }\n    // Start with an Observable.of() the initial request, and run the handler (which\n    // includes all interceptors) inside a concatMap(). This way, the handler runs\n    // inside an Observable chain, which causes interceptors to be re-run on every\n    // subscription (this also makes retries re-run the handler, including interceptors).\n    const events$ = of(req).pipe(concatMap(req => this.handler.handle(req)));\n    // If coming via the API signature which accepts a previously constructed HttpRequest,\n    // the only option is to get the event stream. Otherwise, return the event stream if\n    // that is what was requested.\n    if (first instanceof HttpRequest || options.observe === 'events') {\n      return events$;\n    }\n    // The requested stream contains either the full response or the body. In either\n    // case, the first step is to filter the event stream to extract a stream of\n    // responses(s).\n    const res$ = events$.pipe(filter(event => event instanceof HttpResponse));\n    // Decide which stream to return.\n    switch (options.observe || 'body') {\n      case 'body':\n        // The requested stream is the body. Map the response stream to the response\n        // body. This could be done more simply, but a misbehaving interceptor might\n        // transform the response body into a different format and ignore the requested\n        // responseType. Guard against this by validating that the response is of the\n        // requested type.\n        switch (req.responseType) {\n          case 'arraybuffer':\n            return res$.pipe(map(res => {\n              // Validate that the body is an ArrayBuffer.\n              if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                throw new _RuntimeError(2806 /* RuntimeErrorCode.RESPONSE_IS_NOT_AN_ARRAY_BUFFER */, ngDevMode && 'Response is not an ArrayBuffer.');\n              }\n              return res.body;\n            }));\n          case 'blob':\n            return res$.pipe(map(res => {\n              // Validate that the body is a Blob.\n              if (res.body !== null && !(res.body instanceof Blob)) {\n                throw new _RuntimeError(2807 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_BLOB */, ngDevMode && 'Response is not a Blob.');\n              }\n              return res.body;\n            }));\n          case 'text':\n            return res$.pipe(map(res => {\n              // Validate that the body is a string.\n              if (res.body !== null && typeof res.body !== 'string') {\n                throw new _RuntimeError(2808 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_STRING */, ngDevMode && 'Response is not a string.');\n              }\n              return res.body;\n            }));\n          case 'json':\n          default:\n            // No validation needed for JSON responses, as they can be of any type.\n            return res$.pipe(map(res => res.body));\n        }\n      case 'response':\n        // The response stream was requested directly, so return it.\n        return res$;\n      default:\n        // Guard against new future observe types being added.\n        throw new _RuntimeError(2809 /* RuntimeErrorCode.UNHANDLED_OBSERVE_TYPE */, ngDevMode && `Unreachable: unhandled observe type ${options.observe}}`);\n    }\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `DELETE` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   *\n   * @param url     The endpoint URL.\n   * @param options The HTTP options to send with the request.\n   *\n   */\n  delete(url, options = {}) {\n    return this.request('DELETE', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `GET` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   */\n  get(url, options = {}) {\n    return this.request('GET', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `HEAD` request to execute on the server. The `HEAD` method returns\n   * meta information about the resource without transferring the\n   * resource itself. See the individual overloads for\n   * details on the return type.\n   */\n  head(url, options = {}) {\n    return this.request('HEAD', url, options);\n  }\n  /**\n   * Constructs an `Observable` that, when subscribed, causes a request with the special method\n   * `JSONP` to be dispatched via the interceptor pipeline.\n   * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n   * API endpoints that don't support newer,\n   * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n   * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n   * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n   * application making the request.\n   * The endpoint API must support JSONP callback for JSONP requests to work.\n   * The resource API returns the JSON response wrapped in a callback function.\n   * You can pass the callback function name as one of the query parameters.\n   * Note that JSONP requests can only be used with `GET` requests.\n   *\n   * @param url The resource URL.\n   * @param callbackParam The callback function name.\n   *\n   */\n  jsonp(url, callbackParam) {\n    return this.request('JSONP', url, {\n      params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n      observe: 'body',\n      responseType: 'json'\n    });\n  }\n  /**\n   * Constructs an `Observable` that, when subscribed, causes the configured\n   * `OPTIONS` request to execute on the server. This method allows the client\n   * to determine the supported HTTP methods and other capabilities of an endpoint,\n   * without implying a resource action. See the individual overloads for\n   * details on the return type.\n   */\n  options(url, options = {}) {\n    return this.request('OPTIONS', url, options);\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `PATCH` request to execute on the server. See the individual overloads for\n   * details on the return type.\n   */\n  patch(url, body, options = {}) {\n    return this.request('PATCH', url, addBody(options, body));\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `POST` request to execute on the server. The server responds with the location of\n   * the replaced resource. See the individual overloads for\n   * details on the return type.\n   */\n  post(url, body, options = {}) {\n    return this.request('POST', url, addBody(options, body));\n  }\n  /**\n   * Constructs an observable that, when subscribed, causes the configured\n   * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n   * with a new set of values.\n   * See the individual overloads for details on the return type.\n   */\n  put(url, body, options = {}) {\n    return this.request('PUT', url, addBody(options, body));\n  }\n  static ɵfac = function HttpClient_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpClient)(i0.ɵɵinject(HttpHandler));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HttpClient,\n    factory: HttpClient.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClient, [{\n    type: Injectable\n  }], () => [{\n    type: HttpHandler\n  }], null);\n})();\nconst XSSI_PREFIX$1 = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * response url or the X-Request-URL header.\n */\nfunction getResponseUrl$1(response) {\n  if (response.url) {\n    return response.url;\n  }\n  // stored as lowercase in the map\n  const xRequestUrl = X_REQUEST_URL_HEADER.toLocaleLowerCase();\n  return response.headers.get(xRequestUrl);\n}\n/**\n * An internal injection token to reference `FetchBackend` implementation\n * in a tree-shakable way.\n */\nconst FETCH_BACKEND = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'FETCH_BACKEND' : '');\n/**\n * Uses `fetch` to send requests to a backend server.\n *\n * This `FetchBackend` requires the support of the\n * [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which is available on all\n * supported browsers and on Node.js v18 or later.\n *\n * @see {@link HttpHandler}\n *\n * @publicApi\n */\nclass FetchBackend {\n  // We use an arrow function to always reference the current global implementation of `fetch`.\n  // This is helpful for cases when the global `fetch` implementation is modified by external code,\n  // see https://github.com/angular/angular/issues/57527.\n  fetchImpl = inject(FetchFactory, {\n    optional: true\n  })?.fetch ?? ((...args) => globalThis.fetch(...args));\n  ngZone = inject(NgZone);\n  destroyRef = inject(DestroyRef);\n  destroyed = false;\n  constructor() {\n    this.destroyRef.onDestroy(() => {\n      this.destroyed = true;\n    });\n  }\n  handle(request) {\n    return new Observable(observer => {\n      const aborter = new AbortController();\n      this.doRequest(request, aborter.signal, observer).then(noop, error => observer.error(new HttpErrorResponse({\n        error\n      })));\n      let timeoutId;\n      if (request.timeout) {\n        // TODO: Replace with AbortSignal.any([aborter.signal, AbortSignal.timeout(request.timeout)])\n        // when AbortSignal.any support is Baseline widely available (NET nov. 2026)\n        timeoutId = this.ngZone.runOutsideAngular(() => setTimeout(() => {\n          if (!aborter.signal.aborted) {\n            aborter.abort(new DOMException('signal timed out', 'TimeoutError'));\n          }\n        }, request.timeout));\n      }\n      return () => {\n        if (timeoutId !== undefined) {\n          clearTimeout(timeoutId);\n        }\n        aborter.abort();\n      };\n    });\n  }\n  async doRequest(request, signal, observer) {\n    const init = this.createRequestInit(request);\n    let response;\n    try {\n      // Run fetch outside of Angular zone.\n      // This is due to Node.js fetch implementation (Undici) which uses a number of setTimeouts to check if\n      // the response should eventually timeout which causes extra CD cycles every 500ms\n      const fetchPromise = this.ngZone.runOutsideAngular(() => this.fetchImpl(request.urlWithParams, {\n        signal,\n        ...init\n      }));\n      // Make sure Zone.js doesn't trigger false-positive unhandled promise\n      // error in case the Promise is rejected synchronously. See function\n      // description for additional information.\n      silenceSuperfluousUnhandledPromiseRejection(fetchPromise);\n      // Send the `Sent` event before awaiting the response.\n      observer.next({\n        type: HttpEventType.Sent\n      });\n      response = await fetchPromise;\n    } catch (error) {\n      observer.error(new HttpErrorResponse({\n        error,\n        status: error.status ?? 0,\n        statusText: error.statusText,\n        url: request.urlWithParams,\n        headers: error.headers\n      }));\n      return;\n    }\n    const headers = new HttpHeaders(response.headers);\n    const statusText = response.statusText;\n    const url = getResponseUrl$1(response) ?? request.urlWithParams;\n    let status = response.status;\n    let body = null;\n    if (request.reportProgress) {\n      observer.next(new HttpHeaderResponse({\n        headers,\n        status,\n        statusText,\n        url\n      }));\n    }\n    if (response.body) {\n      // Read Progress\n      const contentLength = response.headers.get('content-length');\n      const chunks = [];\n      const reader = response.body.getReader();\n      let receivedLength = 0;\n      let decoder;\n      let partialText;\n      // We have to check whether the Zone is defined in the global scope because this may be called\n      // when the zone is nooped.\n      const reqZone = typeof Zone !== 'undefined' && Zone.current;\n      let canceled = false;\n      // Perform response processing outside of Angular zone to\n      // ensure no excessive change detection runs are executed\n      // Here calling the async ReadableStreamDefaultReader.read() is responsible for triggering CD\n      await this.ngZone.runOutsideAngular(async () => {\n        while (true) {\n          // Prevent reading chunks if the app is destroyed. Otherwise, we risk doing\n          // unnecessary work or triggering side effects after teardown.\n          // This may happen if the app was explicitly destroyed before\n          // the response returned entirely.\n          if (this.destroyed) {\n            // Streams left in a pending state (due to `break` without cancel) may\n            // continue consuming or holding onto data behind the scenes.\n            // Calling `reader.cancel()` allows the browser or the underlying\n            // system to release any network or memory resources associated with the stream.\n            await reader.cancel();\n            canceled = true;\n            break;\n          }\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            break;\n          }\n          chunks.push(value);\n          receivedLength += value.length;\n          if (request.reportProgress) {\n            partialText = request.responseType === 'text' ? (partialText ?? '') + (decoder ??= new TextDecoder()).decode(value, {\n              stream: true\n            }) : undefined;\n            const reportProgress = () => observer.next({\n              type: HttpEventType.DownloadProgress,\n              total: contentLength ? +contentLength : undefined,\n              loaded: receivedLength,\n              partialText\n            });\n            reqZone ? reqZone.run(reportProgress) : reportProgress();\n          }\n        }\n      });\n      // We need to manage the canceled state — because the Streams API does not\n      // expose a direct `.state` property on the reader.\n      // We need to `return` because `parseBody` may not be able to parse chunks\n      // that were only partially read (due to cancellation caused by app destruction).\n      if (canceled) {\n        observer.complete();\n        return;\n      }\n      // Combine all chunks.\n      const chunksAll = this.concatChunks(chunks, receivedLength);\n      try {\n        const contentType = response.headers.get(CONTENT_TYPE_HEADER) ?? '';\n        body = this.parseBody(request, chunksAll, contentType);\n      } catch (error) {\n        // Body loading or parsing failed\n        observer.error(new HttpErrorResponse({\n          error,\n          headers: new HttpHeaders(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          url: getResponseUrl$1(response) ?? request.urlWithParams\n        }));\n        return;\n      }\n    }\n    // Same behavior as the XhrBackend\n    if (status === 0) {\n      status = body ? HTTP_STATUS_CODE_OK : 0;\n    }\n    // ok determines whether the response will be transmitted on the event or\n    // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n    // but a successful status code can still result in an error if the user\n    // asked for JSON data and the body cannot be parsed as such.\n    const ok = status >= 200 && status < 300;\n    if (ok) {\n      observer.next(new HttpResponse({\n        body,\n        headers,\n        status,\n        statusText,\n        url\n      }));\n      // The full body has been received and delivered, no further events\n      // are possible. This request is complete.\n      observer.complete();\n    } else {\n      observer.error(new HttpErrorResponse({\n        error: body,\n        headers,\n        status,\n        statusText,\n        url\n      }));\n    }\n  }\n  parseBody(request, binContent, contentType) {\n    switch (request.responseType) {\n      case 'json':\n        // stripping the XSSI when present\n        const text = new TextDecoder().decode(binContent).replace(XSSI_PREFIX$1, '');\n        return text === '' ? null : JSON.parse(text);\n      case 'text':\n        return new TextDecoder().decode(binContent);\n      case 'blob':\n        return new Blob([binContent], {\n          type: contentType\n        });\n      case 'arraybuffer':\n        return binContent.buffer;\n    }\n  }\n  createRequestInit(req) {\n    // We could share some of this logic with the XhrBackend\n    const headers = {};\n    let credentials;\n    // If the request has a credentials property, use it.\n    // Otherwise, if the request has withCredentials set to true, use 'include'.\n    credentials = req.credentials;\n    // If withCredentials is true should be set to 'include', for compatibility\n    if (req.withCredentials) {\n      // A warning is logged in development mode if the request has both\n      (typeof ngDevMode === 'undefined' || ngDevMode) && warningOptionsMessage(req);\n      credentials = 'include';\n    }\n    // Setting all the requested headers.\n    req.headers.forEach((name, values) => headers[name] = values.join(','));\n    // Add an Accept header if one isn't present already.\n    if (!req.headers.has(ACCEPT_HEADER)) {\n      headers[ACCEPT_HEADER] = ACCEPT_HEADER_VALUE;\n    }\n    // Auto-detect the Content-Type header if one isn't present already.\n    if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n      const detectedType = req.detectContentTypeHeader();\n      // Sometimes Content-Type detection fails.\n      if (detectedType !== null) {\n        headers[CONTENT_TYPE_HEADER] = detectedType;\n      }\n    }\n    return {\n      body: req.serializeBody(),\n      method: req.method,\n      headers,\n      credentials,\n      keepalive: req.keepalive,\n      cache: req.cache,\n      priority: req.priority,\n      mode: req.mode,\n      redirect: req.redirect\n    };\n  }\n  concatChunks(chunks, totalLength) {\n    const chunksAll = new Uint8Array(totalLength);\n    let position = 0;\n    for (const chunk of chunks) {\n      chunksAll.set(chunk, position);\n      position += chunk.length;\n    }\n    return chunksAll;\n  }\n  static ɵfac = function FetchBackend_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FetchBackend)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FetchBackend,\n    factory: FetchBackend.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FetchBackend, [{\n    type: Injectable\n  }], () => [], null);\n})();\n/**\n * Abstract class to provide a mocked implementation of `fetch()`\n */\nclass FetchFactory {}\nfunction noop() {}\nfunction warningOptionsMessage(req) {\n  if (req.credentials && req.withCredentials) {\n    console.warn(_formatRuntimeError(2819 /* RuntimeErrorCode.WITH_CREDENTIALS_OVERRIDES_EXPLICIT_CREDENTIALS */, `Angular detected that a \\`HttpClient\\` request has both \\`withCredentials: true\\` and \\`credentials: '${req.credentials}'\\` options. The \\`withCredentials\\` option is overriding the explicit \\`credentials\\` setting to 'include'. Consider removing \\`withCredentials\\` and using \\`credentials: '${req.credentials}'\\` directly for clarity.`));\n  }\n}\n/**\n * Zone.js treats a rejected promise that has not yet been awaited\n * as an unhandled error. This function adds a noop `.then` to make\n * sure that Zone.js doesn't throw an error if the Promise is rejected\n * synchronously.\n */\nfunction silenceSuperfluousUnhandledPromiseRejection(promise) {\n  promise.then(noop, noop);\n}\nfunction interceptorChainEndFn(req, finalHandlerFn) {\n  return finalHandlerFn(req);\n}\n/**\n * Constructs a `ChainedInterceptorFn` which adapts a legacy `HttpInterceptor` to the\n * `ChainedInterceptorFn` interface.\n */\nfunction adaptLegacyInterceptorToChain(chainTailFn, interceptor) {\n  return (initialRequest, finalHandlerFn) => interceptor.intercept(initialRequest, {\n    handle: downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)\n  });\n}\n/**\n * Constructs a `ChainedInterceptorFn` which wraps and invokes a functional interceptor in the given\n * injector.\n */\nfunction chainedInterceptorFn(chainTailFn, interceptorFn, injector) {\n  return (initialRequest, finalHandlerFn) => runInInjectionContext(injector, () => interceptorFn(initialRequest, downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)));\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTORS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s.\n */\nconst HTTP_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTOR_FNS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s that are only set in root.\n */\nconst HTTP_ROOT_INTERCEPTOR_FNS = new InjectionToken(ngDevMode ? 'HTTP_ROOT_INTERCEPTOR_FNS' : '');\n// TODO(atscott): We need a larger discussion about stability and what should contribute to stability.\n// Should the whole interceptor chain contribute to stability or just the backend request #55075?\n// Should HttpClient contribute to stability automatically at all?\nconst REQUESTS_CONTRIBUTE_TO_STABILITY = new InjectionToken(ngDevMode ? 'REQUESTS_CONTRIBUTE_TO_STABILITY' : '', {\n  providedIn: 'root',\n  factory: () => true\n});\n/**\n * Creates an `HttpInterceptorFn` which lazily initializes an interceptor chain from the legacy\n * class-based interceptors and runs the request through it.\n */\nfunction legacyInterceptorFnFactory() {\n  let chain = null;\n  return (req, handler) => {\n    if (chain === null) {\n      const interceptors = inject(HTTP_INTERCEPTORS, {\n        optional: true\n      }) ?? [];\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `interceptors` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      chain = interceptors.reduceRight(adaptLegacyInterceptorToChain, interceptorChainEndFn);\n    }\n    const pendingTasks = inject(PendingTasks);\n    const contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n    if (contributeToStability) {\n      const removeTask = pendingTasks.add();\n      return chain(req, handler).pipe(finalize(removeTask));\n    } else {\n      return chain(req, handler);\n    }\n  };\n}\nlet fetchBackendWarningDisplayed = false;\nclass HttpInterceptorHandler extends HttpHandler {\n  backend;\n  injector;\n  chain = null;\n  pendingTasks = inject(PendingTasks);\n  contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n  constructor(backend, injector) {\n    super();\n    this.backend = backend;\n    this.injector = injector;\n    // We strongly recommend using fetch backend for HTTP calls when SSR is used\n    // for an application. The logic below checks if that's the case and produces\n    // a warning otherwise.\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !fetchBackendWarningDisplayed) {\n      // This flag is necessary because provideHttpClientTesting() overrides the backend\n      // even if `withFetch()` is used within the test. When the testing HTTP backend is provided,\n      // no HTTP calls are actually performed during the test, so producing a warning would be\n      // misleading.\n      const isTestingBackend = this.backend.isTestingBackend;\n      if (typeof ngServerMode !== 'undefined' && ngServerMode && !(this.backend instanceof FetchBackend) && !isTestingBackend) {\n        fetchBackendWarningDisplayed = true;\n        injector.get(_Console).warn(_formatRuntimeError(2801 /* RuntimeErrorCode.NOT_USING_FETCH_BACKEND_IN_SSR */, 'Angular detected that `HttpClient` is not configured ' + \"to use `fetch` APIs. It's strongly recommended to \" + 'enable `fetch` for applications that use Server-Side Rendering ' + 'for better performance and compatibility. ' + 'To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` ' + 'call at the root of the application.'));\n      }\n    }\n  }\n  handle(initialRequest) {\n    if (this.chain === null) {\n      const dedupedInterceptorFns = Array.from(new Set([...this.injector.get(HTTP_INTERCEPTOR_FNS), ...this.injector.get(HTTP_ROOT_INTERCEPTOR_FNS, [])]));\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `dedupedInterceptorFns` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      this.chain = dedupedInterceptorFns.reduceRight((nextSequencedFn, interceptorFn) => chainedInterceptorFn(nextSequencedFn, interceptorFn, this.injector), interceptorChainEndFn);\n    }\n    if (this.contributeToStability) {\n      const removeTask = this.pendingTasks.add();\n      return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest)).pipe(finalize(removeTask));\n    } else {\n      return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest));\n    }\n  }\n  static ɵfac = function HttpInterceptorHandler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpInterceptorHandler)(i0.ɵɵinject(HttpBackend), i0.ɵɵinject(i0.EnvironmentInjector));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HttpInterceptorHandler,\n    factory: HttpInterceptorHandler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpInterceptorHandler, [{\n    type: Injectable\n  }], () => [{\n    type: HttpBackend\n  }, {\n    type: i0.EnvironmentInjector\n  }], null);\n})();\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n  if (typeof window === 'object') {\n    return window;\n  }\n  return {};\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see {@link HttpHandler}\n * @see {@link HttpXhrBackend}\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n  callbackMap;\n  document;\n  /**\n   * A resolved promise that can be used to schedule microtasks in the event handlers.\n   */\n  resolvedPromise = Promise.resolve();\n  constructor(callbackMap, document) {\n    this.callbackMap = callbackMap;\n    this.document = document;\n  }\n  /**\n   * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n   */\n  nextCallback() {\n    return `ng_jsonp_callback_${nextRequestId++}`;\n  }\n  /**\n   * Processes a JSONP request and returns an event stream of the results.\n   * @param req The request object.\n   * @returns An observable of the response events.\n   *\n   */\n  handle(req) {\n    // Firstly, check both the method and response type. If either doesn't match\n    // then the request was improperly routed here and cannot be handled.\n    if (req.method !== 'JSONP') {\n      throw new _RuntimeError(2810 /* RuntimeErrorCode.JSONP_WRONG_METHOD */, ngDevMode && JSONP_ERR_WRONG_METHOD);\n    } else if (req.responseType !== 'json') {\n      throw new _RuntimeError(2811 /* RuntimeErrorCode.JSONP_WRONG_RESPONSE_TYPE */, ngDevMode && JSONP_ERR_WRONG_RESPONSE_TYPE);\n    }\n    // Check the request headers. JSONP doesn't support headers and\n    // cannot set any that were supplied.\n    if (req.headers.keys().length > 0) {\n      throw new _RuntimeError(2812 /* RuntimeErrorCode.JSONP_HEADERS_NOT_SUPPORTED */, ngDevMode && JSONP_ERR_HEADERS_NOT_SUPPORTED);\n    }\n    // Everything else happens inside the Observable boundary.\n    return new Observable(observer => {\n      // The first step to make a request is to generate the callback name, and replace the\n      // callback placeholder in the URL with the name. Care has to be taken here to ensure\n      // a trailing &, if matched, gets inserted back into the URL in the correct place.\n      const callback = this.nextCallback();\n      const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n      // Construct the <script> tag and point it at the URL.\n      const node = this.document.createElement('script');\n      node.src = url;\n      // A JSONP request requires waiting for multiple callbacks. These variables\n      // are closed over and track state across those callbacks.\n      // The response object, if one has been received, or null otherwise.\n      let body = null;\n      // Whether the response callback has been called.\n      let finished = false;\n      // Set the response callback in this.callbackMap (which will be the window\n      // object in the browser. The script being loaded via the <script> tag will\n      // eventually call this callback.\n      this.callbackMap[callback] = data => {\n        // Data has been received from the JSONP script. Firstly, delete this callback.\n        delete this.callbackMap[callback];\n        // Set state to indicate data was received.\n        body = data;\n        finished = true;\n      };\n      // cleanup() is a utility closure that removes the <script> from the page and\n      // the response callback from the window. This logic is used in both the\n      // success, error, and cancellation paths, so it's extracted out for convenience.\n      const cleanup = () => {\n        node.removeEventListener('load', onLoad);\n        node.removeEventListener('error', onError);\n        // Remove the <script> tag if it's still on the page.\n        node.remove();\n        // Remove the response callback from the callbackMap (window object in the\n        // browser).\n        delete this.callbackMap[callback];\n      };\n      // onLoad() is the success callback which runs after the response callback\n      // if the JSONP script loads successfully. The event itself is unimportant.\n      // If something went wrong, onLoad() may run without the response callback\n      // having been invoked.\n      const onLoad = () => {\n        // We wrap it in an extra Promise, to ensure the microtask\n        // is scheduled after the loaded endpoint has executed any potential microtask itself,\n        // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n        this.resolvedPromise.then(() => {\n          // Cleanup the page.\n          cleanup();\n          // Check whether the response callback has run.\n          if (!finished) {\n            // It hasn't, something went wrong with the request. Return an error via\n            // the Observable error path. All JSONP errors have status 0.\n            observer.error(new HttpErrorResponse({\n              url,\n              status: 0,\n              statusText: 'JSONP Error',\n              error: new Error(JSONP_ERR_NO_CALLBACK)\n            }));\n            return;\n          }\n          // Success. body either contains the response body or null if none was\n          // returned.\n          observer.next(new HttpResponse({\n            body,\n            status: HTTP_STATUS_CODE_OK,\n            statusText: 'OK',\n            url\n          }));\n          // Complete the stream, the response is over.\n          observer.complete();\n        });\n      };\n      // onError() is the error callback, which runs if the script returned generates\n      // a Javascript error. It emits the error via the Observable error channel as\n      // a HttpErrorResponse.\n      const onError = error => {\n        cleanup();\n        // Wrap the error in a HttpErrorResponse.\n        observer.error(new HttpErrorResponse({\n          error,\n          status: 0,\n          statusText: 'JSONP Error',\n          url\n        }));\n      };\n      // Subscribe to both the success (load) and error events on the <script> tag,\n      // and add it to the page.\n      node.addEventListener('load', onLoad);\n      node.addEventListener('error', onError);\n      this.document.body.appendChild(node);\n      // The request has now been successfully sent.\n      observer.next({\n        type: HttpEventType.Sent\n      });\n      // Cancellation handler.\n      return () => {\n        if (!finished) {\n          this.removeListeners(node);\n        }\n        // And finally, clean up the page.\n        cleanup();\n      };\n    });\n  }\n  removeListeners(script) {\n    // Issue #34818\n    // Changing <script>'s ownerDocument will prevent it from execution.\n    // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n    foreignDocument ??= this.document.implementation.createHTMLDocument();\n    foreignDocument.adoptNode(script);\n  }\n  static ɵfac = function JsonpClientBackend_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || JsonpClientBackend)(i0.ɵɵinject(JsonpCallbackContext), i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: JsonpClientBackend,\n    factory: JsonpClientBackend.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonpClientBackend, [{\n    type: Injectable\n  }], () => [{\n    type: JsonpCallbackContext\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Identifies requests with the method JSONP and shifts them to the `JsonpClientBackend`.\n */\nfunction jsonpInterceptorFn(req, next) {\n  if (req.method === 'JSONP') {\n    return inject(JsonpClientBackend).handle(req);\n  }\n  // Fall through for normal HTTP requests.\n  return next(req);\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see {@link HttpInterceptor}\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n  injector;\n  constructor(injector) {\n    this.injector = injector;\n  }\n  /**\n   * Identifies and handles a given JSONP request.\n   * @param initialRequest The outgoing request object to handle.\n   * @param next The next interceptor in the chain, or the backend\n   * if no interceptors remain in the chain.\n   * @returns An observable of the event stream.\n   */\n  intercept(initialRequest, next) {\n    return runInInjectionContext(this.injector, () => jsonpInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n  }\n  static ɵfac = function JsonpInterceptor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || JsonpInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: JsonpInterceptor,\n    factory: JsonpInterceptor.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(JsonpInterceptor, [{\n    type: Injectable\n  }], () => [{\n    type: i0.EnvironmentInjector\n  }], null);\n})();\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\nconst X_REQUEST_URL_REGEXP = RegExp(`^${X_REQUEST_URL_HEADER}:`, 'm');\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n  if ('responseURL' in xhr && xhr.responseURL) {\n    return xhr.responseURL;\n  }\n  if (X_REQUEST_URL_REGEXP.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader(X_REQUEST_URL_HEADER);\n  }\n  return null;\n}\n/**\n * Validates whether the request is compatible with the XHR backend.\n * Show a warning if the request contains options that are not supported by XHR.\n */\nfunction validateXhrCompatibility(req) {\n  const unsupportedOptions = [{\n    property: 'keepalive',\n    errorCode: 2813 /* RuntimeErrorCode.KEEPALIVE_NOT_SUPPORTED_WITH_XHR */\n  }, {\n    property: 'cache',\n    errorCode: 2814 /* RuntimeErrorCode.CACHE_NOT_SUPPORTED_WITH_XHR */\n  }, {\n    property: 'priority',\n    errorCode: 2815 /* RuntimeErrorCode.PRIORITY_NOT_SUPPORTED_WITH_XHR */\n  }, {\n    property: 'mode',\n    errorCode: 2816 /* RuntimeErrorCode.MODE_NOT_SUPPORTED_WITH_XHR */\n  }, {\n    property: 'redirect',\n    errorCode: 2817 /* RuntimeErrorCode.REDIRECT_NOT_SUPPORTED_WITH_XHR */\n  }, {\n    property: 'credentials',\n    errorCode: 2818 /* RuntimeErrorCode.CREDENTIALS_NOT_SUPPORTED_WITH_XHR */\n  }];\n  // Check each unsupported option and warn if present\n  for (const {\n    property,\n    errorCode\n  } of unsupportedOptions) {\n    if (req[property]) {\n      console.warn(_formatRuntimeError(errorCode, `Angular detected that a \\`HttpClient\\` request with the \\`${property}\\` option was sent using XHR, which does not support it. To use the \\`${property}\\` option, enable Fetch API support by passing \\`withFetch()\\` as an argument to \\`provideHttpClient()\\`.`));\n    }\n  }\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see {@link HttpHandler}\n * @see {@link JsonpClientBackend}\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n  xhrFactory;\n  constructor(xhrFactory) {\n    this.xhrFactory = xhrFactory;\n  }\n  /**\n   * Processes a request and returns a stream of response events.\n   * @param req The request object.\n   * @returns An observable of the response events.\n   */\n  handle(req) {\n    // Quick check to give a better error message when a user attempts to use\n    // HttpClient.jsonp() without installing the HttpClientJsonpModule\n    if (req.method === 'JSONP') {\n      throw new _RuntimeError(-2800 /* RuntimeErrorCode.MISSING_JSONP_MODULE */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`);\n    }\n    // Validate that the request is compatible with the XHR backend.\n    ngDevMode && validateXhrCompatibility(req);\n    // Check whether this factory has a special function to load an XHR implementation\n    // for various non-browser environments. We currently limit it to only `ServerXhr`\n    // class, which needs to load an XHR implementation.\n    const xhrFactory = this.xhrFactory;\n    const source =\n    // Note that `ɵloadImpl` is never defined in client bundles and can be\n    // safely dropped whenever we're running in the browser.\n    // This branching is redundant.\n    // The `ngServerMode` guard also enables tree-shaking of the `from()`\n    // function from the common bundle, as it's only used in server code.\n    typeof ngServerMode !== 'undefined' && ngServerMode && xhrFactory.ɵloadImpl ? from(xhrFactory.ɵloadImpl()) : of(null);\n    return source.pipe(switchMap(() => {\n      // Everything happens on Observable subscription.\n      return new Observable(observer => {\n        // Start by setting up the XHR object with request method, URL, and withCredentials\n        // flag.\n        const xhr = xhrFactory.build();\n        xhr.open(req.method, req.urlWithParams);\n        if (req.withCredentials) {\n          xhr.withCredentials = true;\n        }\n        // Add all the requested headers.\n        req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n        // Add an Accept header if one isn't present already.\n        if (!req.headers.has(ACCEPT_HEADER)) {\n          xhr.setRequestHeader(ACCEPT_HEADER, ACCEPT_HEADER_VALUE);\n        }\n        // Auto-detect the Content-Type header if one isn't present already.\n        if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n          const detectedType = req.detectContentTypeHeader();\n          // Sometimes Content-Type detection fails.\n          if (detectedType !== null) {\n            xhr.setRequestHeader(CONTENT_TYPE_HEADER, detectedType);\n          }\n        }\n        if (req.timeout) {\n          xhr.timeout = req.timeout;\n        }\n        // Set the responseType if one was requested.\n        if (req.responseType) {\n          const responseType = req.responseType.toLowerCase();\n          // JSON responses need to be processed as text. This is because if the server\n          // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n          // xhr.response will be null, and xhr.responseText cannot be accessed to\n          // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n          // is parsed by first requesting text and then applying JSON.parse.\n          xhr.responseType = responseType !== 'json' ? responseType : 'text';\n        }\n        // Serialize the request body if one is present. If not, this will be set to null.\n        const reqBody = req.serializeBody();\n        // If progress events are enabled, response headers will be delivered\n        // in two events - the HttpHeaderResponse event and the full HttpResponse\n        // event. However, since response headers don't change in between these\n        // two events, it doesn't make sense to parse them twice. So headerResponse\n        // caches the data extracted from the response whenever it's first parsed,\n        // to ensure parsing isn't duplicated.\n        let headerResponse = null;\n        // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n        // state, and memoizes it into headerResponse.\n        const partialFromXhr = () => {\n          if (headerResponse !== null) {\n            return headerResponse;\n          }\n          const statusText = xhr.statusText || 'OK';\n          // Parse headers from XMLHttpRequest - this step is lazy.\n          const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n          // Read the response URL from the XMLHttpResponse instance and fall back on the\n          // request URL.\n          const url = getResponseUrl(xhr) || req.url;\n          // Construct the HttpHeaderResponse and memoize it.\n          headerResponse = new HttpHeaderResponse({\n            headers,\n            status: xhr.status,\n            statusText,\n            url\n          });\n          return headerResponse;\n        };\n        // Next, a few closures are defined for the various events which XMLHttpRequest can\n        // emit. This allows them to be unregistered as event listeners later.\n        // First up is the load event, which represents a response being fully available.\n        const onLoad = () => {\n          // Read response state from the memoized partial data.\n          let {\n            headers,\n            status,\n            statusText,\n            url\n          } = partialFromXhr();\n          // The body will be read out if present.\n          let body = null;\n          if (status !== HTTP_STATUS_CODE_NO_CONTENT) {\n            // Use XMLHttpRequest.response if set, responseText otherwise.\n            body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n          }\n          // Normalize another potential bug (this one comes from CORS).\n          if (status === 0) {\n            status = !!body ? HTTP_STATUS_CODE_OK : 0;\n          }\n          // ok determines whether the response will be transmitted on the event or\n          // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n          // but a successful status code can still result in an error if the user\n          // asked for JSON data and the body cannot be parsed as such.\n          let ok = status >= 200 && status < 300;\n          // Check whether the body needs to be parsed as JSON (in many cases the browser\n          // will have done that already).\n          if (req.responseType === 'json' && typeof body === 'string') {\n            // Save the original body, before attempting XSSI prefix stripping.\n            const originalBody = body;\n            body = body.replace(XSSI_PREFIX, '');\n            try {\n              // Attempt the parse. If it fails, a parse error should be delivered to the\n              // user.\n              body = body !== '' ? JSON.parse(body) : null;\n            } catch (error) {\n              // Since the JSON.parse failed, it's reasonable to assume this might not have\n              // been a JSON response. Restore the original body (including any XSSI prefix)\n              // to deliver a better error response.\n              body = originalBody;\n              // If this was an error request to begin with, leave it as a string, it\n              // probably just isn't JSON. Otherwise, deliver the parsing error to the user.\n              if (ok) {\n                // Even though the response status was 2xx, this is still an error.\n                ok = false;\n                // The parse error contains the text of the body that failed to parse.\n                body = {\n                  error,\n                  text: body\n                };\n              }\n            }\n          }\n          if (ok) {\n            // A successful response is delivered on the event stream.\n            observer.next(new HttpResponse({\n              body,\n              headers,\n              status,\n              statusText,\n              url: url || undefined\n            }));\n            // The full body has been received and delivered, no further events\n            // are possible. This request is complete.\n            observer.complete();\n          } else {\n            // An unsuccessful request is delivered on the error channel.\n            observer.error(new HttpErrorResponse({\n              // The error in this case is the response body (error from the server).\n              error: body,\n              headers,\n              status,\n              statusText,\n              url: url || undefined\n            }));\n          }\n        };\n        // The onError callback is called when something goes wrong at the network level.\n        // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n        // transmitted on the error channel.\n        const onError = error => {\n          const {\n            url\n          } = partialFromXhr();\n          const res = new HttpErrorResponse({\n            error,\n            status: xhr.status || 0,\n            statusText: xhr.statusText || 'Unknown Error',\n            url: url || undefined\n          });\n          observer.error(res);\n        };\n        let onTimeout = onError;\n        if (req.timeout) {\n          onTimeout = _ => {\n            const {\n              url\n            } = partialFromXhr();\n            const res = new HttpErrorResponse({\n              error: new DOMException('Request timed out', 'TimeoutError'),\n              status: xhr.status || 0,\n              statusText: xhr.statusText || 'Request timeout',\n              url: url || undefined\n            });\n            observer.error(res);\n          };\n        }\n        // The sentHeaders flag tracks whether the HttpResponseHeaders event\n        // has been sent on the stream. This is necessary to track if progress\n        // is enabled since the event will be sent on only the first download\n        // progress event.\n        let sentHeaders = false;\n        // The download progress event handler, which is only registered if\n        // progress events are enabled.\n        const onDownProgress = event => {\n          // Send the HttpResponseHeaders event if it hasn't been sent already.\n          if (!sentHeaders) {\n            observer.next(partialFromXhr());\n            sentHeaders = true;\n          }\n          // Start building the download progress event to deliver on the response\n          // event stream.\n          let progressEvent = {\n            type: HttpEventType.DownloadProgress,\n            loaded: event.loaded\n          };\n          // Set the total number of bytes in the event if it's available.\n          if (event.lengthComputable) {\n            progressEvent.total = event.total;\n          }\n          // If the request was for text content and a partial response is\n          // available on XMLHttpRequest, include it in the progress event\n          // to allow for streaming reads.\n          if (req.responseType === 'text' && !!xhr.responseText) {\n            progressEvent.partialText = xhr.responseText;\n          }\n          // Finally, fire the event.\n          observer.next(progressEvent);\n        };\n        // The upload progress event handler, which is only registered if\n        // progress events are enabled.\n        const onUpProgress = event => {\n          // Upload progress events are simpler. Begin building the progress\n          // event.\n          let progress = {\n            type: HttpEventType.UploadProgress,\n            loaded: event.loaded\n          };\n          // If the total number of bytes being uploaded is available, include\n          // it.\n          if (event.lengthComputable) {\n            progress.total = event.total;\n          }\n          // Send the event.\n          observer.next(progress);\n        };\n        // By default, register for load and error events.\n        xhr.addEventListener('load', onLoad);\n        xhr.addEventListener('error', onError);\n        xhr.addEventListener('timeout', onTimeout);\n        xhr.addEventListener('abort', onError);\n        // Progress events are only enabled if requested.\n        if (req.reportProgress) {\n          // Download progress is always enabled if requested.\n          xhr.addEventListener('progress', onDownProgress);\n          // Upload progress depends on whether there is a body to upload.\n          if (reqBody !== null && xhr.upload) {\n            xhr.upload.addEventListener('progress', onUpProgress);\n          }\n        }\n        // Fire the request, and notify the event stream that it was fired.\n        xhr.send(reqBody);\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        // This is the return from the Observable function, which is the\n        // request cancellation handler.\n        return () => {\n          // On a cancellation, remove all registered event listeners.\n          xhr.removeEventListener('error', onError);\n          xhr.removeEventListener('abort', onError);\n          xhr.removeEventListener('load', onLoad);\n          xhr.removeEventListener('timeout', onTimeout);\n          if (req.reportProgress) {\n            xhr.removeEventListener('progress', onDownProgress);\n            if (reqBody !== null && xhr.upload) {\n              xhr.upload.removeEventListener('progress', onUpProgress);\n            }\n          }\n          // Finally, abort the in-flight request.\n          if (xhr.readyState !== xhr.DONE) {\n            xhr.abort();\n          }\n        };\n      });\n    }));\n  }\n  static ɵfac = function HttpXhrBackend_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpXhrBackend)(i0.ɵɵinject(XhrFactory));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HttpXhrBackend,\n    factory: HttpXhrBackend.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXhrBackend, [{\n    type: Injectable\n  }], () => [{\n    type: XhrFactory\n  }], null);\n})();\nconst XSRF_ENABLED = new InjectionToken(ngDevMode ? 'XSRF_ENABLED' : '');\nconst XSRF_DEFAULT_COOKIE_NAME = 'XSRF-TOKEN';\nconst XSRF_COOKIE_NAME = new InjectionToken(ngDevMode ? 'XSRF_COOKIE_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_COOKIE_NAME\n});\nconst XSRF_DEFAULT_HEADER_NAME = 'X-XSRF-TOKEN';\nconst XSRF_HEADER_NAME = new InjectionToken(ngDevMode ? 'XSRF_HEADER_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_HEADER_NAME\n});\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n  doc;\n  cookieName;\n  lastCookieString = '';\n  lastToken = null;\n  /**\n   * @internal for testing\n   */\n  parseCount = 0;\n  constructor(doc, cookieName) {\n    this.doc = doc;\n    this.cookieName = cookieName;\n  }\n  getToken() {\n    if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n      return null;\n    }\n    const cookieString = this.doc.cookie || '';\n    if (cookieString !== this.lastCookieString) {\n      this.parseCount++;\n      this.lastToken = parseCookieValue(cookieString, this.cookieName);\n      this.lastCookieString = cookieString;\n    }\n    return this.lastToken;\n  }\n  static ɵfac = function HttpXsrfCookieExtractor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpXsrfCookieExtractor)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(XSRF_COOKIE_NAME));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HttpXsrfCookieExtractor,\n    factory: HttpXsrfCookieExtractor.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [XSRF_COOKIE_NAME]\n    }]\n  }], null);\n})();\nfunction xsrfInterceptorFn(req, next) {\n  const lcUrl = req.url.toLowerCase();\n  // Skip both non-mutating requests and absolute URLs.\n  // Non-mutating requests don't require a token, and absolute URLs require special handling\n  // anyway as the cookie set\n  // on our origin is not the same as the token expected by another origin.\n  if (!inject(XSRF_ENABLED) || req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') || lcUrl.startsWith('https://')) {\n    return next(req);\n  }\n  const token = inject(HttpXsrfTokenExtractor).getToken();\n  const headerName = inject(XSRF_HEADER_NAME);\n  // Be careful not to overwrite an existing header of the same name.\n  if (token != null && !req.headers.has(headerName)) {\n    req = req.clone({\n      headers: req.headers.set(headerName, token)\n    });\n  }\n  return next(req);\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n  injector;\n  constructor(injector) {\n    this.injector = injector;\n  }\n  intercept(initialRequest, next) {\n    return runInInjectionContext(this.injector, () => xsrfInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n  }\n  static ɵfac = function HttpXsrfInterceptor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpXsrfInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HttpXsrfInterceptor,\n    factory: HttpXsrfInterceptor.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n    type: Injectable\n  }], () => [{\n    type: i0.EnvironmentInjector\n  }], null);\n})();\n\n/**\n * Identifies a particular kind of `HttpFeature`.\n *\n * @publicApi\n */\nvar HttpFeatureKind;\n(function (HttpFeatureKind) {\n  HttpFeatureKind[HttpFeatureKind[\"Interceptors\"] = 0] = \"Interceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"LegacyInterceptors\"] = 1] = \"LegacyInterceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"CustomXsrfConfiguration\"] = 2] = \"CustomXsrfConfiguration\";\n  HttpFeatureKind[HttpFeatureKind[\"NoXsrfProtection\"] = 3] = \"NoXsrfProtection\";\n  HttpFeatureKind[HttpFeatureKind[\"JsonpSupport\"] = 4] = \"JsonpSupport\";\n  HttpFeatureKind[HttpFeatureKind[\"RequestsMadeViaParent\"] = 5] = \"RequestsMadeViaParent\";\n  HttpFeatureKind[HttpFeatureKind[\"Fetch\"] = 6] = \"Fetch\";\n})(HttpFeatureKind || (HttpFeatureKind = {}));\nfunction makeHttpFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * Configures Angular's `HttpClient` service to be available for injection.\n *\n * By default, `HttpClient` will be configured for injection with its default options for XSRF\n * protection of outgoing requests. Additional configuration options can be provided by passing\n * feature functions to `provideHttpClient`. For example, HTTP interceptors can be added using the\n * `withInterceptors(...)` feature.\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n * It's strongly recommended to enable\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for applications that use\n * Server-Side Rendering for better performance and compatibility. To enable `fetch`, add\n * `withFetch()` feature to the `provideHttpClient()` call at the root of the application:\n *\n * ```ts\n * provideHttpClient(withFetch());\n * ```\n *\n * </div>\n *\n * @see {@link withInterceptors}\n * @see {@link withInterceptorsFromDi}\n * @see {@link withXsrfConfiguration}\n * @see {@link withNoXsrfProtection}\n * @see {@link withJsonpSupport}\n * @see {@link withRequestsMadeViaParent}\n * @see {@link withFetch}\n */\nfunction provideHttpClient(...features) {\n  if (ngDevMode) {\n    const featureKinds = new Set(features.map(f => f.ɵkind));\n    if (featureKinds.has(HttpFeatureKind.NoXsrfProtection) && featureKinds.has(HttpFeatureKind.CustomXsrfConfiguration)) {\n      throw new Error(ngDevMode ? `Configuration error: found both withXsrfConfiguration() and withNoXsrfProtection() in the same call to provideHttpClient(), which is a contradiction.` : '');\n    }\n  }\n  const providers = [HttpClient, HttpXhrBackend, HttpInterceptorHandler, {\n    provide: HttpHandler,\n    useExisting: HttpInterceptorHandler\n  }, {\n    provide: HttpBackend,\n    useFactory: () => {\n      return inject(FETCH_BACKEND, {\n        optional: true\n      }) ?? inject(HttpXhrBackend);\n    }\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: xsrfInterceptorFn,\n    multi: true\n  }, {\n    provide: XSRF_ENABLED,\n    useValue: true\n  }, {\n    provide: HttpXsrfTokenExtractor,\n    useClass: HttpXsrfCookieExtractor\n  }];\n  for (const feature of features) {\n    providers.push(...feature.ɵproviders);\n  }\n  return makeEnvironmentProviders(providers);\n}\n/**\n * Adds one or more functional-style HTTP interceptors to the configuration of the `HttpClient`\n * instance.\n *\n * @see {@link HttpInterceptorFn}\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withInterceptors(interceptorFns) {\n  return makeHttpFeature(HttpFeatureKind.Interceptors, interceptorFns.map(interceptorFn => {\n    return {\n      provide: HTTP_INTERCEPTOR_FNS,\n      useValue: interceptorFn,\n      multi: true\n    };\n  }));\n}\nconst LEGACY_INTERCEPTOR_FN = new InjectionToken(ngDevMode ? 'LEGACY_INTERCEPTOR_FN' : '');\n/**\n * Includes class-based interceptors configured using a multi-provider in the current injector into\n * the configured `HttpClient` instance.\n *\n * Prefer `withInterceptors` and functional interceptors instead, as support for DI-provided\n * interceptors may be phased out in a later release.\n *\n * @see {@link HttpInterceptor}\n * @see {@link HTTP_INTERCEPTORS}\n * @see {@link provideHttpClient}\n */\nfunction withInterceptorsFromDi() {\n  // Note: the legacy interceptor function is provided here via an intermediate token\n  // (`LEGACY_INTERCEPTOR_FN`), using a pattern which guarantees that if these providers are\n  // included multiple times, all of the multi-provider entries will have the same instance of the\n  // interceptor function. That way, the `HttpINterceptorHandler` will dedup them and legacy\n  // interceptors will not run multiple times.\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [{\n    provide: LEGACY_INTERCEPTOR_FN,\n    useFactory: legacyInterceptorFnFactory\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useExisting: LEGACY_INTERCEPTOR_FN,\n    multi: true\n  }]);\n}\n/**\n * Customizes the XSRF protection for the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withNoXsrfProtection` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withXsrfConfiguration({\n  cookieName,\n  headerName\n}) {\n  const providers = [];\n  if (cookieName !== undefined) {\n    providers.push({\n      provide: XSRF_COOKIE_NAME,\n      useValue: cookieName\n    });\n  }\n  if (headerName !== undefined) {\n    providers.push({\n      provide: XSRF_HEADER_NAME,\n      useValue: headerName\n    });\n  }\n  return makeHttpFeature(HttpFeatureKind.CustomXsrfConfiguration, providers);\n}\n/**\n * Disables XSRF protection in the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withXsrfConfiguration` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withNoXsrfProtection() {\n  return makeHttpFeature(HttpFeatureKind.NoXsrfProtection, [{\n    provide: XSRF_ENABLED,\n    useValue: false\n  }]);\n}\n/**\n * Add JSONP support to the configuration of the current `HttpClient` instance.\n *\n * @see {@link provideHttpClient}\n */\nfunction withJsonpSupport() {\n  return makeHttpFeature(HttpFeatureKind.JsonpSupport, [JsonpClientBackend, {\n    provide: JsonpCallbackContext,\n    useFactory: jsonpCallbackContext\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: jsonpInterceptorFn,\n    multi: true\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests via the parent injector's\n * `HttpClient` instead of directly.\n *\n * By default, `provideHttpClient` configures `HttpClient` in its injector to be an independent\n * instance. For example, even if `HttpClient` is configured in the parent injector with\n * one or more interceptors, they will not intercept requests made via this instance.\n *\n * With this option enabled, once the request has passed through the current injector's\n * interceptors, it will be delegated to the parent injector's `HttpClient` chain instead of\n * dispatched directly, and interceptors in the parent configuration will be applied to the request.\n *\n * If there are several `HttpClient` instances in the injector hierarchy, it's possible for\n * `withRequestsMadeViaParent` to be used at multiple levels, which will cause the request to\n * \"bubble up\" until either reaching the root level or an `HttpClient` which was not configured with\n * this option.\n *\n * @see {@link provideHttpClient}\n * @publicApi 19.0\n */\nfunction withRequestsMadeViaParent() {\n  return makeHttpFeature(HttpFeatureKind.RequestsMadeViaParent, [{\n    provide: HttpBackend,\n    useFactory: () => {\n      const handlerFromParent = inject(HttpHandler, {\n        skipSelf: true,\n        optional: true\n      });\n      if (ngDevMode && handlerFromParent === null) {\n        throw new Error('withRequestsMadeViaParent() can only be used when the parent injector also configures HttpClient');\n      }\n      return handlerFromParent;\n    }\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests using the fetch API.\n *\n * Note: The Fetch API doesn't support progress report on uploads.\n *\n * @publicApi\n */\nfunction withFetch() {\n  return makeHttpFeature(HttpFeatureKind.Fetch, [FetchBackend, {\n    provide: FETCH_BACKEND,\n    useExisting: FetchBackend\n  }, {\n    provide: HttpBackend,\n    useExisting: FetchBackend\n  }]);\n}\n\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n * @deprecated Use withXsrfConfiguration({cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN'}) as\n *     providers instead or `withNoXsrfProtection` if you want to disabled XSRF protection.\n */\nclass HttpClientXsrfModule {\n  /**\n   * Disable the default XSRF protection.\n   */\n  static disable() {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: [withNoXsrfProtection().ɵproviders]\n    };\n  }\n  /**\n   * Configure XSRF protection.\n   * @param options An object that can specify either or both\n   * cookie name or header name.\n   * - Cookie name default is `XSRF-TOKEN`.\n   * - Header name default is `X-XSRF-TOKEN`.\n   *\n   */\n  static withOptions(options = {}) {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: withXsrfConfiguration(options).ɵproviders\n    };\n  }\n  static ɵfac = function HttpClientXsrfModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpClientXsrfModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HttpClientXsrfModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [HttpXsrfInterceptor, {\n      provide: HTTP_INTERCEPTORS,\n      useExisting: HttpXsrfInterceptor,\n      multi: true\n    }, {\n      provide: HttpXsrfTokenExtractor,\n      useClass: HttpXsrfCookieExtractor\n    }, withXsrfConfiguration({\n      cookieName: XSRF_DEFAULT_COOKIE_NAME,\n      headerName: XSRF_DEFAULT_HEADER_NAME\n    }).ɵproviders, {\n      provide: XSRF_ENABLED,\n      useValue: true\n    }]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n    type: NgModule,\n    args: [{\n      providers: [HttpXsrfInterceptor, {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: HttpXsrfInterceptor,\n        multi: true\n      }, {\n        provide: HttpXsrfTokenExtractor,\n        useClass: HttpXsrfCookieExtractor\n      }, withXsrfConfiguration({\n        cookieName: XSRF_DEFAULT_COOKIE_NAME,\n        headerName: XSRF_DEFAULT_HEADER_NAME\n      }).ɵproviders, {\n        provide: XSRF_ENABLED,\n        useValue: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in DI token `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n * @deprecated use `provideHttpClient(withInterceptorsFromDi())` as providers instead\n */\nclass HttpClientModule {\n  static ɵfac = function HttpClientModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpClientModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HttpClientModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideHttpClient(withInterceptorsFromDi())]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientModule, [{\n    type: NgModule,\n    args: [{\n      /**\n       * Configures the dependency injector where it is imported\n       * with supporting services for HTTP communications.\n       */\n      providers: [provideHttpClient(withInterceptorsFromDi())]\n    }]\n  }], null, null);\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * @publicApi\n * @deprecated `withJsonpSupport()` as providers instead\n */\nclass HttpClientJsonpModule {\n  static ɵfac = function HttpClientJsonpModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HttpClientJsonpModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: HttpClientJsonpModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [withJsonpSupport().ɵproviders]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n    type: NgModule,\n    args: [{\n      providers: [withJsonpSupport().ɵproviders]\n    }]\n  }], null, null);\n})();\nexport { FetchBackend, HTTP_INTERCEPTORS, HTTP_ROOT_INTERCEPTOR_FNS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpInterceptorHandler, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, REQUESTS_CONTRIBUTE_TO_STABILITY, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { HttpHeaders, HttpParams, HttpRequest, HttpEventType, HttpErrorResponse, HttpClient, HTTP_ROOT_INTERCEPTOR_FNS, HttpResponse } from './module.mjs';\nexport { FetchBackend, HTTP_INTERCEPTORS, HttpBackend, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration, HttpInterceptorHandler as ɵHttpInterceptingHandler, HttpInterceptorHandler as ɵHttpInterceptorHandler, REQUESTS_CONTRIBUTE_TO_STABILITY as ɵREQUESTS_CONTRIBUTE_TO_STABILITY } from './module.mjs';\nimport { assertInInjectionContext, inject, Injector, ɵResourceImpl as _ResourceImpl, linkedSignal, computed, signal, ɵencapsulateResourceError as _encapsulateResourceError, ɵRuntimeError as _RuntimeError, InjectionToken, ɵperformanceMarkFeature as _performanceMarkFeature, APP_BOOTSTRAP_LISTENER, ApplicationRef, TransferState, makeStateKey, ɵtruncateMiddle as _truncateMiddle, ɵformatRuntimeError as _formatRuntimeError } from '@angular/core';\nimport { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport './xhr.mjs';\n\n/**\n * `httpResource` makes a reactive HTTP request and exposes the request status and response value as\n * a `WritableResource`. By default, it assumes that the backend will return JSON data. To make a\n * request that expects a different kind of data, you can use a sub-constructor of `httpResource`,\n * such as `httpResource.text`.\n *\n * @experimental 19.2\n * @initializerApiFunction\n */\nconst httpResource = (() => {\n    const jsonFn = makeHttpResourceFn('json');\n    jsonFn.arrayBuffer = makeHttpResourceFn('arraybuffer');\n    jsonFn.blob = makeHttpResourceFn('blob');\n    jsonFn.text = makeHttpResourceFn('text');\n    return jsonFn;\n})();\nfunction makeHttpResourceFn(responseType) {\n    return function httpResource(request, options) {\n        if (ngDevMode && !options?.injector) {\n            assertInInjectionContext(httpResource);\n        }\n        const injector = options?.injector ?? inject(Injector);\n        return new HttpResourceImpl(injector, () => normalizeRequest(request, responseType), options?.defaultValue, options?.parse, options?.equal);\n    };\n}\nfunction normalizeRequest(request, responseType) {\n    let unwrappedRequest = typeof request === 'function' ? request() : request;\n    if (unwrappedRequest === undefined) {\n        return undefined;\n    }\n    else if (typeof unwrappedRequest === 'string') {\n        unwrappedRequest = { url: unwrappedRequest };\n    }\n    const headers = unwrappedRequest.headers instanceof HttpHeaders\n        ? unwrappedRequest.headers\n        : new HttpHeaders(unwrappedRequest.headers);\n    const params = unwrappedRequest.params instanceof HttpParams\n        ? unwrappedRequest.params\n        : new HttpParams({ fromObject: unwrappedRequest.params });\n    return new HttpRequest(unwrappedRequest.method ?? 'GET', unwrappedRequest.url, unwrappedRequest.body ?? null, {\n        headers,\n        params,\n        reportProgress: unwrappedRequest.reportProgress,\n        withCredentials: unwrappedRequest.withCredentials,\n        keepalive: unwrappedRequest.keepalive,\n        cache: unwrappedRequest.cache,\n        priority: unwrappedRequest.priority,\n        mode: unwrappedRequest.mode,\n        redirect: unwrappedRequest.redirect,\n        responseType,\n        context: unwrappedRequest.context,\n        transferCache: unwrappedRequest.transferCache,\n        credentials: unwrappedRequest.credentials,\n        timeout: unwrappedRequest.timeout,\n    });\n}\nclass HttpResourceImpl extends _ResourceImpl {\n    client;\n    _headers = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    _progress = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    _statusCode = linkedSignal({\n        source: this.extRequest,\n        computation: () => undefined,\n    });\n    headers = computed(() => this.status() === 'resolved' || this.status() === 'error' ? this._headers() : undefined, ...(ngDevMode ? [{ debugName: \"headers\" }] : []));\n    progress = this._progress.asReadonly();\n    statusCode = this._statusCode.asReadonly();\n    constructor(injector, request, defaultValue, parse, equal) {\n        super(request, ({ params: request, abortSignal }) => {\n            let sub;\n            // Track the abort listener so it can be removed if the Observable completes (as a memory\n            // optimization).\n            const onAbort = () => sub.unsubscribe();\n            abortSignal.addEventListener('abort', onAbort);\n            // Start off stream as undefined.\n            const stream = signal({ value: undefined }, ...(ngDevMode ? [{ debugName: \"stream\" }] : []));\n            let resolve;\n            const promise = new Promise((r) => (resolve = r));\n            const send = (value) => {\n                stream.set(value);\n                resolve?.(stream);\n                resolve = undefined;\n            };\n            sub = this.client.request(request).subscribe({\n                next: (event) => {\n                    switch (event.type) {\n                        case HttpEventType.Response:\n                            this._headers.set(event.headers);\n                            this._statusCode.set(event.status);\n                            try {\n                                send({ value: parse ? parse(event.body) : event.body });\n                            }\n                            catch (error) {\n                                send({ error: _encapsulateResourceError(error) });\n                            }\n                            break;\n                        case HttpEventType.DownloadProgress:\n                            this._progress.set(event);\n                            break;\n                    }\n                },\n                error: (error) => {\n                    if (error instanceof HttpErrorResponse) {\n                        this._headers.set(error.headers);\n                        this._statusCode.set(error.status);\n                    }\n                    send({ error });\n                    abortSignal.removeEventListener('abort', onAbort);\n                },\n                complete: () => {\n                    if (resolve) {\n                        send({\n                            error: new _RuntimeError(991 /* ɵRuntimeErrorCode.RESOURCE_COMPLETED_BEFORE_PRODUCING_VALUE */, ngDevMode && 'Resource completed before producing a value'),\n                        });\n                    }\n                    abortSignal.removeEventListener('abort', onAbort);\n                },\n            });\n            return promise;\n        }, defaultValue, equal, injector);\n        this.client = injector.get(HttpClient);\n    }\n}\n\n/**\n * If your application uses different HTTP origins to make API calls (via `HttpClient`) on the server and\n * on the client, the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token allows you to establish a mapping\n * between those origins, so that `HttpTransferCache` feature can recognize those requests as the same\n * ones and reuse the data cached on the server during hydration on the client.\n *\n * **Important note**: the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token should *only* be provided in\n * the *server* code of your application (typically in the `app.server.config.ts` script). Angular throws an\n * error if it detects that the token is defined while running on the client.\n *\n * @usageNotes\n *\n * When the same API endpoint is accessed via `http://internal-domain.com:8080` on the server and\n * via `https://external-domain.com` on the client, you can use the following configuration:\n * ```ts\n * // in app.server.config.ts\n * {\n *     provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n *     useValue: {\n *         'http://internal-domain.com:8080': 'https://external-domain.com'\n *     }\n * }\n * ```\n *\n * @publicApi\n */\nconst HTTP_TRANSFER_CACHE_ORIGIN_MAP = new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_CACHE_ORIGIN_MAP' : '');\n/**\n * Keys within cached response data structure.\n */\nconst BODY = 'b';\nconst HEADERS = 'h';\nconst STATUS = 's';\nconst STATUS_TEXT = 'st';\nconst REQ_URL = 'u';\nconst RESPONSE_TYPE = 'rt';\nconst CACHE_OPTIONS = new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_STATE_CACHE_OPTIONS' : '');\n/**\n * A list of allowed HTTP methods to cache.\n */\nconst ALLOWED_METHODS = ['GET', 'HEAD'];\nfunction transferCacheInterceptorFn(req, next) {\n    const { isCacheActive, ...globalOptions } = inject(CACHE_OPTIONS);\n    const { transferCache: requestOptions, method: requestMethod } = req;\n    // In the following situations we do not want to cache the request\n    if (!isCacheActive ||\n        requestOptions === false ||\n        // POST requests are allowed either globally or at request level\n        (requestMethod === 'POST' && !globalOptions.includePostRequests && !requestOptions) ||\n        (requestMethod !== 'POST' && !ALLOWED_METHODS.includes(requestMethod)) ||\n        // Do not cache request that require authorization when includeRequestsWithAuthHeaders is falsey\n        (!globalOptions.includeRequestsWithAuthHeaders && hasAuthHeaders(req)) ||\n        globalOptions.filter?.(req) === false) {\n        return next(req);\n    }\n    const transferState = inject(TransferState);\n    const originMap = inject(HTTP_TRANSFER_CACHE_ORIGIN_MAP, {\n        optional: true,\n    });\n    if (typeof ngServerMode !== 'undefined' && !ngServerMode && originMap) {\n        throw new _RuntimeError(2803 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_USED_IN_CLIENT */, ngDevMode &&\n            'Angular detected that the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token is configured and ' +\n                'present in the client side code. Please ensure that this token is only provided in the ' +\n                'server code of the application.');\n    }\n    const requestUrl = typeof ngServerMode !== 'undefined' && ngServerMode && originMap\n        ? mapRequestOriginUrl(req.url, originMap)\n        : req.url;\n    const storeKey = makeCacheKey(req, requestUrl);\n    const response = transferState.get(storeKey, null);\n    let headersToInclude = globalOptions.includeHeaders;\n    if (typeof requestOptions === 'object' && requestOptions.includeHeaders) {\n        // Request-specific config takes precedence over the global config.\n        headersToInclude = requestOptions.includeHeaders;\n    }\n    if (response) {\n        const { [BODY]: undecodedBody, [RESPONSE_TYPE]: responseType, [HEADERS]: httpHeaders, [STATUS]: status, [STATUS_TEXT]: statusText, [REQ_URL]: url, } = response;\n        // Request found in cache. Respond using it.\n        let body = undecodedBody;\n        switch (responseType) {\n            case 'arraybuffer':\n                body = new TextEncoder().encode(undecodedBody).buffer;\n                break;\n            case 'blob':\n                body = new Blob([undecodedBody]);\n                break;\n        }\n        // We want to warn users accessing a header provided from the cache\n        // That HttpTransferCache alters the headers\n        // The warning will be logged a single time by HttpHeaders instance\n        let headers = new HttpHeaders(httpHeaders);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Append extra logic in dev mode to produce a warning when a header\n            // that was not transferred to the client is accessed in the code via `get`\n            // and `has` calls.\n            headers = appendMissingHeadersDetection(req.url, headers, headersToInclude ?? []);\n        }\n        return of(new HttpResponse({\n            body,\n            headers,\n            status,\n            statusText,\n            url,\n        }));\n    }\n    const event$ = next(req);\n    if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n        // Request not found in cache. Make the request and cache it if on the server.\n        return event$.pipe(tap((event) => {\n            // Only cache successful HTTP responses.\n            if (event instanceof HttpResponse) {\n                transferState.set(storeKey, {\n                    [BODY]: event.body,\n                    [HEADERS]: getFilteredHeaders(event.headers, headersToInclude),\n                    [STATUS]: event.status,\n                    [STATUS_TEXT]: event.statusText,\n                    [REQ_URL]: requestUrl,\n                    [RESPONSE_TYPE]: req.responseType,\n                });\n            }\n        }));\n    }\n    return event$;\n}\n/** @returns true when the requests contains autorization related headers. */\nfunction hasAuthHeaders(req) {\n    return req.headers.has('authorization') || req.headers.has('proxy-authorization');\n}\nfunction getFilteredHeaders(headers, includeHeaders) {\n    if (!includeHeaders) {\n        return {};\n    }\n    const headersMap = {};\n    for (const key of includeHeaders) {\n        const values = headers.getAll(key);\n        if (values !== null) {\n            headersMap[key] = values;\n        }\n    }\n    return headersMap;\n}\nfunction sortAndConcatParams(params) {\n    return [...params.keys()]\n        .sort()\n        .map((k) => `${k}=${params.getAll(k)}`)\n        .join('&');\n}\nfunction makeCacheKey(request, mappedRequestUrl) {\n    // make the params encoded same as a url so it's easy to identify\n    const { params, method, responseType } = request;\n    const encodedParams = sortAndConcatParams(params);\n    let serializedBody = request.serializeBody();\n    if (serializedBody instanceof URLSearchParams) {\n        serializedBody = sortAndConcatParams(serializedBody);\n    }\n    else if (typeof serializedBody !== 'string') {\n        serializedBody = '';\n    }\n    const key = [method, responseType, mappedRequestUrl, serializedBody, encodedParams].join('|');\n    const hash = generateHash(key);\n    return makeStateKey(hash);\n}\n/**\n * A method that returns a hash representation of a string using a variant of DJB2 hash\n * algorithm.\n *\n * This is the same hashing logic that is used to generate component ids.\n */\nfunction generateHash(value) {\n    let hash = 0;\n    for (const char of value) {\n        hash = (Math.imul(31, hash) + char.charCodeAt(0)) << 0;\n    }\n    // Force positive number hash.\n    // 2147483647 = equivalent of Integer.MAX_VALUE.\n    hash += 2147483647 + 1;\n    return hash.toString();\n}\n/**\n * Returns the DI providers needed to enable HTTP transfer cache.\n *\n * By default, when using server rendering, requests are performed twice: once on the server and\n * other one on the browser.\n *\n * When these providers are added, requests performed on the server are cached and reused during the\n * bootstrapping of the application in the browser thus avoiding duplicate requests and reducing\n * load time.\n *\n */\nfunction withHttpTransferCache(cacheOptions) {\n    return [\n        {\n            provide: CACHE_OPTIONS,\n            useFactory: () => {\n                _performanceMarkFeature('NgHttpTransferCache');\n                return { isCacheActive: true, ...cacheOptions };\n            },\n        },\n        {\n            provide: HTTP_ROOT_INTERCEPTOR_FNS,\n            useValue: transferCacheInterceptorFn,\n            multi: true,\n        },\n        {\n            provide: APP_BOOTSTRAP_LISTENER,\n            multi: true,\n            useFactory: () => {\n                const appRef = inject(ApplicationRef);\n                const cacheState = inject(CACHE_OPTIONS);\n                return () => {\n                    appRef.whenStable().then(() => {\n                        cacheState.isCacheActive = false;\n                    });\n                };\n            },\n        },\n    ];\n}\n/**\n * This function will add a proxy to an HttpHeader to intercept calls to get/has\n * and log a warning if the header entry requested has been removed\n */\nfunction appendMissingHeadersDetection(url, headers, headersToInclude) {\n    const warningProduced = new Set();\n    return new Proxy(headers, {\n        get(target, prop) {\n            const value = Reflect.get(target, prop);\n            const methods = new Set(['get', 'has', 'getAll']);\n            if (typeof value !== 'function' || !methods.has(prop)) {\n                return value;\n            }\n            return (headerName) => {\n                // We log when the key has been removed and a warning hasn't been produced for the header\n                const key = (prop + ':' + headerName).toLowerCase(); // e.g. `get:cache-control`\n                if (!headersToInclude.includes(headerName) && !warningProduced.has(key)) {\n                    warningProduced.add(key);\n                    const truncatedUrl = _truncateMiddle(url);\n                    // TODO: create Error guide for this warning\n                    console.warn(_formatRuntimeError(2802 /* RuntimeErrorCode.HEADERS_ALTERED_BY_TRANSFER_CACHE */, `Angular detected that the \\`${headerName}\\` header is accessed, but the value of the header ` +\n                        `was not transferred from the server to the client by the HttpTransferCache. ` +\n                        `To include the value of the \\`${headerName}\\` header for the \\`${truncatedUrl}\\` request, ` +\n                        `use the \\`includeHeaders\\` list. The \\`includeHeaders\\` can be defined either ` +\n                        `on a request level by adding the \\`transferCache\\` parameter, or on an application ` +\n                        `level by adding the \\`httpCacheTransfer.includeHeaders\\` argument to the ` +\n                        `\\`provideClientHydration()\\` call. `));\n                }\n                // invoking the original method\n                return value.apply(target, [headerName]);\n            };\n        },\n    });\n}\nfunction mapRequestOriginUrl(url, originMap) {\n    const origin = new URL(url, 'resolve://').origin;\n    const mappedOrigin = originMap[origin];\n    if (!mappedOrigin) {\n        return url;\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        verifyMappedOrigin(mappedOrigin);\n    }\n    return url.replace(origin, mappedOrigin);\n}\nfunction verifyMappedOrigin(url) {\n    if (new URL(url, 'resolve://').pathname !== '/') {\n        throw new _RuntimeError(2804 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_CONTAINS_PATH */, 'Angular detected a URL with a path segment in the value provided for the ' +\n            `\\`HTTP_TRANSFER_CACHE_ORIGIN_MAP\\` token: ${url}. The map should only contain origins ` +\n            'without any other segments.');\n    }\n}\n\nexport { HTTP_TRANSFER_CACHE_ORIGIN_MAP, HttpClient, HttpErrorResponse, HttpEventType, HttpHeaders, HttpParams, HttpRequest, HttpResponse, httpResource, HTTP_ROOT_INTERCEPTOR_FNS as ɵHTTP_ROOT_INTERCEPTOR_FNS, withHttpTransferCache as ɵwithHttpTransferCache };\n\n","function f(...e){if(e){let t=[];for(let i=0;i<e.length;i++){let n=e[i];if(!n)continue;let s=typeof n;if(s===\"string\"||s===\"number\")t.push(n);else if(s===\"object\"){let c=Array.isArray(n)?[f(...n)]:Object.entries(n).map(([r,o])=>o?r:void 0);t=c.length?t.concat(c.filter(r=>!!r)):t}}return t.join(\" \").trim()}}function u(...e){return f(...e)}export{u as classNames,f as cn};\n","function R(t,e){return t?t.classList?t.classList.contains(e):new RegExp(\"(^| )\"+e+\"( |$)\",\"gi\").test(t.className):!1}function W(t,e){if(t&&e){let o=n=>{R(t,n)||(t.classList?t.classList.add(n):t.className+=\" \"+n)};[e].flat().filter(Boolean).forEach(n=>n.split(\" \").forEach(o))}}function B(){return window.innerWidth-document.documentElement.offsetWidth}function st(t){typeof t==\"string\"?W(document.body,t||\"p-overflow-hidden\"):(t!=null&&t.variableName&&document.body.style.setProperty(t.variableName,B()+\"px\"),W(document.body,(t==null?void 0:t.className)||\"p-overflow-hidden\"))}function F(t){if(t){let e=document.createElement(\"a\");if(e.download!==void 0){let{name:o,src:n}=t;return e.setAttribute(\"href\",n),e.setAttribute(\"download\",o),e.style.display=\"none\",document.body.appendChild(e),e.click(),document.body.removeChild(e),!0}}return!1}function at(t,e){let o=new Blob([t],{type:\"application/csv;charset=utf-8;\"});window.navigator.msSaveOrOpenBlob?navigator.msSaveOrOpenBlob(o,e+\".csv\"):F({name:e+\".csv\",src:URL.createObjectURL(o)})||(t=\"data:text/csv;charset=utf-8,\"+t,window.open(encodeURI(t)))}function O(t,e){if(t&&e){let o=n=>{t.classList?t.classList.remove(n):t.className=t.className.replace(new RegExp(\"(^|\\\\b)\"+n.split(\" \").join(\"|\")+\"(\\\\b|$)\",\"gi\"),\" \")};[e].flat().filter(Boolean).forEach(n=>n.split(\" \").forEach(o))}}function dt(t){typeof t==\"string\"?O(document.body,t||\"p-overflow-hidden\"):(t!=null&&t.variableName&&document.body.style.removeProperty(t.variableName),O(document.body,(t==null?void 0:t.className)||\"p-overflow-hidden\"))}function x(t){for(let e of document==null?void 0:document.styleSheets)try{for(let o of e==null?void 0:e.cssRules)for(let n of o==null?void 0:o.style)if(t.test(n))return{name:n,value:o.style.getPropertyValue(n).trim()}}catch(o){}return null}function w(t){let e={width:0,height:0};if(t){let[o,n]=[t.style.visibility,t.style.display];t.style.visibility=\"hidden\",t.style.display=\"block\",e.width=t.offsetWidth,e.height=t.offsetHeight,t.style.display=n,t.style.visibility=o}return e}function h(){let t=window,e=document,o=e.documentElement,n=e.getElementsByTagName(\"body\")[0],r=t.innerWidth||o.clientWidth||n.clientWidth,i=t.innerHeight||o.clientHeight||n.clientHeight;return{width:r,height:i}}function E(t){return t?Math.abs(t.scrollLeft):0}function k(){let t=document.documentElement;return(window.pageXOffset||E(t))-(t.clientLeft||0)}function $(){let t=document.documentElement;return(window.pageYOffset||t.scrollTop)-(t.clientTop||0)}function V(t){return t?getComputedStyle(t).direction===\"rtl\":!1}function D(t,e,o=!0){var n,r,i,l;if(t){let d=t.offsetParent?{width:t.offsetWidth,height:t.offsetHeight}:w(t),s=d.height,a=d.width,u=e.offsetHeight,c=e.offsetWidth,f=e.getBoundingClientRect(),g=$(),it=k(),lt=h(),L,N,ot=\"top\";f.top+u+s>lt.height?(L=f.top+g-s,ot=\"bottom\",L<0&&(L=g)):L=u+f.top+g,f.left+a>lt.width?N=Math.max(0,f.left+it+c-a):N=f.left+it,V(t)?t.style.insetInlineEnd=N+\"px\":t.style.insetInlineStart=N+\"px\",t.style.top=L+\"px\",t.style.transformOrigin=ot,o&&(t.style.marginTop=ot===\"bottom\"?`calc(${(r=(n=x(/-anchor-gutter$/))==null?void 0:n.value)!=null?r:\"2px\"} * -1)`:(l=(i=x(/-anchor-gutter$/))==null?void 0:i.value)!=null?l:\"\")}}function S(t,e){t&&(typeof e==\"string\"?t.style.cssText=e:Object.entries(e||{}).forEach(([o,n])=>t.style[o]=n))}function v(t,e){if(t instanceof HTMLElement){let o=t.offsetWidth;if(e){let n=getComputedStyle(t);o+=parseFloat(n.marginLeft)+parseFloat(n.marginRight)}return o}return 0}function I(t,e,o=!0,n=void 0){var r;if(t){let i=t.offsetParent?{width:t.offsetWidth,height:t.offsetHeight}:w(t),l=e.offsetHeight,d=e.getBoundingClientRect(),s=h(),a,u,c=n!=null?n:\"top\";if(!n&&d.top+l+i.height>s.height?(a=-1*i.height,c=\"bottom\",d.top+a<0&&(a=-1*d.top)):a=l,i.width>s.width?u=d.left*-1:d.left+i.width>s.width?u=(d.left+i.width-s.width)*-1:u=0,t.style.top=a+\"px\",t.style.insetInlineStart=u+\"px\",t.style.transformOrigin=c,o){let f=(r=x(/-anchor-gutter$/))==null?void 0:r.value;t.style.marginTop=c===\"bottom\"?`calc(${f!=null?f:\"2px\"} * -1)`:f!=null?f:\"\"}}}function ft(t,e,o,n=!0){t&&e&&(o===\"self\"?I(t,e):(n&&(t.style.minWidth=v(e)+\"px\"),D(t,e)))}function y(t){if(t){let e=t.parentNode;return e&&e instanceof ShadowRoot&&e.host&&(e=e.host),e}return null}function T(t){return!!(t!==null&&typeof t!=\"undefined\"&&t.nodeName&&y(t))}function p(t){return typeof Element!=\"undefined\"?t instanceof Element:t!==null&&typeof t==\"object\"&&t.nodeType===1&&typeof t.nodeName==\"string\"}function H(t){let e=t;return t&&typeof t==\"object\"&&(Object.hasOwn(t,\"current\")?e=t.current:Object.hasOwn(t,\"el\")&&(Object.hasOwn(t.el,\"nativeElement\")?e=t.el.nativeElement:e=t.el)),p(e)?e:void 0}function j(t,e){var o,n,r;if(t)switch(t){case\"document\":return document;case\"window\":return window;case\"body\":return document.body;case\"@next\":return e==null?void 0:e.nextElementSibling;case\"@prev\":return e==null?void 0:e.previousElementSibling;case\"@first\":return e==null?void 0:e.firstElementChild;case\"@last\":return e==null?void 0:e.lastElementChild;case\"@child\":return(o=e==null?void 0:e.children)==null?void 0:o[0];case\"@parent\":return e==null?void 0:e.parentElement;case\"@grandparent\":return(n=e==null?void 0:e.parentElement)==null?void 0:n.parentElement;default:{if(typeof t==\"string\"){let s=t.match(/^@child\\[(\\d+)]/);return s?((r=e==null?void 0:e.children)==null?void 0:r[parseInt(s[1],10)])||null:document.querySelector(t)||null}let l=(s=>typeof s==\"function\"&&\"call\"in s&&\"apply\"in s)(t)?t():t,d=H(l);return T(d)?d:(l==null?void 0:l.nodeType)===9?l:void 0}}}function ut(t,e){let o=j(t,e);if(o)o.appendChild(e);else throw new Error(\"Cannot append \"+e+\" to \"+t)}var nt;function pt(t){if(t){let e=getComputedStyle(t);return t.offsetHeight-t.clientHeight-parseFloat(e.borderTopWidth)-parseFloat(e.borderBottomWidth)}else{if(nt!=null)return nt;let e=document.createElement(\"div\");S(e,{width:\"100px\",height:\"100px\",overflow:\"scroll\",position:\"absolute\",top:\"-9999px\"}),document.body.appendChild(e);let o=e.offsetHeight-e.clientHeight;return document.body.removeChild(e),nt=o,o}}var rt;function P(t){if(t){let e=getComputedStyle(t);return t.offsetWidth-t.clientWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.borderRightWidth)}else{if(rt!=null)return rt;let e=document.createElement(\"div\");S(e,{width:\"100px\",height:\"100px\",overflow:\"scroll\",position:\"absolute\",top:\"-9999px\"}),document.body.appendChild(e);let o=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),rt=o,o}}function ct(){if(window.getSelection){let t=window.getSelection()||{};t.empty?t.empty():t.removeAllRanges&&t.rangeCount>0&&t.getRangeAt(0).getClientRects().length>0&&t.removeAllRanges()}}function A(t,e={}){if(p(t)){let o=(n,r)=>{var l,d;let i=(l=t==null?void 0:t.$attrs)!=null&&l[n]?[(d=t==null?void 0:t.$attrs)==null?void 0:d[n]]:[];return[r].flat().reduce((s,a)=>{if(a!=null){let u=typeof a;if(u===\"string\"||u===\"number\")s.push(a);else if(u===\"object\"){let c=Array.isArray(a)?o(n,a):Object.entries(a).map(([f,g])=>n===\"style\"&&(g||g===0)?`${f.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()}:${g}`:g?f:void 0);s=c.length?s.concat(c.filter(f=>!!f)):s}}return s},i)};Object.entries(e).forEach(([n,r])=>{if(r!=null){let i=n.match(/^on(.+)/);i?t.addEventListener(i[1].toLowerCase(),r):n===\"p-bind\"||n===\"pBind\"?A(t,r):(r=n===\"class\"?[...new Set(o(\"class\",r))].join(\" \").trim():n===\"style\"?o(\"style\",r).join(\";\").trim():r,(t.$attrs=t.$attrs||{})&&(t.$attrs[n]=r),t.setAttribute(n,r))}})}}function U(t,e={},...o){if(t){let n=document.createElement(t);return A(n,e),n.append(...o),n}}function q(t,e={}){return t?`<style${Object.entries(e).reduce((o,[n,r])=>o+` ${n}=\"${r}\"`,\"\")}>${t}</style>`:\"\"}function mt(t,e={}){return q(t,e)}function X(t,e={},o){let n=U(\"style\",e,t);return o==null||o.appendChild(n),n}function gt(t={},e){return X(\"\",t,e||document.head)}function ht(t,e){if(t){t.style.opacity=\"0\";let o=+new Date,n=\"0\",r=function(){n=`${+t.style.opacity+(new Date().getTime()-o)/e}`,t.style.opacity=n,o=+new Date,+n<1&&(\"requestAnimationFrame\"in window?requestAnimationFrame(r):setTimeout(r,16))};r()}}function yt(t,e){if(t){let o=1,n=50,r=n/e,i=setInterval(()=>{o-=r,o<=0&&(o=0,clearInterval(i)),t.style.opacity=o.toString()},n)}}function Y(t,e){return p(t)?Array.from(t.querySelectorAll(e)):[]}function z(t,e){return p(t)?t.matches(e)?t:t.querySelector(e):null}function bt(t,e){t&&document.activeElement!==t&&t.focus(e)}function Q(t,e){if(p(t)){let o=t.getAttribute(e);return isNaN(o)?o===\"true\"||o===\"false\"?o===\"true\":o:+o}}function Z(){let t=navigator.userAgent.toLowerCase(),e=/(chrome)[ ]([\\w.]+)/.exec(t)||/(webkit)[ ]([\\w.]+)/.exec(t)||/(opera)(?:.*version|)[ ]([\\w.]+)/.exec(t)||/(msie) ([\\w.]+)/.exec(t)||t.indexOf(\"compatible\")<0&&/(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(t)||[];return{browser:e[1]||\"\",version:e[2]||\"0\"}}var m=null;function xt(){if(!m){m={};let t=Z();t.browser&&(m[t.browser]=!0,m.version=t.version),m.chrome?m.webkit=!0:m.webkit&&(m.safari=!0)}return m}function Et(){return navigator.languages&&navigator.languages.length&&navigator.languages[0]||navigator.language||\"en\"}function wt(t,e,o){var n;return t&&e?o?(n=t==null?void 0:t.style)==null?void 0:n.getPropertyValue(e):getComputedStyle(t).getPropertyValue(e):null}function St(t,e,o,n){if(t){let r=getComputedStyle(t),i=document.createElement(\"div\");i.style.position=\"absolute\",i.style.top=\"0px\",i.style.left=\"0px\",i.style.visibility=\"hidden\",i.style.pointerEvents=\"none\",i.style.overflow=r.overflow,i.style.width=r.width,i.style.height=r.height,i.style.padding=r.padding,i.style.border=r.border,i.style.overflowWrap=r.overflowWrap,i.style.whiteSpace=r.whiteSpace,i.style.lineHeight=r.lineHeight,i.innerHTML=e.replace(/\\r\\n|\\r|\\n/g,\"<br />\");let l=document.createElement(\"span\");l.textContent=n,i.appendChild(l);let d=document.createTextNode(o);i.appendChild(d),document.body.appendChild(i);let{offsetLeft:s,offsetTop:a,clientHeight:u}=l;return document.body.removeChild(i),{left:Math.abs(s-t.scrollLeft),top:Math.abs(a-t.scrollTop)+u}}return{top:\"auto\",left:\"auto\"}}function b(t,e=\"\"){let o=Y(t,`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [href]:not([tabindex = \"-1\"]):not([style*=\"display:none\"]):not([hidden])${e},\n            input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e}`),n=[];for(let r of o)getComputedStyle(r).display!=\"none\"&&getComputedStyle(r).visibility!=\"hidden\"&&n.push(r);return n}function vt(t,e){let o=b(t,e);return o.length>0?o[0]:null}function Tt(t){if(t){let e=t.offsetHeight,o=getComputedStyle(t);return e-=parseFloat(o.paddingTop)+parseFloat(o.paddingBottom)+parseFloat(o.borderTopWidth)+parseFloat(o.borderBottomWidth),e}return 0}function G(t){if(t){let[e,o]=[t.style.visibility,t.style.display];t.style.visibility=\"hidden\",t.style.display=\"block\";let n=t.offsetHeight;return t.style.display=o,t.style.visibility=e,n}return 0}function J(t){if(t){let[e,o]=[t.style.visibility,t.style.display];t.style.visibility=\"hidden\",t.style.display=\"block\";let n=t.offsetWidth;return t.style.display=o,t.style.visibility=e,n}return 0}function Ht(t){var e;if(t){let o=(e=y(t))==null?void 0:e.childNodes,n=0;if(o)for(let r=0;r<o.length;r++){if(o[r]===t)return n;o[r].nodeType===1&&n++}}return-1}function Ct(t){if(t){let e=t.offsetWidth,o=getComputedStyle(t);return e-=parseFloat(o.borderLeft)+parseFloat(o.borderRight),e}return 0}function Lt(t,e){let o=b(t,e);return o.length>0?o[o.length-1]:null}function Wt(t,e){let o=t.nextElementSibling;for(;o;){if(o.matches(e))return o;o=o.nextElementSibling}return null}function Ot(t,e,o){let n=b(t,o),r=n.length>0?n.findIndex(l=>l===e):-1,i=r>-1&&n.length>=r+1?r+1:-1;return i>-1?n[i]:null}function K(t){if(t){let e=t.getBoundingClientRect();return{top:e.top+(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0),left:e.left+(window.pageXOffset||E(document.documentElement)||E(document.body)||0)}}return{top:\"auto\",left:\"auto\"}}function C(t,e){if(t){let o=t.offsetHeight;if(e){let n=getComputedStyle(t);o+=parseFloat(n.marginTop)+parseFloat(n.marginBottom)}return o}return 0}function M(t,e=[]){let o=y(t);return o===null?e:M(o,e.concat([o]))}function Pt(t,e){let o=t.previousElementSibling;for(;o;){if(o.matches(e))return o;o=o.previousElementSibling}return null}function At(t){let e=[];if(t){let o=M(t),n=/(auto|scroll)/,r=i=>{try{let l=window.getComputedStyle(i,null);return n.test(l.getPropertyValue(\"overflow\"))||n.test(l.getPropertyValue(\"overflowX\"))||n.test(l.getPropertyValue(\"overflowY\"))}catch(l){return!1}};for(let i of o){let l=i.nodeType===1&&i.dataset.scrollselectors;if(l){let d=l.split(\",\");for(let s of d){let a=z(i,s);a&&r(a)&&e.push(a)}}i.nodeType!==9&&r(i)&&e.push(i)}}return e}function Mt(){if(window.getSelection)return window.getSelection().toString();if(document.getSelection)return document.getSelection().toString()}function Nt(){return navigator.userAgent}function Rt(t){if(t){let e=t.offsetWidth,o=getComputedStyle(t);return e-=parseFloat(o.paddingLeft)+parseFloat(o.paddingRight)+parseFloat(o.borderLeftWidth)+parseFloat(o.borderRightWidth),e}return 0}function Bt(t){if(t){let e=getComputedStyle(t);return parseFloat(e.getPropertyValue(\"animation-duration\")||\"0\")>0}return!1}function Ft(t){if(t){let e=getComputedStyle(t);return parseFloat(e.getPropertyValue(\"transition-duration\")||\"0\")>0}return!1}function kt(t,e,o){let n=t[e];typeof n==\"function\"&&n.apply(t,o!=null?o:[])}function $t(){return/(android)/i.test(navigator.userAgent)}function _(t,e,o){return p(t)?Q(t,e)===o:!1}function Vt(t,e,o){return!_(t,e,o)}function Dt(t){if(t){let e=t.nodeName,o=t.parentElement&&t.parentElement.nodeName;return e===\"INPUT\"||e===\"TEXTAREA\"||e===\"BUTTON\"||e===\"A\"||o===\"INPUT\"||o===\"TEXTAREA\"||o===\"BUTTON\"||o===\"A\"||!!t.closest(\".p-button, .p-checkbox, .p-radiobutton\")}return!1}function tt(){return!!(typeof window!=\"undefined\"&&window.document&&window.document.createElement)}function It(t,e=\"\"){return p(t)?t.matches(`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e},\n            [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${e}`):!1}function et(t){return!!(t&&t.offsetParent!=null)}function jt(t){return!et(t)}function Ut(){return/iPad|iPhone|iPod/.test(navigator.userAgent)&&!(\"MSStream\"in window)}function qt(){return typeof window==\"undefined\"||!window.matchMedia?!1:window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches}function Xt(){return!tt()}function Yt(){return\"ontouchstart\"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}function zt(t,e){var o,n;if(t){let r=t.parentElement,i=K(r),l=h(),d=t.offsetParent?t.offsetWidth:J(t),s=t.offsetParent?t.offsetHeight:G(t),a=v((o=r==null?void 0:r.children)==null?void 0:o[0]),u=C((n=r==null?void 0:r.children)==null?void 0:n[0]),c=\"\",f=\"\";i.left+a+d>l.width-P()?i.left<d?e%2===1?c=i.left?\"-\"+i.left+\"px\":\"100%\":e%2===0&&(c=l.width-d-P()+\"px\"):c=\"-100%\":c=\"100%\",t.getBoundingClientRect().top+u+s>l.height?f=`-${s-u}px`:f=\"0px\",t.style.top=f,t.style.insetInlineStart=c}}function Qt(t){var e;t&&(\"remove\"in Element.prototype?t.remove():(e=t.parentNode)==null||e.removeChild(t))}function Zt(t,e){let o=H(t);if(o)o.removeChild(e);else throw new Error(\"Cannot remove \"+e+\" from \"+t)}function Gt(t){var e;if(T(t)){try{(e=t.parentNode)==null||e.removeChild(t)}catch(o){}return null}return t}function Jt(t,e){let o=getComputedStyle(t).getPropertyValue(\"borderTopWidth\"),n=o?parseFloat(o):0,r=getComputedStyle(t).getPropertyValue(\"paddingTop\"),i=r?parseFloat(r):0,l=t.getBoundingClientRect(),s=e.getBoundingClientRect().top+document.body.scrollTop-(l.top+document.body.scrollTop)-n-i,a=t.scrollTop,u=t.clientHeight,c=C(e);s<0?t.scrollTop=a+s:s+c>u&&(t.scrollTop=a+s-u+c)}function Kt(t,e=\"\",o){p(t)&&o!==null&&o!==void 0&&t.setAttribute(e,o)}function _t(t,e,o=null,n){var r;e&&((r=t==null?void 0:t.style)==null||r.setProperty(e,o,n))}export{D as absolutePosition,W as addClass,S as addStyle,ft as alignOverlay,ut as appendChild,st as blockBodyScroll,B as calculateBodyScrollbarWidth,pt as calculateScrollbarHeight,P as calculateScrollbarWidth,ct as clearSelection,U as createElement,mt as createStyleAsString,X as createStyleElement,q as createStyleMarkup,gt as createStyleTag,at as exportCSV,ht as fadeIn,yt as fadeOut,Y as find,z as findSingle,bt as focus,Q as getAttribute,xt as getBrowser,Et as getBrowserLanguage,wt as getCSSProperty,x as getCSSVariableByRegex,St as getCursorOffset,vt as getFirstFocusableElement,b as getFocusableElements,Tt as getHeight,w as getHiddenElementDimensions,G as getHiddenElementOuterHeight,J as getHiddenElementOuterWidth,Ht as getIndex,Ct as getInnerWidth,Lt as getLastFocusableElement,Wt as getNextElementSibling,Ot as getNextFocusableElement,K as getOffset,C as getOuterHeight,v as getOuterWidth,y as getParentNode,M as getParents,Pt as getPreviousElementSibling,E as getScrollLeft,At as getScrollableParents,Mt as getSelection,j as getTargetElement,Nt as getUserAgent,h as getViewport,Rt as getWidth,k as getWindowScrollLeft,$ as getWindowScrollTop,Bt as hasCSSAnimation,Ft as hasCSSTransition,R as hasClass,kt as invokeElementMethod,$t as isAndroid,_ as isAttributeEquals,Vt as isAttributeNotEquals,Dt as isClickable,tt as isClient,p as isElement,T as isExist,It as isFocusableElement,jt as isHidden,Ut as isIOS,qt as isPrefersReducedMotion,V as isRTL,Xt as isServer,Yt as isTouchDevice,et as isVisible,zt as nestedPosition,I as relativePosition,Qt as remove,Zt as removeChild,O as removeClass,Gt as removeStyleTag,Z as resolveUserAgent,F as saveAs,Jt as scrollInView,Kt as setAttribute,A as setAttributes,_t as setCSSProperty,H as toElement,dt as unblockBodyScroll};\n","function s(){let r=new Map;return{on(e,t){let n=r.get(e);return n?n.push(t):n=[t],r.set(e,n),this},off(e,t){let n=r.get(e);return n&&n.splice(n.indexOf(t)>>>0,1),this},emit(e,t){let n=r.get(e);n&&n.forEach(i=>{i(t)})},clear(){r.clear()}}}export{s as EventBus};\n","var oe=Object.defineProperty;var K=Object.getOwnPropertySymbols;var ue=Object.prototype.hasOwnProperty,fe=Object.prototype.propertyIsEnumerable;var N=(e,t,n)=>t in e?oe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))ue.call(t,n)&&N(e,n,t[n]);if(K)for(var n of K(t))fe.call(t,n)&&N(e,n,t[n]);return e};function a(e){return e==null||e===\"\"||Array.isArray(e)&&e.length===0||!(e instanceof Date)&&typeof e==\"object\"&&Object.keys(e).length===0}function x(e,t,n,r=1){let o=-1,u=a(e),f=a(t);return u&&f?o=0:u?o=r:f?o=-r:typeof e==\"string\"&&typeof t==\"string\"?o=n(e,t):o=e<t?-1:e>t?1:0,o}function R(e,t,n=new WeakSet){if(e===t)return!0;if(!e||!t||typeof e!=\"object\"||typeof t!=\"object\"||n.has(e)||n.has(t))return!1;n.add(e).add(t);let r=Array.isArray(e),o=Array.isArray(t),u,f,h;if(r&&o){if(f=e.length,f!=t.length)return!1;for(u=f;u--!==0;)if(!R(e[u],t[u],n))return!1;return!0}if(r!=o)return!1;let A=e instanceof Date,S=t instanceof Date;if(A!=S)return!1;if(A&&S)return e.getTime()==t.getTime();let I=e instanceof RegExp,L=t instanceof RegExp;if(I!=L)return!1;if(I&&L)return e.toString()==t.toString();let O=Object.keys(e);if(f=O.length,f!==Object.keys(t).length)return!1;for(u=f;u--!==0;)if(!Object.prototype.hasOwnProperty.call(t,O[u]))return!1;for(u=f;u--!==0;)if(h=O[u],!R(e[h],t[h],n))return!1;return!0}function y(e,t){return R(e,t)}function l(e){return typeof e==\"function\"&&\"call\"in e&&\"apply\"in e}function s(e){return!a(e)}function c(e,t){if(!e||!t)return null;try{let n=e[t];if(s(n))return n}catch(n){}if(Object.keys(e).length){if(l(t))return t(e);if(t.indexOf(\".\")===-1)return e[t];{let n=t.split(\".\"),r=e;for(let o=0,u=n.length;o<u;++o){if(r==null)return null;r=r[n[o]]}return r}}return null}function k(e,t,n){return n?c(e,n)===c(t,n):y(e,t)}function B(e,t){if(e!=null&&t&&t.length){for(let n of t)if(k(e,n))return!0}return!1}function i(e,t=!0){return e instanceof Object&&e.constructor===Object&&(t||Object.keys(e).length!==0)}function $(e={},t={}){let n=d({},e);return Object.keys(t).forEach(r=>{let o=r;i(t[o])&&o in e&&i(e[o])?n[o]=$(e[o],t[o]):n[o]=t[o]}),n}function w(...e){return e.reduce((t,n,r)=>r===0?n:$(t,n),{})}function V(e,t,n){let r=[];if(e){for(let o of e)for(let u of t)if(String(c(o,u)).toLowerCase().indexOf(n.toLowerCase())>-1){r.push(o);break}}return r}function C(e,t){let n=-1;if(t){for(let r=0;r<t.length;r++)if(t[r]===e){n=r;break}}return n}function q(e,t){let n;if(s(e))try{n=e.findLast(t)}catch(r){n=[...e].reverse().find(t)}return n}function M(e,t){let n=-1;if(s(e))try{n=e.findLastIndex(t)}catch(r){n=e.lastIndexOf([...e].reverse().find(t))}return n}function m(e,...t){return l(e)?e(...t):e}function p(e,t=!0){return typeof e==\"string\"&&(t||e!==\"\")}function g(e){return p(e)?e.replace(/(-|_)/g,\"\").toLowerCase():e}function F(e,t=\"\",n={}){let r=g(t).split(\".\"),o=r.shift();if(o){if(i(e)){let u=Object.keys(e).find(f=>g(f)===o)||\"\";return F(m(e[u],n),r.join(\".\"),n)}return}return m(e,n)}function P(e,t,n,r){if(n.length>0){let o=!1;for(let u=0;u<n.length;u++)if(C(n[u],r)>t){n.splice(u,0,e),o=!0;break}o||n.push(e)}else n.push(e)}function b(e,t=!0){return Array.isArray(e)&&(t||e.length!==0)}function T(e){return e instanceof Date}function Z(e){return/^[a-zA-Z\\u00C0-\\u017F]$/.test(e)}function _(e){return s(e)&&!isNaN(e)}function j(e=\"\"){return s(e)&&e.length===1&&!!e.match(/\\S| /)}function J(e){return e!=null&&(typeof e==\"string\"||typeof e==\"number\"||typeof e==\"bigint\"||typeof e==\"boolean\")}function W(){return new Intl.Collator(void 0,{numeric:!0}).compare}function z(e,t){if(t){let n=t.test(e);return t.lastIndex=0,n}return!1}function U(...e){return w(...e)}function G(e){return e&&e.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g,\"\").replace(/ {2,}/g,\" \").replace(/ ([{:}]) /g,\"$1\").replace(/([;,]) /g,\"$1\").replace(/ !/g,\"!\").replace(/: /g,\":\").trim()}function D(e={},t=\"\"){return Object.entries(e).reduce((n,[r,o])=>{let u=t?`${t}.${r}`:r;return i(o)?n=n.concat(D(o,u)):n.push(u),n},[])}function H(e,...t){if(!i(e))return e;let n=d({},e);return t==null||t.flat().forEach(r=>delete n[r]),n}function Y(e){if(e&&/[\\xC0-\\xFF\\u0100-\\u017E]/.test(e)){let n={A:/[\\xC0-\\xC5\\u0100\\u0102\\u0104]/g,AE:/[\\xC6]/g,C:/[\\xC7\\u0106\\u0108\\u010A\\u010C]/g,D:/[\\xD0\\u010E\\u0110]/g,E:/[\\xC8-\\xCB\\u0112\\u0114\\u0116\\u0118\\u011A]/g,G:/[\\u011C\\u011E\\u0120\\u0122]/g,H:/[\\u0124\\u0126]/g,I:/[\\xCC-\\xCF\\u0128\\u012A\\u012C\\u012E\\u0130]/g,IJ:/[\\u0132]/g,J:/[\\u0134]/g,K:/[\\u0136]/g,L:/[\\u0139\\u013B\\u013D\\u013F\\u0141]/g,N:/[\\xD1\\u0143\\u0145\\u0147\\u014A]/g,O:/[\\xD2-\\xD6\\xD8\\u014C\\u014E\\u0150]/g,OE:/[\\u0152]/g,R:/[\\u0154\\u0156\\u0158]/g,S:/[\\u015A\\u015C\\u015E\\u0160]/g,T:/[\\u0162\\u0164\\u0166]/g,U:/[\\xD9-\\xDC\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172]/g,W:/[\\u0174]/g,Y:/[\\xDD\\u0176\\u0178]/g,Z:/[\\u0179\\u017B\\u017D]/g,a:/[\\xE0-\\xE5\\u0101\\u0103\\u0105]/g,ae:/[\\xE6]/g,c:/[\\xE7\\u0107\\u0109\\u010B\\u010D]/g,d:/[\\u010F\\u0111]/g,e:/[\\xE8-\\xEB\\u0113\\u0115\\u0117\\u0119\\u011B]/g,g:/[\\u011D\\u011F\\u0121\\u0123]/g,i:/[\\xEC-\\xEF\\u0129\\u012B\\u012D\\u012F\\u0131]/g,ij:/[\\u0133]/g,j:/[\\u0135]/g,k:/[\\u0137,\\u0138]/g,l:/[\\u013A\\u013C\\u013E\\u0140\\u0142]/g,n:/[\\xF1\\u0144\\u0146\\u0148\\u014B]/g,p:/[\\xFE]/g,o:/[\\xF2-\\xF6\\xF8\\u014D\\u014F\\u0151]/g,oe:/[\\u0153]/g,r:/[\\u0155\\u0157\\u0159]/g,s:/[\\u015B\\u015D\\u015F\\u0161]/g,t:/[\\u0163\\u0165\\u0167]/g,u:/[\\xF9-\\xFC\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173]/g,w:/[\\u0175]/g,y:/[\\xFD\\xFF\\u0177]/g,z:/[\\u017A\\u017C\\u017E]/g};for(let r in n)e=e.replace(n[r],r)}return e}function Q(e,t,n){e&&t!==n&&(n>=e.length&&(n%=e.length,t%=e.length),e.splice(n,0,e.splice(t,1)[0]))}function X(e,t,n=1,r,o=1){let u=x(e,t,r,n),f=n;return(a(e)||a(t))&&(f=o===1?n:o),f*u}function E(e,t=2,n=0){let r=\" \".repeat(n),o=\" \".repeat(n+t);return b(e)?\"[\"+e.map(u=>E(u,t,n+t)).join(\", \")+\"]\":T(e)?e.toISOString():l(e)?e.toString():i(e)?`{\n`+Object.entries(e).map(([u,f])=>`${o}${u}: ${E(f,t,n+t)}`).join(`,\n`)+`\n${r}}`:JSON.stringify(e)}function v(e){return p(e,!1)?e[0].toUpperCase()+e.slice(1):e}function ee(e){return p(e)?e.replace(/(_)/g,\"-\").replace(/[A-Z]/g,(t,n)=>n===0?t:\"-\"+t.toLowerCase()).toLowerCase():e}function te(e){return e===\"auto\"?0:typeof e==\"number\"?e:Number(e.replace(/[^\\d.]/g,\"\").replace(\",\",\".\"))*1e3}function ne(e){return p(e)?e.replace(/[A-Z]/g,(t,n)=>n===0?t:\".\"+t.toLowerCase()).toLowerCase():e}function re(e){if(e&&typeof e==\"object\"){if(Object.hasOwn(e,\"current\"))return e.current;if(Object.hasOwn(e,\"value\"))return e.value}return m(e)}export{x as compare,B as contains,y as deepEquals,w as deepMerge,k as equals,V as filter,C as findIndexInList,q as findLast,M as findLastIndex,F as getKeyValue,P as insertIntoOrderedArray,b as isArray,T as isDate,a as isEmpty,l as isFunction,Z as isLetter,s as isNotEmpty,_ as isNumber,i as isObject,j as isPrintableCharacter,J as isScalar,p as isString,W as localeComparator,z as matchRegex,U as mergeKeys,G as minifyCSS,D as nestedKeys,H as omit,Y as removeAccents,Q as reorderArray,m as resolve,c as resolveFieldData,X as sort,E as stringify,v as toCapitalCase,g as toFlatCase,ee as toKebabCase,te as toMs,ne as toTokenKey,re as toValue};\n","var t={};function s(n=\"pui_id_\"){return Object.hasOwn(t,n)||(t[n]=0),t[n]++,`${n}${t[n]}`}export{s as uuid};\n","import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, Directive, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { resolveFieldData, equals, removeAccents } from '@primeuix/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Type of the confirm event.\n */\nconst _c0 = [\"*\"];\nvar ConfirmEventType;\n(function (ConfirmEventType) {\n  ConfirmEventType[ConfirmEventType[\"ACCEPT\"] = 0] = \"ACCEPT\";\n  ConfirmEventType[ConfirmEventType[\"REJECT\"] = 1] = \"REJECT\";\n  ConfirmEventType[ConfirmEventType[\"CANCEL\"] = 2] = \"CANCEL\";\n})(ConfirmEventType || (ConfirmEventType = {}));\n\n/**\n * Methods used in confirmation service.\n * @group Service\n */\nclass ConfirmationService {\n  requireConfirmationSource = new Subject();\n  acceptConfirmationSource = new Subject();\n  requireConfirmation$ = this.requireConfirmationSource.asObservable();\n  accept = this.acceptConfirmationSource.asObservable();\n  /**\n   * Callback to invoke on confirm.\n   * @param {Confirmation} confirmation - Represents a confirmation dialog configuration.\n   * @group Method\n   */\n  confirm(confirmation) {\n    this.requireConfirmationSource.next(confirmation);\n    return this;\n  }\n  /**\n   * Closes the dialog.\n   * @group Method\n   */\n  close() {\n    this.requireConfirmationSource.next(null);\n    return this;\n  }\n  /**\n   * Accepts the dialog.\n   * @group Method\n   */\n  onAccept() {\n    this.acceptConfirmationSource.next(null);\n  }\n  static ɵfac = function ConfirmationService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ConfirmationService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ConfirmationService,\n    factory: ConfirmationService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmationService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass ContextMenuService {\n  activeItemKeyChange = new Subject();\n  activeItemKeyChange$ = this.activeItemKeyChange.asObservable();\n  activeItemKey;\n  changeKey(key) {\n    this.activeItemKey = key;\n    this.activeItemKeyChange.next(this.activeItemKey);\n  }\n  reset() {\n    this.activeItemKey = null;\n    this.activeItemKeyChange.next(this.activeItemKey);\n  }\n  static ɵfac = function ContextMenuService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ContextMenuService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ContextMenuService,\n    factory: ContextMenuService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ContextMenuService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass FilterMatchMode {\n  static STARTS_WITH = 'startsWith';\n  static CONTAINS = 'contains';\n  static NOT_CONTAINS = 'notContains';\n  static ENDS_WITH = 'endsWith';\n  static EQUALS = 'equals';\n  static NOT_EQUALS = 'notEquals';\n  static IN = 'in';\n  static LESS_THAN = 'lt';\n  static LESS_THAN_OR_EQUAL_TO = 'lte';\n  static GREATER_THAN = 'gt';\n  static GREATER_THAN_OR_EQUAL_TO = 'gte';\n  static BETWEEN = 'between';\n  static IS = 'is';\n  static IS_NOT = 'isNot';\n  static BEFORE = 'before';\n  static AFTER = 'after';\n  static DATE_IS = 'dateIs';\n  static DATE_IS_NOT = 'dateIsNot';\n  static DATE_BEFORE = 'dateBefore';\n  static DATE_AFTER = 'dateAfter';\n}\nclass FilterOperator {\n  static AND = 'and';\n  static OR = 'or';\n}\nclass FilterService {\n  filter(value, fields, filterValue, filterMatchMode, filterLocale) {\n    let filteredItems = [];\n    if (value) {\n      for (let item of value) {\n        for (let field of fields) {\n          let fieldValue = resolveFieldData(item, field);\n          if (this.filters[filterMatchMode](fieldValue, filterValue, filterLocale)) {\n            filteredItems.push(item);\n            break;\n          }\n        }\n      }\n    }\n    return filteredItems;\n  }\n  filters = {\n    startsWith: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || filter.trim() === '') {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      let filterValue = removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      let stringValue = removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n      return stringValue.slice(0, filterValue.length) === filterValue;\n    },\n    contains: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      let filterValue = removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      let stringValue = removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n      return stringValue.indexOf(filterValue) !== -1;\n    },\n    notContains: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      let filterValue = removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      let stringValue = removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n      return stringValue.indexOf(filterValue) === -1;\n    },\n    endsWith: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || filter.trim() === '') {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      let filterValue = removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      let stringValue = removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n      return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;\n    },\n    equals: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() === filter.getTime();else if (value == filter) return true;else return removeAccents(value.toString()).toLocaleLowerCase(filterLocale) == removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n    },\n    notEquals: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n        return false;\n      }\n      if (value === undefined || value === null) {\n        return true;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() !== filter.getTime();else if (value == filter) return false;else return removeAccents(value.toString()).toLocaleLowerCase(filterLocale) != removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n    },\n    in: (value, filter) => {\n      if (filter === undefined || filter === null || filter.length === 0) {\n        return true;\n      }\n      for (let i = 0; i < filter.length; i++) {\n        if (equals(value, filter[i])) {\n          return true;\n        }\n      }\n      return false;\n    },\n    between: (value, filter) => {\n      if (filter == null || filter[0] == null || filter[1] == null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime) return filter[0].getTime() <= value.getTime() && value.getTime() <= filter[1].getTime();else return filter[0] <= value && value <= filter[1];\n    },\n    lt: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() < filter.getTime();else return value < filter;\n    },\n    lte: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() <= filter.getTime();else return value <= filter;\n    },\n    gt: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() > filter.getTime();else return value > filter;\n    },\n    gte: (value, filter, filterLocale) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      if (value.getTime && filter.getTime) return value.getTime() >= filter.getTime();else return value >= filter;\n    },\n    is: (value, filter, filterLocale) => {\n      return this.filters.equals(value, filter, filterLocale);\n    },\n    isNot: (value, filter, filterLocale) => {\n      return this.filters.notEquals(value, filter, filterLocale);\n    },\n    before: (value, filter, filterLocale) => {\n      return this.filters.lt(value, filter, filterLocale);\n    },\n    after: (value, filter, filterLocale) => {\n      return this.filters.gt(value, filter, filterLocale);\n    },\n    dateIs: (value, filter) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      return value.toDateString() === filter.toDateString();\n    },\n    dateIsNot: (value, filter) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      return value.toDateString() !== filter.toDateString();\n    },\n    dateBefore: (value, filter) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      return value.getTime() < filter.getTime();\n    },\n    dateAfter: (value, filter) => {\n      if (filter === undefined || filter === null) {\n        return true;\n      }\n      if (value === undefined || value === null) {\n        return false;\n      }\n      value.setHours(0, 0, 0, 0);\n      return value.getTime() > filter.getTime();\n    }\n  };\n  register(rule, fn) {\n    this.filters[rule] = fn;\n  }\n  static ɵfac = function FilterService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FilterService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FilterService,\n    factory: FilterService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Message service used in messages and toast components.\n * @group Service\n */\nclass MessageService {\n  messageSource = new Subject();\n  clearSource = new Subject();\n  messageObserver = this.messageSource.asObservable();\n  clearObserver = this.clearSource.asObservable();\n  /**\n   * Inserts single message.\n   * @param {ToastMessageOptions} message - Message to be added.\n   * @group Method\n   */\n  add(message) {\n    if (message) {\n      this.messageSource.next(message);\n    }\n  }\n  /**\n   * Inserts new messages.\n   * @param {Message[]} messages - Messages to be added.\n   * @group Method\n   */\n  addAll(messages) {\n    if (messages && messages.length) {\n      this.messageSource.next(messages);\n    }\n  }\n  /**\n   * Clears the message with the given key.\n   * @param {string} key - Key of the message to be cleared.\n   * @group Method\n   */\n  clear(key) {\n    this.clearSource.next(key || null);\n  }\n  static ɵfac = function MessageService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MessageService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessageService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass OverlayService {\n  clickSource = new Subject();\n  clickObservable = this.clickSource.asObservable();\n  add(event) {\n    if (event) {\n      this.clickSource.next(event);\n    }\n  }\n  static ɵfac = function OverlayService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OverlayService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OverlayService,\n    factory: OverlayService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass PrimeIcons {\n  static ADDRESS_BOOK = 'pi pi-address-book';\n  static ALIGN_CENTER = 'pi pi-align-center';\n  static ALIGN_JUSTIFY = 'pi pi-align-justify';\n  static ALIGN_LEFT = 'pi pi-align-left';\n  static ALIGN_RIGHT = 'pi pi-align-right';\n  static AMAZON = 'pi pi-amazon';\n  static ANDROID = 'pi pi-android';\n  static ANGLE_DOUBLE_DOWN = 'pi pi-angle-double-down';\n  static ANGLE_DOUBLE_LEFT = 'pi pi-angle-double-left';\n  static ANGLE_DOUBLE_RIGHT = 'pi pi-angle-double-right';\n  static ANGLE_DOUBLE_UP = 'pi pi-angle-double-up';\n  static ANGLE_DOWN = 'pi pi-angle-down';\n  static ANGLE_LEFT = 'pi pi-angle-left';\n  static ANGLE_RIGHT = 'pi pi-angle-right';\n  static ANGLE_UP = 'pi pi-angle-up';\n  static APPLE = 'pi pi-apple';\n  static ARROWS_ALT = 'pi pi-arrows-alt';\n  static ARROW_CIRCLE_DOWN = 'pi pi-arrow-circle-down';\n  static ARROW_CIRCLE_LEFT = 'pi pi-arrow-circle-left';\n  static ARROW_CIRCLE_RIGHT = 'pi pi-arrow-circle-right';\n  static ARROW_CIRCLE_UP = 'pi pi-arrow-circle-up';\n  static ARROW_DOWN = 'pi pi-arrow-down';\n  static ARROW_DOWN_LEFT = 'pi pi-arrow-down-left';\n  static ARROW_DOWN_LEFT_AND_ARROW_UP_RIGHT_TO_CENTER = 'pi pi-arrow-down-left-and-arrow-up-right-to-center';\n  static ARROW_DOWN_RIGHT = 'pi pi-arrow-down-right';\n  static ARROW_LEFT = 'pi pi-arrow-left';\n  static ARROW_RIGHT_ARROW_LEFT = 'pi pi-arrow-right-arrow-left';\n  static ARROW_RIGHT = 'pi pi-arrow-right';\n  static ARROW_UP = 'pi pi-arrow-up';\n  static ARROW_UP_LEFT = 'pi pi-arrow-up-left';\n  static ARROW_UP_RIGHT = 'pi pi-arrow-up-right';\n  static ARROW_UP_RIGHT_AND_ARROW_DOWN_LEFT_FROM_CENTER = 'pi pi-arrow-up-right-and-arrow-down-left-from-center';\n  static ARROWS_H = 'pi pi-arrows-h';\n  static ARROWS_V = 'pi pi-arrows-v';\n  static ASTERISK = 'pi pi-asterisk';\n  static AT = 'pi pi-at';\n  static BACKWARD = 'pi pi-backward';\n  static BAN = 'pi pi-ban';\n  static BARCODE = 'pi pi-barcode';\n  static BARS = 'pi pi-bars';\n  static BELL = 'pi pi-bell';\n  static BELL_SLASH = 'pi pi-bell-slash';\n  static BITCOIN = 'pi pi-bitcoin';\n  static BOLT = 'pi pi-bolt';\n  static BOOK = 'pi pi-book';\n  static BOOKMARK = 'pi pi-bookmark';\n  static BOOKMARK_FILL = 'pi pi-bookmark-fill';\n  static BOX = 'pi pi-box';\n  static BRIEFCASE = 'pi pi-briefcase';\n  static BUILDING = 'pi pi-building';\n  static BUILDING_COLUMNS = 'pi pi-building-columns';\n  static BULLSEYE = 'pi pi-bullseye';\n  static CALCULATOR = 'pi pi-calculator';\n  static CALENDAR = 'pi pi-calendar';\n  static CALENDAR_CLOCK = 'pi pi-calendar-clock';\n  static CALENDAR_MINUS = 'pi pi-calendar-minus';\n  static CALENDAR_PLUS = 'pi pi-calendar-plus';\n  static CALENDAR_TIMES = 'pi pi-calendar-times';\n  static CAMERA = 'pi pi-camera';\n  static CAR = 'pi pi-car';\n  static CARET_DOWN = 'pi pi-caret-down';\n  static CARET_LEFT = 'pi pi-caret-left';\n  static CARET_RIGHT = 'pi pi-caret-right';\n  static CARET_UP = 'pi pi-caret-up';\n  static CART_ARROW_DOWN = 'pi pi-cart-arrow-down';\n  static CART_MINUS = 'pi pi-cart-minus';\n  static CART_PLUS = 'pi pi-cart-plus';\n  static CHART_BAR = 'pi pi-chart-bar';\n  static CHART_LINE = 'pi pi-chart-line';\n  static CHART_PIE = 'pi pi-chart-pie';\n  static CHART_SCATTER = 'pi pi-chart-scatter';\n  static CHECK = 'pi pi-check';\n  static CHECK_CIRCLE = 'pi pi-check-circle';\n  static CHECK_SQUARE = 'pi pi-check-square';\n  static CHEVRON_CIRCLE_DOWN = 'pi pi-chevron-circle-down';\n  static CHEVRON_CIRCLE_LEFT = 'pi pi-chevron-circle-left';\n  static CHEVRON_CIRCLE_RIGHT = 'pi pi-chevron-circle-right';\n  static CHEVRON_CIRCLE_UP = 'pi pi-chevron-circle-up';\n  static CHEVRON_DOWN = 'pi pi-chevron-down';\n  static CHEVRON_LEFT = 'pi pi-chevron-left';\n  static CHEVRON_RIGHT = 'pi pi-chevron-right';\n  static CHEVRON_UP = 'pi pi-chevron-up';\n  static CIRCLE = 'pi pi-circle';\n  static CIRCLE_FILL = 'pi pi-circle-fill';\n  static CLIPBOARD = 'pi pi-clipboard';\n  static CLOCK = 'pi pi-clock';\n  static CLONE = 'pi pi-clone';\n  static CLOUD = 'pi pi-cloud';\n  static CLOUD_DOWNLOAD = 'pi pi-cloud-download';\n  static CLOUD_UPLOAD = 'pi pi-cloud-upload';\n  static CODE = 'pi pi-code';\n  static COG = 'pi pi-cog';\n  static COMMENT = 'pi pi-comment';\n  static COMMENTS = 'pi pi-comments';\n  static COMPASS = 'pi pi-compass';\n  static COPY = 'pi pi-copy';\n  static CREDIT_CARD = 'pi pi-credit-card';\n  static CROWN = 'pi pi-crown';\n  static DATABASE = 'pi pi-database';\n  static DESKTOP = 'pi pi-desktop';\n  static DELETE_LEFT = 'pi pi-delete-left';\n  static DIRECTIONS = 'pi pi-directions';\n  static DIRECTIONS_ALT = 'pi pi-directions-alt';\n  static DISCORD = 'pi pi-discord';\n  static DOLLAR = 'pi pi-dollar';\n  static DOWNLOAD = 'pi pi-download';\n  static EJECT = 'pi pi-eject';\n  static ELLIPSIS_H = 'pi pi-ellipsis-h';\n  static ELLIPSIS_V = 'pi pi-ellipsis-v';\n  static ENVELOPE = 'pi pi-envelope';\n  static EQUALS = 'pi pi-equals';\n  static ERASER = 'pi pi-eraser';\n  static ETHEREUM = 'pi pi-ethereum';\n  static EURO = 'pi pi-euro';\n  static EXCLAMATION_CIRCLE = 'pi pi-exclamation-circle';\n  static EXCLAMATION_TRIANGLE = 'pi pi-exclamation-triangle';\n  static EXPAND = 'pi pi-expand';\n  static EXTERNAL_LINK = 'pi pi-external-link';\n  static EYE = 'pi pi-eye';\n  static EYE_SLASH = 'pi pi-eye-slash';\n  static FACE_SMILE = 'pi pi-face-smile';\n  static FACEBOOK = 'pi pi-facebook';\n  static FAST_BACKWARD = 'pi pi-fast-backward';\n  static FAST_FORWARD = 'pi pi-fast-forward';\n  static FILE = 'pi pi-file';\n  static FILE_ARROW_UP = 'pi pi-file-arrow-up';\n  static FILE_CHECK = 'pi pi-file-check';\n  static FILE_EDIT = 'pi pi-file-edit';\n  static FILE_IMPORT = 'pi pi-file-import';\n  static FILE_PDF = 'pi pi-file-pdf';\n  static FILE_PLUS = 'pi pi-file-plus';\n  static FILE_EXCEL = 'pi pi-file-excel';\n  static FILE_EXPORT = 'pi pi-file-export';\n  static FILE_WORD = 'pi pi-file-word';\n  static FILTER = 'pi pi-filter';\n  static FILTER_FILL = 'pi pi-filter-fill';\n  static FILTER_SLASH = 'pi pi-filter-slash';\n  static FLAG = 'pi pi-flag';\n  static FLAG_FILL = 'pi pi-flag-fill';\n  static FOLDER = 'pi pi-folder';\n  static FOLDER_OPEN = 'pi pi-folder-open';\n  static FOLDER_PLUS = 'pi pi-folder-plus';\n  static FORWARD = 'pi pi-forward';\n  static GAUGE = 'pi pi-gauge';\n  static GIFT = 'pi pi-gift';\n  static GITHUB = 'pi pi-github';\n  static GLOBE = 'pi pi-globe';\n  static GOOGLE = 'pi pi-google';\n  static GRADUATION_CAP = 'pi pi-graduation-cap';\n  static HAMMER = 'pi pi-hammer';\n  static HASHTAG = 'pi pi-hashtag';\n  static HEADPHONES = 'pi pi-headphones';\n  static HEART = 'pi pi-heart';\n  static HEART_FILL = 'pi pi-heart-fill';\n  static HISTORY = 'pi pi-history';\n  static HOME = 'pi pi-home';\n  static HOURGLASS = 'pi pi-hourglass';\n  static ID_CARD = 'pi pi-id-card';\n  static IMAGE = 'pi pi-image';\n  static IMAGES = 'pi pi-images';\n  static INBOX = 'pi pi-inbox';\n  static INDIAN_RUPEE = 'pi pi-indian-rupee';\n  static INFO = 'pi pi-info';\n  static INFO_CIRCLE = 'pi pi-info-circle';\n  static INSTAGRAM = 'pi pi-instagram';\n  static KEY = 'pi pi-key';\n  static LANGUAGE = 'pi pi-language';\n  static LIGHTBULB = 'pi pi-lightbulb';\n  static LINK = 'pi pi-link';\n  static LINKEDIN = 'pi pi-linkedin';\n  static LIST = 'pi pi-list';\n  static LIST_CHECK = 'pi pi-list-check';\n  static LOCK = 'pi pi-lock';\n  static LOCK_OPEN = 'pi pi-lock-open';\n  static MAP = 'pi pi-map';\n  static MAP_MARKER = 'pi pi-map-marker';\n  static MARS = 'pi pi-mars';\n  static MEGAPHONE = 'pi pi-megaphone';\n  static MICROCHIP = 'pi pi-microchip';\n  static MICROCHIP_AI = 'pi pi-microchip-ai';\n  static MICROPHONE = 'pi pi-microphone';\n  static MICROSOFT = 'pi pi-microsoft';\n  static MINUS = 'pi pi-minus';\n  static MINUS_CIRCLE = 'pi pi-minus-circle';\n  static MOBILE = 'pi pi-mobile';\n  static MONEY_BILL = 'pi pi-money-bill';\n  static MOON = 'pi pi-moon';\n  static OBJECTS_COLUMN = 'pi pi-objects-column';\n  static PALETTE = 'pi pi-palette';\n  static PAPERCLIP = 'pi pi-paperclip';\n  static PAUSE = 'pi pi-pause';\n  static PAUSE_CIRCLE = 'pi pi-pause-circle';\n  static PAYPAL = 'pi pi-paypal';\n  static PEN_TO_SQUARE = 'pi pi-pen-to-square';\n  static PENCIL = 'pi pi-pencil';\n  static PERCENTAGE = 'pi pi-percentage';\n  static PHONE = 'pi pi-phone';\n  static PINTEREST = 'pi pi-pinterest';\n  static PLAY = 'pi pi-play';\n  static PLAY_CIRCLE = 'pi pi-play-circle';\n  static PLUS = 'pi pi-plus';\n  static PLUS_CIRCLE = 'pi pi-plus-circle';\n  static POUND = 'pi pi-pound';\n  static POWER_OFF = 'pi pi-power-off';\n  static PRIME = 'pi pi-prime';\n  static PRINT = 'pi pi-print';\n  static QRCODE = 'pi pi-qrcode';\n  static QUESTION = 'pi pi-question';\n  static QUESTION_CIRCLE = 'pi pi-question-circle';\n  static RECEIPT = 'pi pi-receipt';\n  static REDDIT = 'pi pi-reddit';\n  static REFRESH = 'pi pi-refresh';\n  static REPLAY = 'pi pi-replay';\n  static REPLY = 'pi pi-reply';\n  static SAVE = 'pi pi-save';\n  static SEARCH = 'pi pi-search';\n  static SEARCH_MINUS = 'pi pi-search-minus';\n  static SEARCH_PLUS = 'pi pi-search-plus';\n  static SEND = 'pi pi-send';\n  static SERVER = 'pi pi-server';\n  static SHARE_ALT = 'pi pi-share-alt';\n  static SHIELD = 'pi pi-shield';\n  static SHOP = 'pi pi-shop';\n  static SHOPPING_BAG = 'pi pi-shopping-bag';\n  static SHOPPING_CART = 'pi pi-shopping-cart';\n  static SIGN_IN = 'pi pi-sign-in';\n  static SIGN_OUT = 'pi pi-sign-out';\n  static SITEMAP = 'pi pi-sitemap';\n  static SLACK = 'pi pi-slack';\n  static SLIDERS_H = 'pi pi-sliders-h';\n  static SLIDERS_V = 'pi pi-sliders-v';\n  static SORT = 'pi pi-sort';\n  static SORT_ALPHA_DOWN = 'pi pi-sort-alpha-down';\n  static SORT_ALPHA_DOWN_ALT = 'pi pi-sort-alpha-down-alt';\n  static SORT_ALPHA_UP = 'pi pi-sort-alpha-up';\n  static SORT_ALPHA_UP_ALT = 'pi pi-sort-alpha-up-alt';\n  static SORT_ALT = 'pi pi-sort-alt';\n  static SORT_ALT_SLASH = 'pi pi-sort-alt-slash';\n  static SORT_AMOUNT_DOWN = 'pi pi-sort-amount-down';\n  static SORT_AMOUNT_DOWN_ALT = 'pi pi-sort-amount-down-alt';\n  static SORT_AMOUNT_UP = 'pi pi-sort-amount-up';\n  static SORT_AMOUNT_UP_ALT = 'pi pi-sort-amount-up-alt';\n  static SORT_DOWN = 'pi pi-sort-down';\n  static SORT_DOWN_FILL = 'pi pi-sort-down-fill';\n  static SORT_NUMERIC_DOWN = 'pi pi-sort-numeric-down';\n  static SORT_NUMERIC_DOWN_ALT = 'pi pi-sort-numeric-down-alt';\n  static SORT_NUMERIC_UP = 'pi pi-sort-numeric-up';\n  static SORT_NUMERIC_UP_ALT = 'pi pi-sort-numeric-up-alt';\n  static SORT_UP = 'pi pi-sort-up';\n  static SORT_UP_FILL = 'pi pi-sort-up-fill';\n  static SPARKLES = 'pi pi-sparkles';\n  static SPINNER = 'pi pi-spinner';\n  static SPINNER_DOTTED = 'pi pi-spinner-dotted';\n  static STAR = 'pi pi-star';\n  static STAR_FILL = 'pi pi-star-fill';\n  static STAR_HALF = 'pi pi-star-half';\n  static STAR_HALF_FILL = 'pi pi-star-half-fill';\n  static STEP_BACKWARD = 'pi pi-step-backward';\n  static STEP_BACKWARD_ALT = 'pi pi-step-backward-alt';\n  static STEP_FORWARD = 'pi pi-step-forward';\n  static STEP_FORWARD_ALT = 'pi pi-step-forward-alt';\n  static STOP = 'pi pi-stop';\n  static STOP_CIRCLE = 'pi pi-stop-circle';\n  static STOPWATCH = 'pi pi-stopwatch';\n  static SUN = 'pi pi-sun';\n  static SYNC = 'pi pi-sync';\n  static TABLE = 'pi pi-table';\n  static TABLET = 'pi pi-tablet';\n  static TAG = 'pi pi-tag';\n  static TAGS = 'pi pi-tags';\n  static TELEGRAM = 'pi pi-telegram';\n  static TH_LARGE = 'pi pi-th-large';\n  static THUMBS_DOWN = 'pi pi-thumbs-down';\n  static THUMBS_DOWN_FILL = 'pi pi-thumbs-down-fill';\n  static THUMBS_UP = 'pi pi-thumbs-up';\n  static THUMBS_UP_FILL = 'pi pi-thumbs-up-fill';\n  static THUMBTACK = 'pi pi-thumbtack';\n  static TICKET = 'pi pi-ticket';\n  static TIKTOK = 'pi pi-tiktok';\n  static TIMES = 'pi pi-times';\n  static TIMES_CIRCLE = 'pi pi-times-circle';\n  static TRASH = 'pi pi-trash';\n  static TROPHY = 'pi pi-trophy';\n  static TRUCK = 'pi pi-truck';\n  static TURKISH_LIRA = 'pi pi-turkish-lira';\n  static TWITCH = 'pi pi-twitch';\n  static TWITTER = 'pi pi-twitter';\n  static UNDO = 'pi pi-undo';\n  static UNLOCK = 'pi pi-unlock';\n  static UPLOAD = 'pi pi-upload';\n  static USER = 'pi pi-user';\n  static USER_EDIT = 'pi pi-user-edit';\n  static USER_MINUS = 'pi pi-user-minus';\n  static USER_PLUS = 'pi pi-user-plus';\n  static USERS = 'pi pi-users';\n  static VENUS = 'pi pi-venus';\n  static VERIFIED = 'pi pi-verified';\n  static VIDEO = 'pi pi-video';\n  static VIMEO = 'pi pi-vimeo';\n  static VOLUME_DOWN = 'pi pi-volume-down';\n  static VOLUME_OFF = 'pi pi-volume-off';\n  static VOLUME_UP = 'pi pi-volume-up';\n  static WALLET = 'pi pi-wallet';\n  static WAREHOUSE = 'pi pi-warehouse';\n  static WAVE_PULSE = 'pi pi-wave-pulse';\n  static WHATSAPP = 'pi pi-whatsapp';\n  static WIFI = 'pi pi-wifi';\n  static WINDOW_MAXIMIZE = 'pi pi-window-maximize';\n  static WINDOW_MINIMIZE = 'pi pi-window-minimize';\n  static WRENCH = 'pi pi-wrench';\n  static YOUTUBE = 'pi pi-youtube';\n}\nclass Header {\n  static ɵfac = function Header_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Header)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Header,\n    selectors: [[\"p-header\"]],\n    standalone: false,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function Header_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Header, [{\n    type: Component,\n    args: [{\n      selector: 'p-header',\n      template: '<ng-content></ng-content>',\n      standalone: false\n    }]\n  }], null, null);\n})();\nclass Footer {\n  static ɵfac = function Footer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Footer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Footer,\n    selectors: [[\"p-footer\"]],\n    standalone: false,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function Footer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Footer, [{\n    type: Component,\n    args: [{\n      selector: 'p-footer',\n      template: '<ng-content></ng-content>',\n      standalone: false\n    }]\n  }], null, null);\n})();\nclass PrimeTemplate {\n  template;\n  type;\n  name;\n  constructor(template) {\n    this.template = template;\n  }\n  getType() {\n    return this.name;\n  }\n  static ɵfac = function PrimeTemplate_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PrimeTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PrimeTemplate,\n    selectors: [[\"\", \"pTemplate\", \"\"]],\n    inputs: {\n      type: \"type\",\n      name: [0, \"pTemplate\", \"name\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PrimeTemplate, [{\n    type: Directive,\n    args: [{\n      selector: '[pTemplate]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], {\n    type: [{\n      type: Input\n    }],\n    name: [{\n      type: Input,\n      args: ['pTemplate']\n    }]\n  });\n})();\nclass SharedModule {\n  static ɵfac = function SharedModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SharedModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SharedModule,\n    declarations: [Header, Footer],\n    imports: [CommonModule, PrimeTemplate],\n    exports: [Header, Footer, PrimeTemplate]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PrimeTemplate],\n      exports: [Header, Footer, PrimeTemplate],\n      declarations: [Header, Footer]\n    }]\n  }], null, null);\n})();\nclass TranslationKeys {\n  static STARTS_WITH = 'startsWith';\n  static CONTAINS = 'contains';\n  static NOT_CONTAINS = 'notContains';\n  static ENDS_WITH = 'endsWith';\n  static EQUALS = 'equals';\n  static NOT_EQUALS = 'notEquals';\n  static NO_FILTER = 'noFilter';\n  static LT = 'lt';\n  static LTE = 'lte';\n  static GT = 'gt';\n  static GTE = 'gte';\n  static IS = 'is';\n  static IS_NOT = 'isNot';\n  static BEFORE = 'before';\n  static AFTER = 'after';\n  static CLEAR = 'clear';\n  static APPLY = 'apply';\n  static MATCH_ALL = 'matchAll';\n  static MATCH_ANY = 'matchAny';\n  static ADD_RULE = 'addRule';\n  static REMOVE_RULE = 'removeRule';\n  static ACCEPT = 'accept';\n  static REJECT = 'reject';\n  static CHOOSE = 'choose';\n  static UPLOAD = 'upload';\n  static CANCEL = 'cancel';\n  static PENDING = 'pending';\n  static FILE_SIZE_TYPES = 'fileSizeTypes';\n  static DAY_NAMES = 'dayNames';\n  static DAY_NAMES_SHORT = 'dayNamesShort';\n  static DAY_NAMES_MIN = 'dayNamesMin';\n  static MONTH_NAMES = 'monthNames';\n  static MONTH_NAMES_SHORT = 'monthNamesShort';\n  static FIRST_DAY_OF_WEEK = 'firstDayOfWeek';\n  static TODAY = 'today';\n  static WEEK_HEADER = 'weekHeader';\n  static WEAK = 'weak';\n  static MEDIUM = 'medium';\n  static STRONG = 'strong';\n  static PASSWORD_PROMPT = 'passwordPrompt';\n  static EMPTY_MESSAGE = 'emptyMessage';\n  static EMPTY_FILTER_MESSAGE = 'emptyFilterMessage';\n  static SHOW_FILTER_MENU = 'showFilterMenu';\n  static HIDE_FILTER_MENU = 'hideFilterMenu';\n  static SELECTION_MESSAGE = 'selectionMessage';\n  static ARIA = 'aria';\n  static SELECT_COLOR = 'selectColor';\n  static BROWSE_FILES = 'browseFiles';\n}\nclass TreeDragDropService {\n  dragStartSource = new Subject();\n  dragStopSource = new Subject();\n  dragStart$ = this.dragStartSource.asObservable();\n  dragStop$ = this.dragStopSource.asObservable();\n  startDrag(event) {\n    this.dragStartSource.next(event);\n  }\n  stopDrag(event) {\n    this.dragStopSource.next(event);\n  }\n  static ɵfac = function TreeDragDropService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TreeDragDropService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TreeDragDropService,\n    factory: TreeDragDropService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeDragDropService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmEventType, ConfirmationService, ContextMenuService, FilterMatchMode, FilterOperator, FilterService, Footer, Header, MessageService, OverlayService, PrimeIcons, PrimeTemplate, SharedModule, TranslationKeys, TreeDragDropService };\n","var rt=Object.defineProperty,st=Object.defineProperties;var nt=Object.getOwnPropertyDescriptors;var F=Object.getOwnPropertySymbols;var xe=Object.prototype.hasOwnProperty,be=Object.prototype.propertyIsEnumerable;var _e=(e,t,r)=>t in e?rt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,g=(e,t)=>{for(var r in t||(t={}))xe.call(t,r)&&_e(e,r,t[r]);if(F)for(var r of F(t))be.call(t,r)&&_e(e,r,t[r]);return e},$=(e,t)=>st(e,nt(t));var v=(e,t)=>{var r={};for(var s in e)xe.call(e,s)&&t.indexOf(s)<0&&(r[s]=e[s]);if(e!=null&&F)for(var s of F(e))t.indexOf(s)<0&&be.call(e,s)&&(r[s]=e[s]);return r};import{deepMerge as it}from\"@primeuix/utils/object\";function ke(...e){return it(...e)}import{deepMerge as $t}from\"@primeuix/utils/object\";import{EventBus as ot}from\"@primeuix/utils/eventbus\";var at=ot(),N=at;import{getKeyValue as lt,isArray as ct,isNotEmpty as mt,isNumber as se,isObject as $e,isString as P,matchRegex as J,toKebabCase as ut}from\"@primeuix/utils/object\";var k=/{([^}]*)}/g,ne=/(\\d+\\s+[\\+\\-\\*\\/]\\s+\\d+)/g,ie=/var\\([^)]+\\)/g;function oe(e){return P(e)?e.replace(/[A-Z]/g,(t,r)=>r===0?t:\".\"+t.toLowerCase()).toLowerCase():e}function Lt(e,t){ct(e)?e.push(...t||[]):$e(e)&&Object.assign(e,t)}function ve(e){return $e(e)&&e.hasOwnProperty(\"$value\")&&e.hasOwnProperty(\"$type\")?e.$value:e}function At(e,t=\"\"){return[\"opacity\",\"z-index\",\"line-height\",\"font-weight\",\"flex\",\"flex-grow\",\"flex-shrink\",\"order\"].some(s=>t.endsWith(s))?e:`${e}`.trim().split(\" \").map(a=>se(a)?`${a}px`:a).join(\" \")}function dt(e){return e.replaceAll(/ /g,\"\").replace(/[^\\w]/g,\"-\")}function Q(e=\"\",t=\"\"){return dt(`${P(e,!1)&&P(t,!1)?`${e}-`:e}${t}`)}function ae(e=\"\",t=\"\"){return`--${Q(e,t)}`}function gt(e=\"\"){let t=(e.match(/{/g)||[]).length,r=(e.match(/}/g)||[]).length;return(t+r)%2!==0}function Y(e,t=\"\",r=\"\",s=[],i){if(P(e)){let a=e.trim();if(gt(a))return;if(J(a,k)){let n=a.replaceAll(k,l=>{let c=l.replace(/{|}/g,\"\").split(\".\").filter(m=>!s.some(d=>J(m,d)));return`var(${ae(r,ut(c.join(\"-\")))}${mt(i)?`, ${i}`:\"\"})`});return J(n.replace(ie,\"0\"),ne)?`calc(${n})`:n}return a}else if(se(e))return e}function Dt(e={},t){if(P(t)){let r=t.trim();return J(r,k)?r.replaceAll(k,s=>lt(e,s.replace(/{|}/g,\"\"))):r}else if(se(t))return t}function Re(e,t,r){P(t,!1)&&e.push(`${t}:${r};`)}function C(e,t){return e?`${e}{${t}}`:\"\"}function le(e,t){if(e.indexOf(\"dt(\")===-1)return e;function r(n,l){let o=[],c=0,m=\"\",d=null,u=0;for(;c<=n.length;){let h=n[c];if((h==='\"'||h===\"'\"||h===\"`\")&&n[c-1]!==\"\\\\\"&&(d=d===h?null:h),!d&&(h===\"(\"&&u++,h===\")\"&&u--,(h===\",\"||c===n.length)&&u===0)){let f=m.trim();f.startsWith(\"dt(\")?o.push(le(f,l)):o.push(s(f)),m=\"\",c++;continue}h!==void 0&&(m+=h),c++}return o}function s(n){let l=n[0];if((l==='\"'||l===\"'\"||l===\"`\")&&n[n.length-1]===l)return n.slice(1,-1);let o=Number(n);return isNaN(o)?n:o}let i=[],a=[];for(let n=0;n<e.length;n++)if(e[n]===\"d\"&&e.slice(n,n+3)===\"dt(\")a.push(n),n+=2;else if(e[n]===\")\"&&a.length>0){let l=a.pop();a.length===0&&i.push([l,n])}if(!i.length)return e;for(let n=i.length-1;n>=0;n--){let[l,o]=i[n],c=e.slice(l+3,o),m=r(c,t),d=t(...m);e=e.slice(0,l)+d+e.slice(o+1)}return e}import{isEmpty as kt,isNotEmpty as _,isObject as ge,matchRegex as we,minifyCSS as Oe,resolve as ee}from\"@primeuix/utils/object\";function Te(e){return e.length===4?`#${e[1]}${e[1]}${e[2]}${e[2]}${e[3]}${e[3]}`:e}function Ne(e){let t=parseInt(e.substring(1),16),r=t>>16&255,s=t>>8&255,i=t&255;return{r,g:s,b:i}}function ht(e,t,r){return`#${e.toString(16).padStart(2,\"0\")}${t.toString(16).padStart(2,\"0\")}${r.toString(16).padStart(2,\"0\")}`}var D=(e,t,r)=>{e=Te(e),t=Te(t);let a=(r/100*2-1+1)/2,n=1-a,l=Ne(e),o=Ne(t),c=Math.round(l.r*a+o.r*n),m=Math.round(l.g*a+o.g*n),d=Math.round(l.b*a+o.b*n);return ht(c,m,d)};import{matchRegex as pt}from\"@primeuix/utils\";var ce=(e,t)=>D(\"#000000\",e,t);var me=(e,t)=>D(\"#ffffff\",e,t);var Ce=[50,100,200,300,400,500,600,700,800,900,950],ft=e=>{if(pt(e,k)){let t=e.replace(/{|}/g,\"\");return Ce.reduce((r,s)=>(r[s]=`{${t}.${s}}`,r),{})}return typeof e==\"string\"?Ce.reduce((t,r,s)=>(t[r]=s<=5?me(e,(5-s)*19):ce(e,(s-5)*15),t),{}):e};import{resolve as Ee}from\"@primeuix/utils\";import{isEmpty as yt,matchRegex as St}from\"@primeuix/utils/object\";var rr=e=>{var a;let t=S.getTheme(),r=ue(t,e,void 0,\"variable\"),s=(a=r==null?void 0:r.match(/--[\\w-]+/g))==null?void 0:a[0],i=ue(t,e,void 0,\"value\");return{name:s,variable:r,value:i}},E=(...e)=>ue(S.getTheme(),...e),ue=(e={},t,r,s)=>{if(t){let{variable:i,options:a}=S.defaults||{},{prefix:n,transform:l}=(e==null?void 0:e.options)||a||{},o=St(t,k)?t:`{${t}}`;return s===\"value\"||yt(s)&&l===\"strict\"?S.getTokenValue(t):Y(o,void 0,n,[i.excludedKeyRegex],r)}return\"\"};function ar(e,...t){if(e instanceof Array){let r=e.reduce((s,i,a)=>{var n;return s+i+((n=Ee(t[a],{dt:E}))!=null?n:\"\")},\"\");return le(r,E)}return Ee(e,{dt:E})}import{mergeKeys as Pe}from\"@primeuix/utils/object\";var w=(e={})=>{let{preset:t,options:r}=e;return{preset(s){return t=t?Pe(t,s):s,this},options(s){return r=r?g(g({},r),s):s,this},primaryPalette(s){let{semantic:i}=t||{};return t=$(g({},t),{semantic:$(g({},i),{primary:s})}),this},surfacePalette(s){var o,c;let{semantic:i}=t||{},a=s&&Object.hasOwn(s,\"light\")?s.light:s,n=s&&Object.hasOwn(s,\"dark\")?s.dark:s,l={colorScheme:{light:g(g({},(o=i==null?void 0:i.colorScheme)==null?void 0:o.light),!!a&&{surface:a}),dark:g(g({},(c=i==null?void 0:i.colorScheme)==null?void 0:c.dark),!!n&&{surface:n})}};return t=$(g({},t),{semantic:g(g({},i),l)}),this},define({useDefaultPreset:s=!1,useDefaultOptions:i=!1}={}){return{preset:s?S.getPreset():t,options:i?S.getOptions():r}},update({mergePresets:s=!0,mergeOptions:i=!0}={}){let a={preset:s?Pe(S.getPreset(),t):t,options:i?g(g({},S.getOptions()),r):r};return S.setTheme(a),a},use(s){let i=this.define(s);return S.setTheme(i),i}}};import{isObject as _t,matchRegex as xt,toKebabCase as bt}from\"@primeuix/utils/object\";function de(e,t={}){let r=S.defaults.variable,{prefix:s=r.prefix,selector:i=r.selector,excludedKeyRegex:a=r.excludedKeyRegex}=t,n=[],l=[],o=[{node:e,path:s}];for(;o.length;){let{node:m,path:d}=o.pop();for(let u in m){let h=m[u],f=ve(h),p=xt(u,a)?Q(d):Q(d,bt(u));if(_t(f))o.push({node:f,path:p});else{let y=ae(p),R=Y(f,p,s,[a]);Re(l,y,R);let T=p;s&&T.startsWith(s+\"-\")&&(T=T.slice(s.length+1)),n.push(T.replace(/-/g,\".\"))}}}let c=l.join(\"\");return{value:l,tokens:n,declarations:c,css:C(i,c)}}var b={regex:{rules:{class:{pattern:/^\\.([a-zA-Z][\\w-]*)$/,resolve(e){return{type:\"class\",selector:e,matched:this.pattern.test(e.trim())}}},attr:{pattern:/^\\[(.*)\\]$/,resolve(e){return{type:\"attr\",selector:`:root${e}`,matched:this.pattern.test(e.trim())}}},media:{pattern:/^@media (.*)$/,resolve(e){return{type:\"media\",selector:e,matched:this.pattern.test(e.trim())}}},system:{pattern:/^system$/,resolve(e){return{type:\"system\",selector:\"@media (prefers-color-scheme: dark)\",matched:this.pattern.test(e.trim())}}},custom:{resolve(e){return{type:\"custom\",selector:e,matched:!0}}}},resolve(e){let t=Object.keys(this.rules).filter(r=>r!==\"custom\").map(r=>this.rules[r]);return[e].flat().map(r=>{var s;return(s=t.map(i=>i.resolve(r)).find(i=>i.matched))!=null?s:this.rules.custom.resolve(r)})}},_toVariables(e,t){return de(e,{prefix:t==null?void 0:t.prefix})},getCommon({name:e=\"\",theme:t={},params:r,set:s,defaults:i}){var R,T,j,O,M,z,V;let{preset:a,options:n}=t,l,o,c,m,d,u,h;if(_(a)&&n.transform!==\"strict\"){let{primitive:L,semantic:te,extend:re}=a,f=te||{},{colorScheme:K}=f,A=v(f,[\"colorScheme\"]),x=re||{},{colorScheme:X}=x,G=v(x,[\"colorScheme\"]),p=K||{},{dark:U}=p,B=v(p,[\"dark\"]),y=X||{},{dark:I}=y,H=v(y,[\"dark\"]),W=_(L)?this._toVariables({primitive:L},n):{},q=_(A)?this._toVariables({semantic:A},n):{},Z=_(B)?this._toVariables({light:B},n):{},pe=_(U)?this._toVariables({dark:U},n):{},fe=_(G)?this._toVariables({semantic:G},n):{},ye=_(H)?this._toVariables({light:H},n):{},Se=_(I)?this._toVariables({dark:I},n):{},[Me,ze]=[(R=W.declarations)!=null?R:\"\",W.tokens],[Ke,Xe]=[(T=q.declarations)!=null?T:\"\",q.tokens||[]],[Ge,Ue]=[(j=Z.declarations)!=null?j:\"\",Z.tokens||[]],[Be,Ie]=[(O=pe.declarations)!=null?O:\"\",pe.tokens||[]],[He,We]=[(M=fe.declarations)!=null?M:\"\",fe.tokens||[]],[qe,Ze]=[(z=ye.declarations)!=null?z:\"\",ye.tokens||[]],[Fe,Je]=[(V=Se.declarations)!=null?V:\"\",Se.tokens||[]];l=this.transformCSS(e,Me,\"light\",\"variable\",n,s,i),o=ze;let Qe=this.transformCSS(e,`${Ke}${Ge}`,\"light\",\"variable\",n,s,i),Ye=this.transformCSS(e,`${Be}`,\"dark\",\"variable\",n,s,i);c=`${Qe}${Ye}`,m=[...new Set([...Xe,...Ue,...Ie])];let et=this.transformCSS(e,`${He}${qe}color-scheme:light`,\"light\",\"variable\",n,s,i),tt=this.transformCSS(e,`${Fe}color-scheme:dark`,\"dark\",\"variable\",n,s,i);d=`${et}${tt}`,u=[...new Set([...We,...Ze,...Je])],h=ee(a.css,{dt:E})}return{primitive:{css:l,tokens:o},semantic:{css:c,tokens:m},global:{css:d,tokens:u},style:h}},getPreset({name:e=\"\",preset:t={},options:r,params:s,set:i,defaults:a,selector:n}){var f,x,p;let l,o,c;if(_(t)&&r.transform!==\"strict\"){let y=e.replace(\"-directive\",\"\"),m=t,{colorScheme:R,extend:T,css:j}=m,O=v(m,[\"colorScheme\",\"extend\",\"css\"]),d=T||{},{colorScheme:M}=d,z=v(d,[\"colorScheme\"]),u=R||{},{dark:V}=u,L=v(u,[\"dark\"]),h=M||{},{dark:te}=h,re=v(h,[\"dark\"]),K=_(O)?this._toVariables({[y]:g(g({},O),z)},r):{},A=_(L)?this._toVariables({[y]:g(g({},L),re)},r):{},X=_(V)?this._toVariables({[y]:g(g({},V),te)},r):{},[G,U]=[(f=K.declarations)!=null?f:\"\",K.tokens||[]],[B,I]=[(x=A.declarations)!=null?x:\"\",A.tokens||[]],[H,W]=[(p=X.declarations)!=null?p:\"\",X.tokens||[]],q=this.transformCSS(y,`${G}${B}`,\"light\",\"variable\",r,i,a,n),Z=this.transformCSS(y,H,\"dark\",\"variable\",r,i,a,n);l=`${q}${Z}`,o=[...new Set([...U,...I,...W])],c=ee(j,{dt:E})}return{css:l,tokens:o,style:c}},getPresetC({name:e=\"\",theme:t={},params:r,set:s,defaults:i}){var o;let{preset:a,options:n}=t,l=(o=a==null?void 0:a.components)==null?void 0:o[e];return this.getPreset({name:e,preset:l,options:n,params:r,set:s,defaults:i})},getPresetD({name:e=\"\",theme:t={},params:r,set:s,defaults:i}){var c,m;let a=e.replace(\"-directive\",\"\"),{preset:n,options:l}=t,o=((c=n==null?void 0:n.components)==null?void 0:c[a])||((m=n==null?void 0:n.directives)==null?void 0:m[a]);return this.getPreset({name:a,preset:o,options:l,params:r,set:s,defaults:i})},applyDarkColorScheme(e){return!(e.darkModeSelector===\"none\"||e.darkModeSelector===!1)},getColorSchemeOption(e,t){var r;return this.applyDarkColorScheme(e)?this.regex.resolve(e.darkModeSelector===!0?t.options.darkModeSelector:(r=e.darkModeSelector)!=null?r:t.options.darkModeSelector):[]},getLayerOrder(e,t={},r,s){let{cssLayer:i}=t;return i?`@layer ${ee(i.order||i.name||\"primeui\",r)}`:\"\"},getCommonStyleSheet({name:e=\"\",theme:t={},params:r,props:s={},set:i,defaults:a}){let n=this.getCommon({name:e,theme:t,params:r,set:i,defaults:a}),l=Object.entries(s).reduce((o,[c,m])=>o.push(`${c}=\"${m}\"`)&&o,[]).join(\" \");return Object.entries(n||{}).reduce((o,[c,m])=>{if(ge(m)&&Object.hasOwn(m,\"css\")){let d=Oe(m.css),u=`${c}-variables`;o.push(`<style type=\"text/css\" data-primevue-style-id=\"${u}\" ${l}>${d}</style>`)}return o},[]).join(\"\")},getStyleSheet({name:e=\"\",theme:t={},params:r,props:s={},set:i,defaults:a}){var c;let n={name:e,theme:t,params:r,set:i,defaults:a},l=(c=e.includes(\"-directive\")?this.getPresetD(n):this.getPresetC(n))==null?void 0:c.css,o=Object.entries(s).reduce((m,[d,u])=>m.push(`${d}=\"${u}\"`)&&m,[]).join(\" \");return l?`<style type=\"text/css\" data-primevue-style-id=\"${e}-variables\" ${o}>${Oe(l)}</style>`:\"\"},createTokens(e={},t,r=\"\",s=\"\",i={}){let a=function(l,o={},c=[]){if(c.includes(this.path))return console.warn(`Circular reference detected at ${this.path}`),{colorScheme:l,path:this.path,paths:o,value:void 0};c.push(this.path),o.name=this.path,o.binding||(o.binding={});let m=this.value;if(typeof this.value==\"string\"&&k.test(this.value)){let u=this.value.trim().replace(k,h=>{var y;let f=h.slice(1,-1),x=this.tokens[f];if(!x)return console.warn(`Token not found for path: ${f}`),\"__UNRESOLVED__\";let p=x.computed(l,o,c);return Array.isArray(p)&&p.length===2?`light-dark(${p[0].value},${p[1].value})`:(y=p==null?void 0:p.value)!=null?y:\"__UNRESOLVED__\"});m=ne.test(u.replace(ie,\"0\"))?`calc(${u})`:u}return kt(o.binding)&&delete o.binding,c.pop(),{colorScheme:l,path:this.path,paths:o,value:m.includes(\"__UNRESOLVED__\")?void 0:m}},n=(l,o,c)=>{Object.entries(l).forEach(([m,d])=>{let u=we(m,t.variable.excludedKeyRegex)?o:o?`${o}.${oe(m)}`:oe(m),h=c?`${c}.${m}`:m;ge(d)?n(d,u,h):(i[u]||(i[u]={paths:[],computed:(f,x={},p=[])=>{if(i[u].paths.length===1)return i[u].paths[0].computed(i[u].paths[0].scheme,x.binding,p);if(f&&f!==\"none\")for(let y=0;y<i[u].paths.length;y++){let R=i[u].paths[y];if(R.scheme===f)return R.computed(f,x.binding,p)}return i[u].paths.map(y=>y.computed(y.scheme,x[y.scheme],p))}}),i[u].paths.push({path:h,value:d,scheme:h.includes(\"colorScheme.light\")?\"light\":h.includes(\"colorScheme.dark\")?\"dark\":\"none\",computed:a,tokens:i}))})};return n(e,r,s),i},getTokenValue(e,t,r){var l;let i=(o=>o.split(\".\").filter(m=>!we(m.toLowerCase(),r.variable.excludedKeyRegex)).join(\".\"))(t),a=t.includes(\"colorScheme.light\")?\"light\":t.includes(\"colorScheme.dark\")?\"dark\":void 0,n=[(l=e[i])==null?void 0:l.computed(a)].flat().filter(o=>o);return n.length===1?n[0].value:n.reduce((o={},c)=>{let u=c,{colorScheme:m}=u,d=v(u,[\"colorScheme\"]);return o[m]=d,o},void 0)},getSelectorRule(e,t,r,s){return r===\"class\"||r===\"attr\"?C(_(t)?`${e}${t},${e} ${t}`:e,s):C(e,C(t!=null?t:\":root\",s))},transformCSS(e,t,r,s,i={},a,n,l){if(_(t)){let{cssLayer:o}=i;if(s!==\"style\"){let c=this.getColorSchemeOption(i,n);t=r===\"dark\"?c.reduce((m,{type:d,selector:u})=>(_(u)&&(m+=u.includes(\"[CSS]\")?u.replace(\"[CSS]\",t):this.getSelectorRule(u,l,d,t)),m),\"\"):C(l!=null?l:\":root\",t)}if(o){let c={name:\"primeui\",order:\"primeui\"};ge(o)&&(c.name=ee(o.name,{name:e,type:s})),_(c.name)&&(t=C(`@layer ${c.name}`,t),a==null||a.layerNames(c.name))}return t}return\"\"}};var S={defaults:{variable:{prefix:\"p\",selector:\":root\",excludedKeyRegex:/^(primitive|semantic|components|directives|variables|colorscheme|light|dark|common|root|states|extend|css)$/gi},options:{prefix:\"p\",darkModeSelector:\"system\",cssLayer:!1}},_theme:void 0,_layerNames:new Set,_loadedStyleNames:new Set,_loadingStyles:new Set,_tokens:{},update(e={}){let{theme:t}=e;t&&(this._theme=$(g({},t),{options:g(g({},this.defaults.options),t.options)}),this._tokens=b.createTokens(this.preset,this.defaults),this.clearLoadedStyleNames())},get theme(){return this._theme},get preset(){var e;return((e=this.theme)==null?void 0:e.preset)||{}},get options(){var e;return((e=this.theme)==null?void 0:e.options)||{}},get tokens(){return this._tokens},getTheme(){return this.theme},setTheme(e){this.update({theme:e}),N.emit(\"theme:change\",e)},getPreset(){return this.preset},setPreset(e){this._theme=$(g({},this.theme),{preset:e}),this._tokens=b.createTokens(e,this.defaults),this.clearLoadedStyleNames(),N.emit(\"preset:change\",e),N.emit(\"theme:change\",this.theme)},getOptions(){return this.options},setOptions(e){this._theme=$(g({},this.theme),{options:e}),this.clearLoadedStyleNames(),N.emit(\"options:change\",e),N.emit(\"theme:change\",this.theme)},getLayerNames(){return[...this._layerNames]},setLayerNames(e){this._layerNames.add(e)},getLoadedStyleNames(){return this._loadedStyleNames},isStyleNameLoaded(e){return this._loadedStyleNames.has(e)},setLoadedStyleName(e){this._loadedStyleNames.add(e)},deleteLoadedStyleName(e){this._loadedStyleNames.delete(e)},clearLoadedStyleNames(){this._loadedStyleNames.clear()},getTokenValue(e){return b.getTokenValue(this.tokens,e,this.defaults)},getCommon(e=\"\",t){return b.getCommon({name:e,theme:this.theme,params:t,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}})},getComponent(e=\"\",t){let r={name:e,theme:this.theme,params:t,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}};return b.getPresetC(r)},getDirective(e=\"\",t){let r={name:e,theme:this.theme,params:t,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}};return b.getPresetD(r)},getCustomPreset(e=\"\",t,r,s){let i={name:e,preset:t,options:this.options,selector:r,params:s,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}};return b.getPreset(i)},getLayerOrderCSS(e=\"\"){return b.getLayerOrder(e,this.options,{names:this.getLayerNames()},this.defaults)},transformCSS(e=\"\",t,r=\"style\",s){return b.transformCSS(e,t,s,r,this.options,{layerNames:this.setLayerNames.bind(this)},this.defaults)},getCommonStyleSheet(e=\"\",t,r={}){return b.getCommonStyleSheet({name:e,theme:this.theme,params:t,props:r,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}})},getStyleSheet(e,t,r={}){return b.getStyleSheet({name:e,theme:this.theme,params:t,props:r,defaults:this.defaults,set:{layerNames:this.setLayerNames.bind(this)}})},onStyleMounted(e){this._loadingStyles.add(e)},onStyleUpdated(e){this._loadingStyles.add(e)},onStyleLoaded(e,{name:t}){this._loadingStyles.size&&(this._loadingStyles.delete(t),N.emit(`theme:${t}:load`,e),!this._loadingStyles.size&&N.emit(\"theme:load\"))}};function Ve(...e){let t=$t(S.getPreset(),...e);return S.setPreset(t),t}function Le(e){return w().primaryPalette(e).update().preset}function Ae(e){return w().surfacePalette(e).update().preset}import{deepMerge as vt}from\"@primeuix/utils/object\";function De(...e){let t=vt(...e);return S.setPreset(t),t}function je(e){return w(e).update({mergePresets:!1})}import{createStyleMarkup as Rt,isNotEmpty as Tt}from\"@primeuix/utils\";var he=class{constructor({attrs:t}={}){this._styles=new Map,this._attrs=t||{}}get(t){return this._styles.get(t)}has(t){return this._styles.has(t)}delete(t){this._styles.delete(t)}clear(){this._styles.clear()}add(t,r){if(Tt(r)){let s={name:t,css:r,attrs:this._attrs,markup:Rt(r,this._attrs)};this._styles.set(t,$(g({},s),{element:this.createStyleElement(s)}))}}update(){}getStyles(){return this._styles}getAllCSS(){return[...this._styles.values()].map(t=>t.css).filter(String)}getAllMarkup(){return[...this._styles.values()].map(t=>t.markup).filter(String)}getAllElements(){return[...this._styles.values()].map(t=>t.element)}createStyleElement(t={}){}},Nt=he;export{rr as $dt,w as $t,ne as CALC_REGEX,k as EXPR_REGEX,Nt as StyleSheet,S as Theme,N as ThemeService,b as ThemeUtils,ie as VAR_REGEX,ar as css,ke as definePreset,E as dt,ue as dtwt,le as evaluateDtExpressions,Dt as getComputedValue,C as getRule,ae as getVariableName,Y as getVariableValue,gt as hasOddBraces,Lt as merge,D as mix,ft as palette,Re as setProperty,ce as shade,me as tint,dt as toNormalizePrefix,Q as toNormalizeVariable,oe as toTokenKey,At as toUnit,ve as toValue,de as toVariables,Ve as updatePreset,Le as updatePrimaryPalette,Ae as updateSurfacePalette,De as usePreset,je as useTheme};\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\nimport { setAttribute, setAttributes } from '@primeuix/utils';\nlet _id = 0;\nclass UseStyle {\n  document = inject(DOCUMENT);\n  use(css, options = {}) {\n    let isLoaded = false;\n    let cssRef = css;\n    let styleRef = null;\n    const {\n      immediate = true,\n      manual = false,\n      name = `style_${++_id}`,\n      id = undefined,\n      media = undefined,\n      nonce = undefined,\n      first = false,\n      props = {}\n    } = options;\n    if (!this.document) return;\n    styleRef = this.document.querySelector(`style[data-primeng-style-id=\"${name}\"]`) || id && this.document.getElementById(id) || this.document.createElement('style');\n    if (!styleRef.isConnected) {\n      cssRef = css;\n      const HEAD = this.document.head;\n      setAttribute(styleRef, 'nonce', nonce);\n      first && HEAD.firstChild ? HEAD.insertBefore(styleRef, HEAD.firstChild) : HEAD.appendChild(styleRef);\n      setAttributes(styleRef, {\n        type: 'text/css',\n        media,\n        nonce,\n        'data-primeng-style-id': name\n      });\n    }\n    if (styleRef.textContent !== cssRef) {\n      styleRef.textContent = cssRef;\n    }\n    return {\n      id,\n      name,\n      el: styleRef,\n      css: cssRef\n    };\n  }\n  static ɵfac = function UseStyle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UseStyle)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UseStyle,\n    factory: UseStyle.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UseStyle, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UseStyle };\n","import * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\nimport { css as css$1, dt, Theme } from '@primeuix/styled';\nimport { style } from '@primeuix/styles/base';\nimport { resolve, minifyCSS } from '@primeuix/utils';\nimport { UseStyle } from 'primeng/usestyle';\nvar base = {\n  _loadedStyleNames: new Set(),\n  getLoadedStyleNames() {\n    return this._loadedStyleNames;\n  },\n  isStyleNameLoaded(name) {\n    return this._loadedStyleNames.has(name);\n  },\n  setLoadedStyleName(name) {\n    this._loadedStyleNames.add(name);\n  },\n  deleteLoadedStyleName(name) {\n    this._loadedStyleNames.delete(name);\n  },\n  clearLoadedStyleNames() {\n    this._loadedStyleNames.clear();\n  }\n};\nconst css = /*css*/`\n.p-hidden-accessible {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n.p-hidden-accessible input,\n.p-hidden-accessible select {\n    transform: scale(0);\n}\n\n.p-overflow-hidden {\n    overflow: hidden;\n    padding-right: dt('scrollbar.width');\n}\n`;\nclass BaseStyle {\n  name = 'base';\n  useStyle = inject(UseStyle);\n  theme = undefined;\n  css = undefined;\n  classes = {};\n  inlineStyles = {};\n  load = (style, options = {}, transform = cs => cs) => {\n    const computedStyle = transform(css$1`${resolve(style, {\n      dt\n    })}`);\n    return computedStyle ? this.useStyle.use(minifyCSS(computedStyle), {\n      name: this.name,\n      ...options\n    }) : {};\n  };\n  loadCSS = (options = {}) => {\n    return this.load(this.css, options);\n  };\n  loadTheme = (options = {}, style = '') => {\n    return this.load(this.theme, options, (computedStyle = '') => Theme.transformCSS(options.name || this.name, `${computedStyle}${css$1`${style}`}`));\n  };\n  loadGlobalCSS = (options = {}) => {\n    return this.load(css, options);\n  };\n  loadGlobalTheme = (options = {}, style$1 = '') => {\n    return this.load(style, options, (computedStyle = '') => Theme.transformCSS(options.name || this.name, `${computedStyle}${css$1`${style$1}`}`));\n  };\n  getCommonTheme = params => {\n    return Theme.getCommon(this.name, params);\n  };\n  getComponentTheme = params => {\n    return Theme.getComponent(this.name, params);\n  };\n  getDirectiveTheme = params => {\n    return Theme.getDirective(this.name, params);\n  };\n  getPresetTheme = (preset, selector, params) => {\n    return Theme.getCustomPreset(this.name, preset, selector, params);\n  };\n  getLayerOrderThemeCSS = () => {\n    return Theme.getLayerOrderCSS(this.name);\n  };\n  getStyleSheet = (extendedCSS = '', props = {}) => {\n    if (this.css) {\n      const _css = resolve(this.css, {\n        dt\n      });\n      const _style = minifyCSS(css$1`${_css}${extendedCSS}`);\n      const _props = Object.entries(props).reduce((acc, [k, v]) => acc.push(`${k}=\"${v}\"`) && acc, []).join(' ');\n      return `<style type=\"text/css\" data-primeng-style-id=\"${this.name}\" ${_props}>${_style}</style>`;\n    }\n    return '';\n  };\n  getCommonThemeStyleSheet = (params, props = {}) => {\n    return Theme.getCommonStyleSheet(this.name, params, props);\n  };\n  getThemeStyleSheet = (params, props = {}) => {\n    let css = [Theme.getStyleSheet(this.name, params, props)];\n    if (this.theme) {\n      const name = this.name === 'base' ? 'global-style' : `${this.name}-style`;\n      const _css = css$1`${resolve(this.theme, {\n        dt\n      })}`;\n      const _style = minifyCSS(Theme.transformCSS(name, _css));\n      const _props = Object.entries(props).reduce((acc, [k, v]) => acc.push(`${k}=\"${v}\"`) && acc, []).join(' ');\n      css.push(`<style type=\"text/css\" data-primeng-style-id=\"${name}\" ${_props}>${_style}</style>`);\n    }\n    return css.join('');\n  };\n  static ɵfac = function BaseStyle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BaseStyle)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BaseStyle,\n    factory: BaseStyle.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseStyle, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { base as Base, BaseStyle };\n","import * as i0 from '@angular/core';\nimport { signal, inject, effect, untracked, Injectable, PLATFORM_ID, InjectionToken, provideAppInitializer, makeEnvironmentProviders } from '@angular/core';\nimport { FilterMatchMode } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { ThemeService, Theme } from '@primeuix/styled';\nimport { BaseStyle } from 'primeng/base';\nclass ThemeProvider {\n  // @todo define type for theme\n  theme = signal(undefined, ...(ngDevMode ? [{\n    debugName: \"theme\"\n  }] : []));\n  csp = signal({\n    nonce: undefined\n  }, ...(ngDevMode ? [{\n    debugName: \"csp\"\n  }] : []));\n  isThemeChanged = false;\n  document = inject(DOCUMENT);\n  baseStyle = inject(BaseStyle);\n  constructor() {\n    effect(() => {\n      ThemeService.on('theme:change', newTheme => {\n        untracked(() => {\n          this.isThemeChanged = true;\n          this.theme.set(newTheme);\n          // this.onThemeChange(this.theme());\n        });\n      });\n    });\n    effect(() => {\n      const themeValue = this.theme();\n      if (this.document && themeValue) {\n        if (!this.isThemeChanged) {\n          this.onThemeChange(themeValue);\n        }\n        this.isThemeChanged = false;\n      }\n    });\n  }\n  ngOnDestroy() {\n    Theme.clearLoadedStyleNames();\n    ThemeService.clear();\n  }\n  onThemeChange(value) {\n    Theme.setTheme(value);\n    if (this.document) {\n      this.loadCommonTheme();\n    }\n  }\n  loadCommonTheme() {\n    if (this.theme() === 'none') return;\n    // common\n    if (!Theme.isStyleNameLoaded('common')) {\n      const {\n        primitive,\n        semantic,\n        global,\n        style\n      } = this.baseStyle.getCommonTheme?.() || {};\n      const styleOptions = {\n        nonce: this.csp?.()?.nonce\n      };\n      this.baseStyle.load(primitive?.css, {\n        name: 'primitive-variables',\n        ...styleOptions\n      });\n      this.baseStyle.load(semantic?.css, {\n        name: 'semantic-variables',\n        ...styleOptions\n      });\n      this.baseStyle.load(global?.css, {\n        name: 'global-variables',\n        ...styleOptions\n      });\n      this.baseStyle.loadGlobalTheme({\n        name: 'global-style',\n        ...styleOptions\n      }, style);\n      Theme.setLoadedStyleName('common');\n    }\n  }\n  setThemeConfig(config) {\n    const {\n      theme,\n      csp\n    } = config || {};\n    if (theme) this.theme.set(theme);\n    if (csp) this.csp.set(csp);\n  }\n  static ɵfac = function ThemeProvider_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ThemeProvider)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ThemeProvider,\n    factory: ThemeProvider.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeProvider, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nclass PrimeNG extends ThemeProvider {\n  ripple = signal(false, ...(ngDevMode ? [{\n    debugName: \"ripple\"\n  }] : []));\n  platformId = inject(PLATFORM_ID);\n  /**\n   * @deprecated Since v20. Use `inputVariant` instead.\n   */\n  inputStyle = signal(null, ...(ngDevMode ? [{\n    debugName: \"inputStyle\"\n  }] : []));\n  inputVariant = signal(null, ...(ngDevMode ? [{\n    debugName: \"inputVariant\"\n  }] : []));\n  overlayAppendTo = signal('self', ...(ngDevMode ? [{\n    debugName: \"overlayAppendTo\"\n  }] : []));\n  overlayOptions = {};\n  csp = signal({\n    nonce: undefined\n  }, ...(ngDevMode ? [{\n    debugName: \"csp\"\n  }] : []));\n  filterMatchModeOptions = {\n    text: [FilterMatchMode.STARTS_WITH, FilterMatchMode.CONTAINS, FilterMatchMode.NOT_CONTAINS, FilterMatchMode.ENDS_WITH, FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS],\n    numeric: [FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS, FilterMatchMode.LESS_THAN, FilterMatchMode.LESS_THAN_OR_EQUAL_TO, FilterMatchMode.GREATER_THAN, FilterMatchMode.GREATER_THAN_OR_EQUAL_TO],\n    date: [FilterMatchMode.DATE_IS, FilterMatchMode.DATE_IS_NOT, FilterMatchMode.DATE_BEFORE, FilterMatchMode.DATE_AFTER]\n  };\n  translation = {\n    startsWith: 'Starts with',\n    contains: 'Contains',\n    notContains: 'Not contains',\n    endsWith: 'Ends with',\n    equals: 'Equals',\n    notEquals: 'Not equals',\n    noFilter: 'No Filter',\n    lt: 'Less than',\n    lte: 'Less than or equal to',\n    gt: 'Greater than',\n    gte: 'Greater than or equal to',\n    is: 'Is',\n    isNot: 'Is not',\n    before: 'Before',\n    after: 'After',\n    dateIs: 'Date is',\n    dateIsNot: 'Date is not',\n    dateBefore: 'Date is before',\n    dateAfter: 'Date is after',\n    clear: 'Clear',\n    apply: 'Apply',\n    matchAll: 'Match All',\n    matchAny: 'Match Any',\n    addRule: 'Add Rule',\n    removeRule: 'Remove Rule',\n    accept: 'Yes',\n    reject: 'No',\n    choose: 'Choose',\n    completed: 'Completed',\n    upload: 'Upload',\n    cancel: 'Cancel',\n    pending: 'Pending',\n    fileSizeTypes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    chooseYear: 'Choose Year',\n    chooseMonth: 'Choose Month',\n    chooseDate: 'Choose Date',\n    prevDecade: 'Previous Decade',\n    nextDecade: 'Next Decade',\n    prevYear: 'Previous Year',\n    nextYear: 'Next Year',\n    prevMonth: 'Previous Month',\n    nextMonth: 'Next Month',\n    prevHour: 'Previous Hour',\n    nextHour: 'Next Hour',\n    prevMinute: 'Previous Minute',\n    nextMinute: 'Next Minute',\n    prevSecond: 'Previous Second',\n    nextSecond: 'Next Second',\n    am: 'am',\n    pm: 'pm',\n    dateFormat: 'mm/dd/yy',\n    firstDayOfWeek: 0,\n    today: 'Today',\n    weekHeader: 'Wk',\n    weak: 'Weak',\n    medium: 'Medium',\n    strong: 'Strong',\n    passwordPrompt: 'Enter a password',\n    emptyMessage: 'No results found',\n    searchMessage: 'Search results are available',\n    selectionMessage: '{0} items selected',\n    emptySelectionMessage: 'No selected item',\n    emptySearchMessage: 'No results found',\n    emptyFilterMessage: 'No results found',\n    fileChosenMessage: 'Files',\n    noFileChosenMessage: 'No file chosen',\n    aria: {\n      trueLabel: 'True',\n      falseLabel: 'False',\n      nullLabel: 'Not Selected',\n      star: '1 star',\n      stars: '{star} stars',\n      selectAll: 'All items selected',\n      unselectAll: 'All items unselected',\n      close: 'Close',\n      previous: 'Previous',\n      next: 'Next',\n      navigation: 'Navigation',\n      scrollTop: 'Scroll Top',\n      moveTop: 'Move Top',\n      moveUp: 'Move Up',\n      moveDown: 'Move Down',\n      moveBottom: 'Move Bottom',\n      moveToTarget: 'Move to Target',\n      moveToSource: 'Move to Source',\n      moveAllToTarget: 'Move All to Target',\n      moveAllToSource: 'Move All to Source',\n      pageLabel: '{page}',\n      firstPageLabel: 'First Page',\n      lastPageLabel: 'Last Page',\n      nextPageLabel: 'Next Page',\n      prevPageLabel: 'Previous Page',\n      rowsPerPageLabel: 'Rows per page',\n      previousPageLabel: 'Previous Page',\n      jumpToPageDropdownLabel: 'Jump to Page Dropdown',\n      jumpToPageInputLabel: 'Jump to Page Input',\n      selectRow: 'Row Selected',\n      unselectRow: 'Row Unselected',\n      expandRow: 'Row Expanded',\n      collapseRow: 'Row Collapsed',\n      showFilterMenu: 'Show Filter Menu',\n      hideFilterMenu: 'Hide Filter Menu',\n      filterOperator: 'Filter Operator',\n      filterConstraint: 'Filter Constraint',\n      editRow: 'Row Edit',\n      saveEdit: 'Save Edit',\n      cancelEdit: 'Cancel Edit',\n      listView: 'List View',\n      gridView: 'Grid View',\n      slide: 'Slide',\n      slideNumber: '{slideNumber}',\n      zoomImage: 'Zoom Image',\n      zoomIn: 'Zoom In',\n      zoomOut: 'Zoom Out',\n      rotateRight: 'Rotate Right',\n      rotateLeft: 'Rotate Left',\n      listLabel: 'Option List',\n      selectColor: 'Select a color',\n      removeLabel: 'Remove',\n      browseFiles: 'Browse Files',\n      maximizeLabel: 'Maximize'\n    }\n  };\n  zIndex = {\n    modal: 1100,\n    overlay: 1000,\n    menu: 1000,\n    tooltip: 1100\n  };\n  translationSource = new Subject();\n  translationObserver = this.translationSource.asObservable();\n  getTranslation(key) {\n    return this.translation[key];\n  }\n  setTranslation(value) {\n    this.translation = {\n      ...this.translation,\n      ...value\n    };\n    this.translationSource.next(this.translation);\n  }\n  setConfig(config) {\n    const {\n      csp,\n      ripple,\n      inputStyle,\n      inputVariant,\n      theme,\n      overlayOptions,\n      translation,\n      filterMatchModeOptions,\n      overlayAppendTo,\n      zIndex\n    } = config || {};\n    if (csp) this.csp.set(csp);\n    if (overlayAppendTo) this.overlayAppendTo.set(overlayAppendTo);\n    if (ripple) this.ripple.set(ripple);\n    if (inputStyle) this.inputStyle.set(inputStyle);\n    if (inputVariant) this.inputVariant.set(inputVariant);\n    if (overlayOptions) this.overlayOptions = overlayOptions;\n    if (translation) this.setTranslation(translation);\n    if (filterMatchModeOptions) this.filterMatchModeOptions = filterMatchModeOptions;\n    if (zIndex) this.zIndex = zIndex;\n    if (theme) this.setThemeConfig({\n      theme,\n      csp\n    });\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵPrimeNG_BaseFactory;\n    return function PrimeNG_Factory(__ngFactoryType__) {\n      return (ɵPrimeNG_BaseFactory || (ɵPrimeNG_BaseFactory = i0.ɵɵgetInheritedFactory(PrimeNG)))(__ngFactoryType__ || PrimeNG);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PrimeNG,\n    factory: PrimeNG.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PrimeNG, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst PRIME_NG_CONFIG = new InjectionToken('PRIME_NG_CONFIG');\nfunction providePrimeNG(...features) {\n  const providers = features?.map(feature => ({\n    provide: PRIME_NG_CONFIG,\n    useValue: feature,\n    multi: false\n  }));\n  const initializer = provideAppInitializer(() => {\n    const PrimeNGConfig = inject(PrimeNG);\n    features?.forEach(feature => PrimeNGConfig.setConfig(feature));\n    return;\n  });\n  return makeEnvironmentProviders([...providers, initializer]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PRIME_NG_CONFIG, PrimeNG, ThemeProvider, providePrimeNG };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, ɵRuntimeError as _RuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, ApplicationRef, DestroyRef, afterNextRender, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM as _getDOM } from '@angular/common';\nimport { forkJoin, from, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n  _renderer;\n  _elementRef;\n  /**\n   * The registered callback function called when a change or input event occurs on the input\n   * element.\n   * @docs-private\n   */\n  onChange = _ => {};\n  /**\n   * The registered callback function called when a blur event occurs on the input element.\n   * @docs-private\n   */\n  onTouched = () => {};\n  constructor(_renderer, _elementRef) {\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n  }\n  /**\n   * Helper method that sets a property on a target element using the current Renderer\n   * implementation.\n   * @docs-private\n   */\n  setProperty(key, value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n  }\n  /**\n   * Registers a function called when the control is touched.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Sets the \"disabled\" property on the range input element.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.setProperty('disabled', isDisabled);\n  }\n  static ɵfac = function BaseControlValueAccessor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseControlValueAccessor\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseControlValueAccessor, [{\n    type: Directive\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBuiltInControlValueAccessor_BaseFactory;\n    return function BuiltInControlValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(__ngFactoryType__ || BuiltInControlValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BuiltInControlValueAccessor,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BuiltInControlValueAccessor, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"checked\" property on the input element.\n   * @docs-private\n   */\n  writeValue(value) {\n    this.setProperty('checked', value);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵCheckboxControlValueAccessor_BaseFactory;\n    return function CheckboxControlValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(__ngFactoryType__ || CheckboxControlValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CheckboxControlValueAccessor,\n    selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n    hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n          return ctx.onChange($event.target.checked);\n        })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n      host: {\n        '(change)': 'onChange($any($event.target).checked)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [CHECKBOX_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], null, null);\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = _getDOM() ? _getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n  _compositionMode;\n  /** Whether the user is creating a composition string (IME events). */\n  _composing = false;\n  constructor(renderer, elementRef, _compositionMode) {\n    super(renderer, elementRef);\n    this._compositionMode = _compositionMode;\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n  /**\n   * Sets the \"value\" property on the input element.\n   * @docs-private\n   */\n  writeValue(value) {\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /** @internal */\n  _handleInput(value) {\n    if (!this._compositionMode || this._compositionMode && !this._composing) {\n      this.onChange(value);\n    }\n  }\n  /** @internal */\n  _compositionStart() {\n    this._composing = true;\n  }\n  /** @internal */\n  _compositionEnd(value) {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\n  static ɵfac = function DefaultValueAccessor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DefaultValueAccessor,\n    selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n    hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n          return ctx._handleInput($event.target.value);\n        })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n          return ctx._compositionStart();\n        })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n          return ctx._compositionEnd($event.target.value);\n        });\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n      // TODO: vsavkin replace the above selector with the one below it once\n      // https://github.com/angular/angular/issues/3011 is implemented\n      // selector: '[ngModel],[formControl],[formControlName]',\n      host: {\n        '(input)': '_handleInput($any($event.target).value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '_compositionStart()',\n        '(compositionend)': '_compositionEnd($any($event.target).value)'\n      },\n      providers: [DEFAULT_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [COMPOSITION_BUFFER_MODE]\n    }]\n  }], null);\n})();\nfunction isEmptyInputValue(value) {\n  return value == null || lengthOrSize(value) === 0;\n}\n/**\n * Extract the length property in case it's an array or a string.\n * Extract the size property in case it's a set.\n * Return null else.\n * @param value Either an array, set or undefined.\n */\nfunction lengthOrSize(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  if (value == null) {\n    return null;\n  } else if (Array.isArray(value) || typeof value === 'string') {\n    return value.length;\n  } else if (value instanceof Set) {\n    return value.size;\n  }\n  return null;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```ts\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```ts\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```ts\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```ts\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```ts\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets. The `minLength` validator logic is also not invoked for values when their `length` or\n   * `size` property is 0 (for example in case of an empty string or an empty array), to support\n   * optional controls. You can use the standard `required` validator if empty values should not be\n   * considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```ts\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```ts\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```ts\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```ts\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator();\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (control.value == null || min == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (control.value == null || max == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n *\n * The minLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length === null || length === 0) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` or `size` property\n      return null;\n    }\n    return length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n *\n * The maxLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length !== null && length > maxLength) {\n      return {\n        'maxlength': {\n          'requiredLength': maxLength,\n          'actualLength': length\n        }\n      };\n    }\n    return null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = _isPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !_isSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new _RuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Set of synchronous validators as they were provided while calling `setValidators` function.\n   * @internal\n   */\n  _rawValidators = [];\n  /**\n   * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n   * function.\n   * @internal\n   */\n  _rawAsyncValidators = [];\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /*\n   * The set of callbacks to be invoked when directive instance is being destroyed.\n   */\n  _onDestroyCallbacks = [];\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The name for the control\n   */\n  name;\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent = null;\n  /**\n   * @description\n   * The name for the control\n   */\n  name = null;\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  _cd;\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // track the submitted signal\n    this._cd?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static ɵfac = function NgControlStatus_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgControlStatus,\n    selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n    hostVars: 14,\n    hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgControlStatus, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName],[ngModel],[formControl]',\n      host: ngControlStatusHost,\n      standalone: false\n    }]\n  }], () => [{\n    type: NgControl,\n    decorators: [{\n      type: Self\n    }]\n  }], null);\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static ɵfac = function NgControlStatusGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgControlStatusGroup,\n    selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n    hostVars: 16,\n    hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgControlStatusGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n      host: ngGroupStatusHost,\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }], null);\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException(nameOrIndex) {\n  return new _RuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n  if (nameOrIndex == null || nameOrIndex === '') {\n    return '';\n  }\n  const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n  return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n  return new _RuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new _RuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new _RuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new _RuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n  value;\n  source;\n  constructor(value, source) {\n    super();\n    this.value = value;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n  pristine;\n  source;\n  constructor(pristine, source) {\n    super();\n    this.pristine = pristine;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n  touched;\n  source;\n  constructor(touched, source) {\n    super();\n    this.touched = touched;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n  status;\n  source;\n  constructor(status, source) {\n    super();\n    this.status = status;\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new _RuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new _RuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new _RuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /** @internal */\n  _pendingDirty = false;\n  /**\n   * Indicates that a control has its own pending asynchronous validation in progress.\n   * It also stores if the control should emit events when the validation status changes.\n   *\n   * @internal\n   */\n  _hasOwnPendingAsyncValidator = null;\n  /** @internal */\n  _pendingTouched = false;\n  /** @internal */\n  _onCollectionChange = () => {};\n  /** @internal */\n  _updateOn;\n  _parent = null;\n  _asyncValidationSubscription;\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   *\n   * @internal\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   *\n   * @internal\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Synchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setValidators` function\n   *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n   *\n   * @internal\n   */\n  _rawValidators;\n  /**\n   * Asynchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setAsyncValidators` function\n   *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n   * asyncValidatorFn`)\n   *\n   * @internal\n   */\n  _rawAsyncValidators;\n  /**\n   * The current value of the control.\n   *\n   * * For a `FormControl`, the current value.\n   * * For an enabled `FormGroup`, the values of enabled controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a disabled `FormGroup`, the values of all controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a `FormArray`, the values of enabled controls as an array.\n   *\n   */\n  value;\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * The validation status of the control.\n   *\n   * @see {@link FormControlStatus}\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  get status() {\n    return untracked(this.statusReactive);\n  }\n  set status(v) {\n    untracked(() => this.statusReactive.set(v));\n  }\n  /** @internal */\n  _status = computed(() => this.statusReactive(), ...(ngDevMode ? [{\n    debugName: \"_status\"\n  }] : []));\n  statusReactive = signal(undefined, ...(ngDevMode ? [{\n    debugName: \"statusReactive\"\n  }] : []));\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * An object containing any errors generated by failing validation,\n   * or null if there are no errors.\n   */\n  errors;\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get pristine() {\n    return untracked(this.pristineReactive);\n  }\n  set pristine(v) {\n    untracked(() => this.pristineReactive.set(v));\n  }\n  /** @internal */\n  _pristine = computed(() => this.pristineReactive(), ...(ngDevMode ? [{\n    debugName: \"_pristine\"\n  }] : []));\n  pristineReactive = signal(true, ...(ngDevMode ? [{\n    debugName: \"pristineReactive\"\n  }] : []));\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  get touched() {\n    return untracked(this.touchedReactive);\n  }\n  set touched(v) {\n    untracked(() => this.touchedReactive.set(v));\n  }\n  /** @internal */\n  _touched = computed(() => this.touchedReactive(), ...(ngDevMode ? [{\n    debugName: \"_touched\"\n  }] : []));\n  touchedReactive = signal(false, ...(ngDevMode ? [{\n    debugName: \"touchedReactive\"\n  }] : []));\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Exposed as observable, see below.\n   *\n   * @internal\n   */\n  _events = new Subject();\n  /**\n   * A multicasting observable that emits an event every time the state of the control changes.\n   * It emits for value, status, pristine or touched changes.\n   *\n   * **Note**: On value change, the emit happens right after a value of this control is updated. The\n   * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n   * later, so accessing a value of a parent control (using the `value` property) from the callback\n   * of this event might result in getting a value that has not been updated yet. Subscribe to the\n   * `events` of the parent control instead.\n   * For other event types, the events are emitted after the parent control has been updated.\n   *\n   */\n  events = this._events.asObservable();\n  /**\n   * A multicasting observable that emits an event every time the value of the control changes, in\n   * the UI or programmatically. It also emits an event each time you call enable() or disable()\n   * without passing along {emitEvent: false} as a function argument.\n   *\n   * **Note**: the emit happens right after a value of this control is updated. The value of a\n   * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n   * accessing a value of a parent control (using the `value` property) from the callback of this\n   * event might result in getting a value that has not been updated yet. Subscribe to the\n   * `valueChanges` event of the parent control instead.\n   */\n  valueChanges;\n  /**\n   * A multicasting observable that emits an event every time the validation `status` of the control\n   * recalculates.\n   *\n   * @see {@link FormControlStatus}\n   * @see {@link AbstractControl.status}\n   */\n  statusChanges;\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  markAsTouched(opts = {}) {\n    const changed = this.touched === false;\n    this.touched = true;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(true, sourceControl));\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `dirty`.\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `PristineChangeEvent` with the `pristine` property being `false`.\n   * When false, no events are emitted.\n   */\n  markAllAsDirty(opts = {}) {\n    this.markAsDirty({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsDirty(opts));\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n   * When false, no events are emitted.\n   */\n  markAllAsTouched(opts = {}) {\n    this.markAsTouched({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsTouched(opts));\n  }\n  markAsUntouched(opts = {}) {\n    const changed = this.touched === true;\n    this.touched = false;\n    this._pendingTouched = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true,\n        emitEvent: opts.emitEvent,\n        sourceControl\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(false, sourceControl));\n    }\n  }\n  markAsDirty(opts = {}) {\n    const changed = this.pristine === true;\n    this.pristine = false;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(false, sourceControl));\n    }\n  }\n  markAsPristine(opts = {}) {\n    const changed = this.pristine === false;\n    this.pristine = true;\n    this._pendingDirty = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.markAsPristine({\n        onlySelf: true,\n        emitEvent: opts.emitEvent\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(true, sourceControl));\n    }\n  }\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n   * `valueChanges` and `events`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts, sourceControl) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine({}, sourceControl);\n      }\n      this._parent._updateTouched({}, sourceControl);\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      const shouldHaveEmitted = this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        // If the canceled subscription should have emitted\n        // we make sure the async validator emits the status change on completion\n        this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n      }\n    }\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = {\n        emitEvent: emitEvent !== false,\n        shouldHaveEmitted: shouldHaveEmitted !== false\n      };\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = null;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent,\n          shouldHaveEmitted\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      // we're cancelling the validator subscribtion, we keep if it should have emitted\n      // because we want to emit eventually if it was required at least once.\n      const shouldHaveEmitted = (this._hasOwnPendingAsyncValidator?.emitEvent || this._hasOwnPendingAsyncValidator?.shouldHaveEmitted) ?? false;\n      this._hasOwnPendingAsyncValidator = null;\n      return shouldHaveEmitted;\n    }\n    return false;\n  }\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    // The Events Observable expose a slight different bevahior than the statusChanges obs\n    // An async validator will still emit a StatusChangeEvent is a previously cancelled\n    // async validator has emitEvent set to true\n    if (emitEvent || shouldHaveEmitted) {\n      this._events.next(new StatusChangeEvent(this.status, changedControl));\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    // TODO: this should be piped from events() but is breaking in G3\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts, changedControl) {\n    const newPristine = !this._anyControlsDirty();\n    const changed = this.pristine !== newPristine;\n    this.pristine = newPristine;\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, changedControl);\n    }\n    if (changed) {\n      this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}, changedControl) {\n    this.touched = this._anyControlsTouched();\n    this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, changedControl);\n    }\n  }\n  /** @internal */\n  _onDisabledChange = [];\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue(/* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n  callSetDisabledState;\n  /**\n   * @description\n   * Returns whether the form submission has been triggered.\n   */\n  get submitted() {\n    return untracked(this.submittedReactive);\n  }\n  /** @internal */\n  _submitted = computed(() => this.submittedReactive(), ...(ngDevMode ? [{\n    debugName: \"_submitted\"\n  }] : []));\n  submittedReactive = signal(false, ...(ngDevMode ? [{\n    debugName: \"submittedReactive\"\n  }] : []));\n  _directives = new Set();\n  /**\n   * @description\n   * The `FormGroup` instance created for this form.\n   */\n  form;\n  /**\n   * @description\n   * Event emitter for the \"ngSubmit\" event\n   */\n  ngSubmit = new EventEmitter();\n  /**\n   * @description\n   * Tracks options for the `NgForm` instance.\n   *\n   * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n   * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n   * Possible values: `'change'` | `'blur'` | `'submit'`.\n   *\n   */\n  options;\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n  /** @docs-private */\n  ngAfterViewInit() {\n    this._setUpdateStrategy();\n  }\n  /**\n   * @description\n   * The directive instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * The internal `FormGroup` instance.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it is always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Returns a map of the controls in this group.\n   */\n  get controls() {\n    return this.form.controls;\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  addControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      dir.control = container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir, this.callSetDisabledState);\n      dir.control.updateValueAndValidity({\n        emitEvent: false\n      });\n      this._directives.add(dir);\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `NgModel` instance from the internal list of directives\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  removeControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n      this._directives.delete(dir);\n    });\n  }\n  /**\n   * @description\n   * Adds a new `NgModelGroup` directive instance to the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  addFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({\n        emitEvent: false\n      });\n    });\n  }\n  /**\n   * @description\n   * Removes the `NgModelGroup` directive instance from the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  removeFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `NgControl` directive.\n   *\n   * @param dir The `NgControl` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    resolvedPromise$1.then(() => {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    });\n  }\n  /**\n   * @description\n   * Sets the value for this `FormGroup`.\n   *\n   * @param value The new value\n   */\n  setValue(value) {\n    this.control.setValue(value);\n  }\n  /**\n   * @description\n   * Method called when the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submittedReactive.set(true);\n    syncPendingControls(this.form, this._directives);\n    this.ngSubmit.emit($event);\n    this.form._events.next(new FormSubmittedEvent(this.control));\n    // Forms with `method=\"dialog\"` have some special behavior\n    // that won't reload the page and that shouldn't be prevented.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submittedReactive.set(false);\n    this.form._events.next(new FormResetEvent(this.form));\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.form._updateOn = this.options.updateOn;\n    }\n  }\n  _findContainer(path) {\n    path.pop();\n    return path.length ? this.form.get(path) : this.form;\n  }\n  static ɵfac = function NgForm_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgForm,\n    selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n    hostBindings: function NgForm_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n          return ctx.onSubmit($event);\n        })(\"reset\", function NgForm_reset_HostBindingHandler() {\n          return ctx.onReset();\n        });\n      }\n    },\n    inputs: {\n      options: [0, \"ngFormOptions\", \"options\"]\n    },\n    outputs: {\n      ngSubmit: \"ngSubmit\"\n    },\n    exportAs: [\"ngForm\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgForm, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n      providers: [formDirectiveProvider$1],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      outputs: ['ngSubmit'],\n      exportAs: 'ngForm',\n      standalone: false\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    options: [{\n      type: Input,\n      args: ['ngFormOptions']\n    }]\n  });\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  /** @publicApi */\n  defaultValue = null;\n  /** @internal */\n  _onChange = [];\n  /** @internal */\n  _pendingValue;\n  /** @internal */\n  _pendingChange = false;\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n  /**\n   * @description\n   * The parent control for the group\n   *\n   * @internal\n   */\n  _parent;\n  /** @docs-private */\n  ngOnInit() {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective.addFormGroup(this);\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormGroup(this);\n  }\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /** @internal */\n  _checkParentType() {}\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAbstractFormGroupDirective_BaseFactory;\n    return function AbstractFormGroupDirective_Factory(__ngFactoryType__) {\n      return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(__ngFactoryType__ || AbstractFormGroupDirective);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AbstractFormGroupDirective,\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false\n    }]\n  }], null, null);\n})();\nfunction modelParentException() {\n  return new _RuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new _RuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new _RuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new _RuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n  /**\n   * @description\n   * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n   * to a key in the parent `NgForm`.\n   */\n  name = '';\n  constructor(parent, validators, asyncValidators) {\n    super();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw modelGroupParentException();\n    }\n  }\n  static ɵfac = function NgModelGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgModelGroup,\n    selectors: [[\"\", \"ngModelGroup\", \"\"]],\n    inputs: {\n      name: [0, \"ngModelGroup\", \"name\"]\n    },\n    exportAs: [\"ngModelGroup\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgModelGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModelGroup]',\n      providers: [modelGroupProvider],\n      exportAs: 'ngModelGroup',\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['ngModelGroup']\n    }]\n  });\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n  _changeDetectorRef;\n  callSetDisabledState;\n  control = new FormControl();\n  // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n  // This is not reflected in the type of the property because outside of templates, consumers\n  // should only deal with booleans. In templates, a string is allowed for convenience and to\n  // match the native \"disabled attribute\" semantics which can be observed on input elements.\n  // This static member tells the compiler that values of type \"string\" can also be assigned\n  // to the input in a template.\n  /** @docs-private */\n  static ngAcceptInputType_isDisabled;\n  /** @internal */\n  _registered = false;\n  /**\n   * Internal reference to the view model value.\n   * @docs-private\n   */\n  viewModel;\n  /**\n   * @description\n   * Tracks the name bound to the directive. If a parent form exists, it\n   * uses this name as a key to retrieve this control's value.\n   */\n  name = '';\n  /**\n   * @description\n   * Tracks whether the control is disabled.\n   */\n  isDisabled;\n  /**\n   * @description\n   * Tracks the value bound to this directive.\n   */\n  model;\n  /**\n   * @description\n   * Tracks the configuration options for this `ngModel` instance.\n   *\n   * **name**: An alternative to setting the name attribute on the form control element. See\n   * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n   * as a standalone control.\n   *\n   * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n   * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n   * has no effect.\n   *\n   * **updateOn**: Defines the event upon which the form control value and validity update.\n   * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n   *\n   */\n  options;\n  /**\n   * @description\n   * Event emitter for producing the `ngModelChange` event after\n   * the view model updates.\n   */\n  update = new EventEmitter();\n  constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n    super();\n    this._changeDetectorRef = _changeDetectorRef;\n    this.callSetDisabledState = callSetDisabledState;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    this._checkForErrors();\n    if (!this._registered || 'name' in changes) {\n      if (this._registered) {\n        this._checkName();\n        if (this.formDirective) {\n          // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n          // changed. We also can't reset the name temporarily since the logic in `removeControl`\n          // is inside a promise and it won't run immediately. We work around it by giving it an\n          // object with the same shape instead.\n          const oldName = changes['name'].previousValue;\n          this.formDirective.removeControl({\n            name: oldName,\n            path: this._getPath(oldName)\n          });\n        }\n      }\n      this._setUpControl();\n    }\n    if ('isDisabled' in changes) {\n      this._updateDisabled(changes);\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    this.formDirective && this.formDirective.removeControl(this);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return this._getPath(this.name);\n  }\n  /**\n   * @description\n   * The top-level directive for this control if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value emitted by `ngModelChange`.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _setUpControl() {\n    this._setUpdateStrategy();\n    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n    this._registered = true;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.control._updateOn = this.options.updateOn;\n    }\n  }\n  _isStandalone() {\n    return !this._parent || !!(this.options && this.options.standalone);\n  }\n  _setUpStandalone() {\n    setUpControl(this.control, this, this.callSetDisabledState);\n    this.control.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _checkForErrors() {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n      checkParentType$1(this._parent);\n    }\n    this._checkName();\n  }\n  _checkName() {\n    if (this.options && this.options.name) this.name = this.options.name;\n    if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingNameException();\n    }\n  }\n  _updateValue(value) {\n    resolvedPromise.then(() => {\n      this.control.setValue(value, {\n        emitViewToModelChange: false\n      });\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _updateDisabled(changes) {\n    const disabledValue = changes['isDisabled'].currentValue;\n    // checking for 0 to avoid breaking change\n    const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n    resolvedPromise.then(() => {\n      if (isDisabled && !this.control.disabled) {\n        this.control.disable();\n      } else if (!isDisabled && this.control.disabled) {\n        this.control.enable();\n      }\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _getPath(controlName) {\n    return this._parent ? controlPath(controlName, this._parent) : [controlName];\n  }\n  static ɵfac = function NgModel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgModel,\n    selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n    inputs: {\n      name: \"name\",\n      isDisabled: [0, \"disabled\", \"isDisabled\"],\n      model: [0, \"ngModel\", \"model\"],\n      options: [0, \"ngModelOptions\", \"options\"]\n    },\n    outputs: {\n      update: \"ngModelChange\"\n    },\n    exportAs: [\"ngModel\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgModel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModel]:not([formControlName]):not([formControl])',\n      providers: [formControlBinding$1],\n      exportAs: 'ngModel',\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ChangeDetectorRef]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    name: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    options: [{\n      type: Input,\n      args: ['ngModelOptions']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nfunction checkParentType$1(parent) {\n  if (!(parent instanceof NgModelGroup) && parent instanceof AbstractFormGroupDirective) {\n    throw formGroupNameException();\n  } else if (!(parent instanceof NgModelGroup) && !(parent instanceof NgForm)) {\n    throw modelParentException();\n  }\n}\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n  static ɵfac = function ɵNgNoValidate_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ɵNgNoValidate)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ɵNgNoValidate,\n    selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n    hostAttrs: [\"novalidate\", \"\"],\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵNgNoValidate, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n      host: {\n        'novalidate': ''\n      },\n      standalone: false\n    }]\n  }], null, null);\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵNumberValueAccessor_BaseFactory;\n    return function NumberValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(__ngFactoryType__ || NumberValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NumberValueAccessor,\n    selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n    hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n          return ctx.onChange($event.target.value);\n        })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n      host: {\n        '(input)': 'onChange($any($event.target).value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [NUMBER_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], null, null);\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new _RuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n  _accessors = [];\n  /**\n   * @description\n   * Adds a control to the internal registry. For internal use only.\n   */\n  add(control, accessor) {\n    this._accessors.push([control, accessor]);\n  }\n  /**\n   * @description\n   * Removes a control from the internal registry. For internal use only.\n   */\n  remove(accessor) {\n    for (let i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n  /**\n   * @description\n   * Selects a radio button. For internal use only.\n   */\n  select(accessor) {\n    this._accessors.forEach(c => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n  _isSameGroup(controlPair, accessor) {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n  }\n  static ɵfac = function RadioControlRegistry_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || RadioControlRegistry)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: RadioControlRegistry,\n    factory: RadioControlRegistry.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioControlRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n  _registry;\n  _injector;\n  /** @internal */\n  _state;\n  /** @internal */\n  _control;\n  /** @internal */\n  _fn;\n  setDisabledStateFired = false;\n  /**\n   * The registered callback function called when a change event occurs on the input element.\n   * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n   * to override the `onChange` function (which expects 1 argument) in the parent\n   * `BaseControlValueAccessor` class.\n   * @docs-private\n   */\n  onChange = () => {};\n  /**\n   * @description\n   * Tracks the name of the radio input element.\n   */\n  name;\n  /**\n   * @description\n   * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   */\n  formControlName;\n  /**\n   * @description\n   * Tracks the value of the radio input element\n   */\n  value;\n  callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n    optional: true\n  }) ?? setDisabledStateDefault;\n  constructor(renderer, elementRef, _registry, _injector) {\n    super(renderer, elementRef);\n    this._registry = _registry;\n    this._injector = _injector;\n  }\n  /** @docs-private */\n  ngOnInit() {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    this._registry.remove(this);\n  }\n  /**\n   * Sets the \"checked\" property value on the radio input element.\n   * @docs-private\n   */\n  writeValue(value) {\n    this._state = value === this.value;\n    this.setProperty('checked', this._state);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n  /** @docs-private */\n  setDisabledState(isDisabled) {\n    /**\n     * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n     * including upon control creation. However, a longstanding bug caused the method to not fire\n     * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n     *\n     * This had a side effect: previously, it was possible to instantiate a reactive form control\n     * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n     * model. This resulted in a mismatch between the model and the DOM. Now, because\n     * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n     * with the \"correct\" enabled value.\n     *\n     * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n     * models the entire group of radio buttons as a single `FormControl`, there is no way to\n     * control the disabled state for individual radios, so they can no longer be configured as\n     * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n     * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n     * is `false`, and we are not in legacy mode.\n     */\n    if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n      this.setProperty('disabled', isDisabled);\n    }\n    this.setDisabledStateFired = true;\n  }\n  /**\n   * Sets the \"value\" on the radio input element and unchecks it.\n   *\n   * @param value\n   */\n  fireUncheck(value) {\n    this.writeValue(value);\n  }\n  _checkName() {\n    if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n  static ɵfac = function RadioControlValueAccessor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: RadioControlValueAccessor,\n    selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n    hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n          return ctx.onChange();\n        })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    inputs: {\n      name: \"name\",\n      formControlName: \"formControlName\",\n      value: \"value\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n      host: {\n        '(change)': 'onChange()',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RADIO_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: RadioControlRegistry\n  }, {\n    type: i0.Injector\n  }], {\n    name: [{\n      type: Input\n    }],\n    formControlName: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @docs-private\n   */\n  writeValue(value) {\n    this.setProperty('value', parseFloat(value));\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵRangeValueAccessor_BaseFactory;\n    return function RangeValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(__ngFactoryType__ || RangeValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: RangeValueAccessor,\n    selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n    hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n          return ctx.onChange($event.target.value);\n        })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n          return ctx.onChange($event.target.value);\n        })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RangeValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n      host: {\n        '(change)': 'onChange($any($event.target).value)',\n        '(input)': 'onChange($any($event.target).value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RANGE_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], null, null);\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n  _ngModelWarningConfig;\n  callSetDisabledState;\n  /**\n   * Internal reference to the view model value.\n   * @docs-private\n   */\n  viewModel;\n  /**\n   * @description\n   * Tracks the `FormControl` instance bound to the directive.\n   */\n  form;\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  // TODO(kara): remove next 4 properties once deprecation period is over\n  /** @deprecated as of v6 */\n  model;\n  /** @deprecated as of v6 */\n  update = new EventEmitter();\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlDirective. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static _ngModelWarningSentOnce = false;\n  /**\n   * @description\n   * Instance property used to track whether an ngModel warning has been sent out for this\n   * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n   *\n   * @internal\n   */\n  _ngModelWarningSent = false;\n  constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this.callSetDisabledState = callSetDisabledState;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if (this._isControlChanged(changes)) {\n      const previousForm = changes['form'].previousValue;\n      if (previousForm) {\n        cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n      }\n      setUpControl(this.form, this, this.callSetDisabledState);\n      this.form.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n      }\n      this.form.setValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n    }\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * The `FormControl` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _isControlChanged(changes) {\n    return changes.hasOwnProperty('form');\n  }\n  static ɵfac = function FormControlDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormControlDirective,\n    selectors: [[\"\", \"formControl\", \"\"]],\n    inputs: {\n      form: [0, \"formControl\", \"form\"],\n      isDisabled: [0, \"disabled\", \"isDisabled\"],\n      model: [0, \"ngModel\", \"model\"]\n    },\n    outputs: {\n      update: \"ngModelChange\"\n    },\n    exportAs: [\"ngForm\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formControl]',\n      providers: [formControlBinding],\n      exportAs: 'ngForm',\n      standalone: false\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formControl']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n  callSetDisabledState;\n  /**\n   * @description\n   * Reports whether the form submission has been triggered.\n   */\n  get submitted() {\n    return untracked(this._submittedReactive);\n  }\n  // TODO(atscott): Remove once invalid API usage is cleaned up internally\n  set submitted(value) {\n    this._submittedReactive.set(value);\n  }\n  /** @internal */\n  _submitted = computed(() => this._submittedReactive(), ...(ngDevMode ? [{\n    debugName: \"_submitted\"\n  }] : []));\n  _submittedReactive = signal(false, ...(ngDevMode ? [{\n    debugName: \"_submittedReactive\"\n  }] : []));\n  /**\n   * Reference to an old form group input value, which is needed to cleanup\n   * old instance in case it was replaced with a new one.\n   */\n  _oldForm;\n  /**\n   * Callback that should be invoked when controls in FormGroup or FormArray collection change\n   * (added or removed). This callback triggers corresponding DOM updates.\n   */\n  _onCollectionChange = () => this._updateDomValue();\n  /**\n   * @description\n   * Tracks the list of added `FormControlName` instances\n   */\n  directives = [];\n  /**\n   * @description\n   * Tracks the `FormGroup` bound to this directive.\n   */\n  form = null;\n  /**\n   * @description\n   * Emits an event when the form submission has been triggered.\n   */\n  ngSubmit = new EventEmitter();\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n      throw missingFormException();\n    }\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n      this._oldForm = this.form;\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpValidators(this.form, this);\n      // Currently the `onCollectionChange` callback is rewritten each time the\n      // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n      // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n      // Otherwise it might cause overriding a callback of some other directive instances. We should\n      // consider updating this logic later to make it similar to how `onChange` callbacks are\n      // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n      if (this.form._onCollectionChange === this._onCollectionChange) {\n        this.form._registerOnCollectionChange(() => {});\n      }\n    }\n  }\n  /**\n   * @description\n   * Returns this directive's instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * Returns the `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  addControl(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpControl(ctrl, dir, this.callSetDisabledState);\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n    this.directives.push(dir);\n    return ctrl;\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `FormControlName` instance from the internal list of directives\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  removeControl(dir) {\n    cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n    removeListItem$1(this.directives, dir);\n  }\n  /**\n   * Adds a new `FormGroupName` directive instance to the form.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  addFormGroup(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  removeFormGroup(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  addFormArray(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  removeFormArray(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  getFormArray(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `FormControlName` directive.\n   *\n   * @param dir The `FormControlName` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    const ctrl = this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n  /**\n   * @description\n   * Method called with the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this._submittedReactive.set(true);\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    this.form._events.next(new FormSubmittedEvent(this.control));\n    // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n    // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n    // some internal apps call this method directly with the wrong arguments.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form, `undefined` by default\n   */\n  resetForm(value = undefined, options = {}) {\n    this.form.reset(value, options);\n    this._submittedReactive.set(false);\n    if (options?.emitEvent !== false) {\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n  }\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const oldCtrl = dir.control;\n      const newCtrl = this.form.get(dir.path);\n      if (oldCtrl !== newCtrl) {\n        // Note: the value of the `dir.control` may not be defined, for example when it's a first\n        // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n        cleanUpControl(oldCtrl || null, dir);\n        // Check whether new control at the same location inside the corresponding `FormGroup` is an\n        // instance of `FormControl` and perform control setup only if that's the case.\n        // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n        // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n        // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n        if (isFormControl(newCtrl)) {\n          setUpControl(newCtrl, dir, this.callSetDisabledState);\n          dir.control = newCtrl;\n        }\n      }\n    });\n    this.form._updateTreeValidity({\n      emitEvent: false\n    });\n  }\n  _setUpFormContainer(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    // NOTE: this operation looks unnecessary in case no new validators were added in\n    // `setUpFormContainer` call. Consider updating this code to match the logic in\n    // `_cleanUpFormContainer` function.\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _cleanUpFormContainer(dir) {\n    if (this.form) {\n      const ctrl = this.form.get(dir.path);\n      if (ctrl) {\n        const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n        if (isControlUpdated) {\n          // Run validity check only in case a control was updated (i.e. view validators were\n          // removed) as removing view validators might cause validity to change.\n          ctrl.updateValueAndValidity({\n            emitEvent: false\n          });\n        }\n      }\n    }\n  }\n  _updateRegistrations() {\n    this.form._registerOnCollectionChange(this._onCollectionChange);\n    if (this._oldForm) {\n      this._oldForm._registerOnCollectionChange(() => {});\n    }\n  }\n  _updateValidators() {\n    setUpValidators(this.form, this);\n    if (this._oldForm) {\n      cleanUpValidators(this._oldForm, this);\n    }\n  }\n  static ɵfac = function FormGroupDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormGroupDirective,\n    selectors: [[\"\", \"formGroup\", \"\"]],\n    hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n          return ctx.onSubmit($event);\n        })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n          return ctx.onReset();\n        });\n      }\n    },\n    inputs: {\n      form: [0, \"formGroup\", \"form\"]\n    },\n    outputs: {\n      ngSubmit: \"ngSubmit\"\n    },\n    exportAs: [\"ngForm\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroup]',\n      providers: [formDirectiveProvider],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      exportAs: 'ngForm',\n      standalone: false\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formGroup']\n    }],\n    ngSubmit: [{\n      type: Output\n    }]\n  });\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n  /**\n   * @description\n   * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form groups to be bound\n   * to indices when iterating over groups in a `FormArray`.\n   */\n  name = null;\n  constructor(parent, validators, asyncValidators) {\n    super();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw groupParentException();\n    }\n  }\n  static ɵfac = function FormGroupName_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormGroupName,\n    selectors: [[\"\", \"formGroupName\", \"\"]],\n    inputs: {\n      name: [0, \"formGroupName\", \"name\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGroupName, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName]',\n      providers: [formGroupNameProvider],\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formGroupName']\n    }]\n  });\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n  /** @internal */\n  _parent;\n  /**\n   * @description\n   * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form arrays to be bound\n   * to indices when iterating over arrays in a `FormArray`.\n   */\n  name = null;\n  constructor(parent, validators, asyncValidators) {\n    super();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /**\n   * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n   * @throws If the directive does not have a valid parent.\n   * @docs-private\n   */\n  ngOnInit() {\n    if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw arrayParentException();\n    }\n    this.formDirective.addFormArray(this);\n  }\n  /**\n   * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n   * @docs-private\n   */\n  ngOnDestroy() {\n    this.formDirective?.removeFormArray(this);\n  }\n  /**\n   * @description\n   * The `FormArray` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormArray(this);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  static ɵfac = function FormArrayName_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormArrayName,\n    selectors: [[\"\", \"formArrayName\", \"\"]],\n    inputs: {\n      name: [0, \"formArrayName\", \"name\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormArrayName, [{\n    type: Directive,\n    args: [{\n      selector: '[formArrayName]',\n      providers: [formArrayNameProvider],\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formArrayName']\n    }]\n  });\n})();\nfunction hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n  _ngModelWarningConfig;\n  _added = false;\n  /**\n   * Internal reference to the view model value.\n   * @internal\n   */\n  viewModel;\n  /**\n   * @description\n   * Tracks the `FormControl` instance bound to the directive.\n   */\n  control;\n  /**\n   * @description\n   * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n   * to a key in the parent `FormGroup` or `FormArray`.\n   * Accepts a name as a string or a number.\n   * The name in the form of a string is useful for individual forms,\n   * while the numerical form allows for form controls to be bound\n   * to indices when iterating over controls in a `FormArray`.\n   */\n  name = null;\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  // TODO(kara): remove next 4 properties once deprecation period is over\n  /** @deprecated as of v6 */\n  model;\n  /** @deprecated as of v6 */\n  update = new EventEmitter();\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlName. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static _ngModelWarningSentOnce = false;\n  /**\n   * @description\n   * Instance property used to track whether an ngModel warning has been sent out for this\n   * particular FormControlName instance. Used to support warning config of \"always\".\n   *\n   * @internal\n   */\n  _ngModelWarningSent = false;\n  constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n      }\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  _setUpControl() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      checkParentType(this._parent, this.name);\n    }\n    this.control = this.formDirective.addControl(this);\n    this._added = true;\n  }\n  static ɵfac = function FormControlName_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FormControlName,\n    selectors: [[\"\", \"formControlName\", \"\"]],\n    inputs: {\n      name: [0, \"formControlName\", \"name\"],\n      isDisabled: [0, \"disabled\", \"isDisabled\"],\n      model: [0, \"ngModel\", \"model\"]\n    },\n    outputs: {\n      update: \"ngModelChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormControlName, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName]',\n      providers: [controlNameBinding],\n      standalone: false\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formControlName']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nfunction checkParentType(parent, name) {\n  if (!(parent instanceof FormGroupName) && parent instanceof AbstractFormGroupDirective) {\n    throw ngModelGroupException();\n  } else if (!(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName)) {\n    throw controlParentException(name);\n  }\n}\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *    @for(country of countries; track $index) {\n *        <option[ngValue]=\"country\">{{country.name}}</option>\n *    }\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n  /** @docs-private */\n  value;\n  /** @internal */\n  _optionMap = new Map();\n  /** @internal */\n  _idCounter = 0;\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  _compareWith = Object.is;\n  // We need this because we might be in the process of destroying the root\n  // injector, which is marked as destroyed before running destroy hooks.\n  // Attempting to use afterNextRender with the node injector would evntually\n  // run into that already destroyed injector.\n  appRefInjector = inject(ApplicationRef).injector;\n  // TODO(atscott): Remove once destroyed is exposed on EnvironmentInjector\n  appRefDestroyRef = this.appRefInjector.get(DestroyRef);\n  destroyRef = inject(DestroyRef);\n  cdr = inject(ChangeDetectorRef);\n  _queuedWrite = false;\n  /**\n   * This is needed to efficiently set the select value when adding/removing options. If\n   * writeValue is instead called for every added/removed option, this results in exponentially\n   * more _compareValue calls than the number of option elements (issue #41330).\n   *\n   * Secondly, calling writeValue when rendering individual option elements instead of after they\n   * are all rendered caused an issue in Safari and IE 11 where the first option element failed\n   * to be deselected when no option matched the select ngModel. This was because Angular would\n   * set the select element's value property before appending the option's child text node to the\n   * DOM (issue #14505).\n   *\n   * Finally, this approach is necessary to avoid an issue with delayed element removal when\n   * using the animations module (in all browsers). Otherwise when a selected option is removed\n   * (so no option matches the ngModel anymore), Angular would change the select element value\n   * before actually removing the option from the DOM. Then when the option is finally removed\n   * from the DOM, the browser would change the select value to that of the first option, even\n   * though it doesn't match the ngModel (issue #18430).\n   *\n   * @internal\n   */\n  _writeValueAfterRender() {\n    if (this._queuedWrite || this.appRefDestroyRef.destroyed) {\n      return;\n    }\n    this._queuedWrite = true;\n    afterNextRender({\n      write: () => {\n        if (this.destroyRef.destroyed) {\n          return;\n        }\n        this._queuedWrite = false;\n        this.writeValue(this.value);\n      }\n    }, {\n      injector: this.appRefInjector\n    });\n  }\n  /**\n   * Sets the \"value\" property on the select element.\n   * @docs-private\n   */\n  writeValue(value) {\n    // TODO(atscott): This could likely be optimized more by only marking for check if the value is changed\n    // note that this needs to include both the internal value and the value in the DOM.\n    this.cdr.markForCheck();\n    this.value = value;\n    const id = this._getOptionId(value);\n    const valueString = _buildValueString$1(id, value);\n    this.setProperty('value', valueString);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this.onChange = valueString => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n  /** @internal */\n  _registerOption() {\n    return (this._idCounter++).toString();\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId$1(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSelectControlValueAccessor_BaseFactory;\n    return function SelectControlValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(__ngFactoryType__ || SelectControlValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SelectControlValueAccessor,\n    selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n    hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n          return ctx.onChange($event.target.value);\n        })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    inputs: {\n      compareWith: \"compareWith\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n      host: {\n        '(change)': 'onChange($any($event.target).value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n  _element;\n  _renderer;\n  _select;\n  /**\n   * @description\n   * ID of the option element\n   */\n  id;\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) this.id = this._select._registerOption();\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString$1(this.id, value));\n    this._select._writeValueAfterRender();\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    this._setElementValue(value);\n    if (this._select) this._select._writeValueAfterRender();\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select._writeValueAfterRender();\n    }\n  }\n  static ɵfac = function NgSelectOption_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgSelectOption,\n    selectors: [[\"option\"]],\n    inputs: {\n      ngValue: \"ngValue\",\n      value: \"value\"\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSelectOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option',\n      standalone: false\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   @for(country of countries; track $index) {\n *      <option [ngValue]=\"country\">{{ country.name }}</option>\n *   }\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * The current value.\n   * @docs-private\n   */\n  value;\n  /** @internal */\n  _optionMap = new Map();\n  /** @internal */\n  _idCounter = 0;\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  _compareWith = Object.is;\n  /**\n   * Sets the \"value\" property on one or of more of the select's options.\n   * @docs-private\n   */\n  writeValue(value) {\n    this.value = value;\n    let optionSelectedStateSetter;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const ids = value.map(v => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(ids.indexOf(o.toString()) > -1);\n      };\n    } else {\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(false);\n      };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n  /**\n   * Registers a function called when the control value changes\n   * and writes an array of the selected options.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this.onChange = element => {\n      const selected = [];\n      const selectedOptions = element.selectedOptions;\n      if (selectedOptions !== undefined) {\n        const options = selectedOptions;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          const val = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade to use `options` when `selectedOptions` property is not available.\n      // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n      // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n      else {\n        const options = element.options;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          if (opt.selected) {\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n  /** @internal */\n  _registerOption(value) {\n    const id = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSelectMultipleControlValueAccessor_BaseFactory;\n    return function SelectMultipleControlValueAccessor_Factory(__ngFactoryType__) {\n      return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(__ngFactoryType__ || SelectMultipleControlValueAccessor);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: SelectMultipleControlValueAccessor,\n    selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n    hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n          return ctx.onChange($event.target);\n        })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    inputs: {\n      compareWith: \"compareWith\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_MULTIPLE_VALUE_ACCESSOR],\n      standalone: false\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n  _element;\n  _renderer;\n  _select;\n  id;\n  /** @internal */\n  _value;\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @internal */\n  _setSelected(selected) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static ɵfac = function ɵNgSelectMultipleOption_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ɵNgSelectMultipleOption,\n    selectors: [[\"option\"]],\n    inputs: {\n      ngValue: \"ngValue\",\n      value: \"value\"\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option',\n      standalone: false\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectMultipleControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n  _validator = nullValidator;\n  _onChange;\n  /**\n   * A flag that tracks whether this validator is enabled.\n   *\n   * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n   * directive classes that extend this base class.\n   * @internal\n   */\n  _enabled;\n  /** @docs-private */\n  ngOnChanges(changes) {\n    if (this.inputName in changes) {\n      const input = this.normalizeInput(changes[this.inputName].currentValue);\n      this._enabled = this.enabled(input);\n      this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n      if (this._onChange) {\n        this._onChange();\n      }\n    }\n  }\n  /** @docs-private */\n  validate(control) {\n    return this._validator(control);\n  }\n  /** @docs-private */\n  registerOnValidatorChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * @description\n   * Determines whether this validator should be active or not based on an input.\n   * Base class implementation checks whether an input is defined (if the value is different from\n   * `null` and `undefined`). Validator classes that extend this base class can override this\n   * function with the logic specific to a particular validator directive.\n   */\n  enabled(input) {\n    return input != null /* both `null` and `undefined` */;\n  }\n  static ɵfac = function AbstractValidatorDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AbstractValidatorDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AbstractValidatorDirective,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractValidatorDirective, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the max bound to this directive.\n   */\n  max;\n  /** @internal */\n  inputName = 'max';\n  /** @internal */\n  normalizeInput = input => toFloat(input);\n  /** @internal */\n  createValidator = max => maxValidator(max);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMaxValidator_BaseFactory;\n    return function MaxValidator_Factory(__ngFactoryType__) {\n      return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(__ngFactoryType__ || MaxValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MaxValidator,\n    selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n      }\n    },\n    inputs: {\n      max: \"max\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaxValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n      providers: [MAX_VALIDATOR],\n      host: {\n        '[attr.max]': '_enabled ? max : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    max: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the min bound to this directive.\n   */\n  min;\n  /** @internal */\n  inputName = 'min';\n  /** @internal */\n  normalizeInput = input => toFloat(input);\n  /** @internal */\n  createValidator = min => minValidator(min);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMinValidator_BaseFactory;\n    return function MinValidator_Factory(__ngFactoryType__) {\n      return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(__ngFactoryType__ || MinValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MinValidator,\n    selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function MinValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n      }\n    },\n    inputs: {\n      min: \"min\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n      providers: [MIN_VALIDATOR],\n      host: {\n        '[attr.min]': '_enabled ? min : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the required attribute bound to this directive.\n   */\n  required;\n  /** @internal */\n  inputName = 'required';\n  /** @internal */\n  normalizeInput = booleanAttribute;\n  /** @internal */\n  createValidator = input => requiredValidator;\n  /** @docs-private */\n  enabled(input) {\n    return input;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵRequiredValidator_BaseFactory;\n    return function RequiredValidator_Factory(__ngFactoryType__) {\n      return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(__ngFactoryType__ || RequiredValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: RequiredValidator,\n    selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n    hostVars: 1,\n    hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n      }\n    },\n    inputs: {\n      required: \"required\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n      providers: [REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    required: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n  /** @internal */\n  createValidator = input => requiredTrueValidator;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵCheckboxRequiredValidator_BaseFactory;\n    return function CheckboxRequiredValidator_Factory(__ngFactoryType__) {\n      return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(__ngFactoryType__ || CheckboxRequiredValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CheckboxRequiredValidator,\n    selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n      providers: [CHECKBOX_REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      },\n      standalone: false\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the email attribute bound to this directive.\n   */\n  email;\n  /** @internal */\n  inputName = 'email';\n  /** @internal */\n  normalizeInput = booleanAttribute;\n  /** @internal */\n  createValidator = input => emailValidator;\n  /** @docs-private */\n  enabled(input) {\n    return input;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵEmailValidator_BaseFactory;\n    return function EmailValidator_Factory(__ngFactoryType__) {\n      return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(__ngFactoryType__ || EmailValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: EmailValidator,\n    selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n    inputs: {\n      email: \"email\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EmailValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n      providers: [EMAIL_VALIDATOR],\n      standalone: false\n    }]\n  }], null, {\n    email: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the minimum length bound to this directive.\n   */\n  minlength;\n  /** @internal */\n  inputName = 'minlength';\n  /** @internal */\n  normalizeInput = input => toInteger(input);\n  /** @internal */\n  createValidator = minlength => minLengthValidator(minlength);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMinLengthValidator_BaseFactory;\n    return function MinLengthValidator_Factory(__ngFactoryType__) {\n      return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(__ngFactoryType__ || MinLengthValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MinLengthValidator,\n    selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n      }\n    },\n    inputs: {\n      minlength: \"minlength\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n      providers: [MIN_LENGTH_VALIDATOR],\n      host: {\n        '[attr.minlength]': '_enabled ? minlength : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    minlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the maximum length bound to this directive.\n   */\n  maxlength;\n  /** @internal */\n  inputName = 'maxlength';\n  /** @internal */\n  normalizeInput = input => toInteger(input);\n  /** @internal */\n  createValidator = maxlength => maxLengthValidator(maxlength);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMaxLengthValidator_BaseFactory;\n    return function MaxLengthValidator_Factory(__ngFactoryType__) {\n      return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(__ngFactoryType__ || MaxLengthValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MaxLengthValidator,\n    selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n      }\n    },\n    inputs: {\n      maxlength: \"maxlength\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaxLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n      providers: [MAX_LENGTH_VALIDATOR],\n      host: {\n        '[attr.maxlength]': '_enabled ? maxlength : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    maxlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n  /**\n   * @description\n   * Tracks changes to the pattern bound to this directive.\n   */\n  pattern; // This input is always defined, since the name matches selector.\n  /** @internal */\n  inputName = 'pattern';\n  /** @internal */\n  normalizeInput = input => input;\n  /** @internal */\n  createValidator = input => patternValidator(input);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵPatternValidator_BaseFactory;\n    return function PatternValidator_Factory(__ngFactoryType__) {\n      return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(__ngFactoryType__ || PatternValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PatternValidator,\n    selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n    hostVars: 1,\n    hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n      }\n    },\n    inputs: {\n      pattern: \"pattern\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PatternValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n      providers: [PATTERN_VALIDATOR],\n      host: {\n        '[attr.pattern]': '_enabled ? pattern : null'\n      },\n      standalone: false\n    }]\n  }], null, {\n    pattern: [{\n      type: Input\n    }]\n  });\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n  static ɵfac = function ɵInternalFormsSharedModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ɵInternalFormsSharedModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ɵInternalFormsSharedModule,\n    declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator],\n    exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: SHARED_FORM_DIRECTIVES,\n      exports: SHARED_FORM_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```ts\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n  useNonNullable = false;\n  /**\n   * @description\n   * Returns a FormBuilder in which automatically constructed `FormControl` elements\n   * have `{nonNullable: true}` and are non-nullable.\n   *\n   * **Constructing non-nullable controls**\n   *\n   * When constructing a control, it will be non-nullable, and will reset to its initial value.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.control('Alex'); // FormControl<string>\n   * name.reset();\n   * console.log(name); // 'Alex'\n   * ```\n   *\n   * **Constructing non-nullable groups or arrays**\n   *\n   * When constructing a group or array, all automatically created inner controls will be\n   * non-nullable, and will reset to their initial values.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n   * name.reset();\n   * console.log(name); // {who: 'Alex'}\n   * ```\n   * **Constructing *nullable* fields on groups or arrays**\n   *\n   * It is still possible to have a nullable field. In particular, any `FormControl` which is\n   * *already* constructed will not be altered. For example:\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * // FormGroup<{who: FormControl<string|null>}>\n   * let name = nnfb.group({who: new FormControl('Alex')});\n   * name.reset(); console.log(name); // {who: null}\n   * ```\n   *\n   * Because the inner control is constructed explicitly by the caller, the builder has\n   * no control over how it is created, and cannot exclude the `null`.\n   */\n  get nonNullable() {\n    const nnfb = new FormBuilder();\n    nnfb.useNonNullable = true;\n    return nnfb;\n  }\n  group(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    let newOptions = {};\n    if (isAbstractControlOptions(options)) {\n      // `options` are `AbstractControlOptions`\n      newOptions = options;\n    } else if (options !== null) {\n      // `options` are legacy form group options\n      newOptions.validators = options.validator;\n      newOptions.asyncValidators = options.asyncValidator;\n    }\n    return new FormGroup(reducedControls, newOptions);\n  }\n  /**\n   * @description\n   * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n   * containing all the keys and corresponding inner control types.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param options Configuration options object for the `FormRecord`. The object should have the\n   * `AbstractControlOptions` type and might contain the following fields:\n   * * `validators`: A synchronous validator function, or an array of validator functions.\n   * * `asyncValidators`: A single async validator or array of async validator functions.\n   * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n   * | submit').\n   */\n  record(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormRecord(reducedControls, options);\n  }\n  /**\n   * @description\n   * Constructs a new `FormControl` with the given state, validators and options. Sets\n   * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n   * control will be nullable. Accepts a single generic argument, which is the type  of the\n   * control's value.\n   *\n   * @param formState Initializes the control with an initial state value, or\n   * with an object that contains both a value and a disabled status.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or a `FormControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   *\n   * @usageNotes\n   *\n   * ### Initialize a control as disabled\n   *\n   * The following example returns a control with an initial value in a disabled state.\n   *\n   * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    let newOptions = {};\n    if (!this.useNonNullable) {\n      return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    if (isAbstractControlOptions(validatorOrOpts)) {\n      // If the second argument is options, then they are copied.\n      newOptions = validatorOrOpts;\n    } else {\n      // If the other arguments are validators, they are copied into an options object.\n      newOptions.validators = validatorOrOpts;\n      newOptions.asyncValidators = asyncValidator;\n    }\n    return new FormControl(formState, {\n      ...newOptions,\n      nonNullable: true\n    });\n  }\n  /**\n   * Constructs a new `FormArray` from the given array of configurations,\n   * validators and options. Accepts a single generic argument, which is the type of each control\n   * inside the array.\n   *\n   * @param controls An array of child controls or control configs. Each child control is given an\n   *     index when it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n   *     `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions.\n   */\n  array(controls, validatorOrOpts, asyncValidator) {\n    const createdControls = controls.map(c => this._createControl(c));\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n  }\n  /** @internal */\n  _reduceControls(controls) {\n    const createdControls = {};\n    Object.keys(controls).forEach(controlName => {\n      createdControls[controlName] = this._createControl(controls[controlName]);\n    });\n    return createdControls;\n  }\n  /** @internal */\n  _createControl(controls) {\n    if (controls instanceof FormControl) {\n      return controls;\n    } else if (controls instanceof AbstractControl) {\n      // A control; just return it\n      return controls;\n    } else if (Array.isArray(controls)) {\n      // ControlConfig Tuple\n      const value = controls[0];\n      const validator = controls.length > 1 ? controls[1] : null;\n      const asyncValidator = controls.length > 2 ? controls[2] : null;\n      return this.control(value, validator, asyncValidator);\n    } else {\n      // T or FormControlState<T>\n      return this.control(controls);\n    }\n  }\n  static ɵfac = function FormBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormBuilder)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FormBuilder,\n    factory: FormBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n  static ɵfac = function NonNullableFormBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NonNullableFormBuilder)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NonNullableFormBuilder,\n    factory: () => (() => inject(FormBuilder).nonNullable)(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NonNullableFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(FormBuilder).nonNullable\n    }]\n  }], null, null);\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n  group(controlsConfig, options = null) {\n    return super.group(controlsConfig, options);\n  }\n  /**\n   * Like `FormBuilder#control`, except the resulting control is untyped.\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    return super.control(formState, validatorOrOpts, asyncValidator);\n  }\n  /**\n   * Like `FormBuilder#array`, except the resulting array is untyped.\n   */\n  array(controlsConfig, validatorOrOpts, asyncValidator) {\n    return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵUntypedFormBuilder_BaseFactory;\n    return function UntypedFormBuilder_Factory(__ngFactoryType__) {\n      return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(__ngFactoryType__ || UntypedFormBuilder);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UntypedFormBuilder,\n    factory: UntypedFormBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UntypedFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.1.3');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n  /**\n   * @description\n   * Provides options for configuring the forms module.\n   *\n   * @param opts An object of configuration options\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: FormsModule,\n      providers: [{\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static ɵfac = function FormsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FormsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormsModule,\n    declarations: [NgModel, NgModelGroup, NgForm],\n    exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ɵInternalFormsSharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n      exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [{\n        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n        useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n      }, {\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static ɵfac = function ReactiveFormsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ReactiveFormsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ReactiveFormsModule,\n    declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName],\n    exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ɵInternalFormsSharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReactiveFormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n      exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { DOCUMENT, isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, PLATFORM_ID, ElementRef, Injector, ChangeDetectorRef, Renderer2, Input, Directive } from '@angular/core';\nimport { ThemeService, Theme } from '@primeuix/styled';\nimport { uuid, getKeyValue, cn } from '@primeuix/utils';\nimport { BaseStyle, Base } from 'primeng/base';\nimport { PrimeNG } from 'primeng/config';\nclass BaseComponentStyle extends BaseStyle {\n  name = 'common';\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseComponentStyle_BaseFactory;\n    return function BaseComponentStyle_Factory(__ngFactoryType__) {\n      return (ɵBaseComponentStyle_BaseFactory || (ɵBaseComponentStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BaseComponentStyle)))(__ngFactoryType__ || BaseComponentStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BaseComponentStyle,\n    factory: BaseComponentStyle.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseComponentStyle, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass BaseComponent {\n  document = inject(DOCUMENT);\n  platformId = inject(PLATFORM_ID);\n  el = inject(ElementRef);\n  injector = inject(Injector);\n  cd = inject(ChangeDetectorRef);\n  renderer = inject(Renderer2);\n  config = inject(PrimeNG);\n  baseComponentStyle = inject(BaseComponentStyle);\n  baseStyle = inject(BaseStyle);\n  scopedStyleEl;\n  rootEl;\n  dt;\n  get styleOptions() {\n    return {\n      nonce: this.config?.csp().nonce\n    };\n  }\n  get _name() {\n    return this.constructor.name.replace(/^_/, '').toLowerCase();\n  }\n  get componentStyle() {\n    return this['_componentStyle'];\n  }\n  attrSelector = uuid('pc');\n  themeChangeListeners = [];\n  _getHostInstance(instance) {\n    if (instance) {\n      return instance ? this['hostName'] ? instance['name'] === this['hostName'] ? instance : this._getHostInstance(instance.parentInstance) : instance.parentInstance : undefined;\n    }\n  }\n  _getOptionValue(options, key = '', params = {}) {\n    return getKeyValue(options, key, params);\n  }\n  ngOnInit() {\n    if (this.document) {\n      this._loadCoreStyles();\n      this._loadStyles();\n    }\n  }\n  ngAfterViewInit() {\n    this.rootEl = this.el?.nativeElement;\n    if (this.rootEl) {\n      this.rootEl?.setAttribute(this.attrSelector, '');\n    }\n  }\n  ngOnChanges(changes) {\n    if (this.document && !isPlatformServer(this.platformId)) {\n      const {\n        dt\n      } = changes;\n      if (dt && dt.currentValue) {\n        this._loadScopedThemeStyles(dt.currentValue);\n        this._themeChangeListener(() => this._loadScopedThemeStyles(dt.currentValue));\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._unloadScopedThemeStyles();\n    // @ts-ignore\n    this.themeChangeListeners.forEach(callback => ThemeService.off('theme:change', callback));\n  }\n  _loadStyles() {\n    const _load = () => {\n      if (!Base.isStyleNameLoaded('base')) {\n        this.baseStyle.loadGlobalCSS(this.styleOptions);\n        Base.setLoadedStyleName('base');\n      }\n      this._loadThemeStyles();\n      // @todo update config.theme()\n    };\n    _load();\n    this._themeChangeListener(() => _load());\n  }\n  _loadCoreStyles() {\n    if (!Base.isStyleNameLoaded('base') && this.componentStyle?.name) {\n      this.baseComponentStyle.loadCSS(this.styleOptions);\n      this.componentStyle && this.componentStyle?.loadCSS(this.styleOptions);\n      Base.setLoadedStyleName(this.componentStyle?.name);\n    }\n  }\n  _loadThemeStyles() {\n    // common\n    if (!Theme.isStyleNameLoaded('common')) {\n      const {\n        primitive,\n        semantic,\n        global,\n        style\n      } = this.componentStyle?.getCommonTheme?.() || {};\n      this.baseStyle.load(primitive?.css, {\n        name: 'primitive-variables',\n        ...this.styleOptions\n      });\n      this.baseStyle.load(semantic?.css, {\n        name: 'semantic-variables',\n        ...this.styleOptions\n      });\n      this.baseStyle.load(global?.css, {\n        name: 'global-variables',\n        ...this.styleOptions\n      });\n      this.baseStyle.loadGlobalTheme({\n        name: 'global-style',\n        ...this.styleOptions\n      }, style);\n      Theme.setLoadedStyleName('common');\n    }\n    // component\n    if (!Theme.isStyleNameLoaded(this.componentStyle?.name) && this.componentStyle?.name) {\n      const {\n        css,\n        style\n      } = this.componentStyle?.getComponentTheme?.() || {};\n      this.componentStyle?.load(css, {\n        name: `${this.componentStyle?.name}-variables`,\n        ...this.styleOptions\n      });\n      this.componentStyle?.loadTheme({\n        name: `${this.componentStyle?.name}-style`,\n        ...this.styleOptions\n      }, style);\n      Theme.setLoadedStyleName(this.componentStyle?.name);\n    }\n    // layer order\n    if (!Theme.isStyleNameLoaded('layer-order')) {\n      const layerOrder = this.componentStyle?.getLayerOrderThemeCSS?.();\n      this.baseStyle.load(layerOrder, {\n        name: 'layer-order',\n        first: true,\n        ...this.styleOptions\n      });\n      Theme.setLoadedStyleName('layer-order');\n    }\n    if (this.dt) {\n      this._loadScopedThemeStyles(this.dt);\n      this._themeChangeListener(() => this._loadScopedThemeStyles(this.dt));\n    }\n  }\n  _loadScopedThemeStyles(preset) {\n    const {\n      css\n    } = this.componentStyle?.getPresetTheme?.(preset, `[${this.attrSelector}]`) || {};\n    const scopedStyle = this.componentStyle?.load(css, {\n      name: `${this.attrSelector}-${this.componentStyle?.name}`,\n      ...this.styleOptions\n    });\n    this.scopedStyleEl = scopedStyle?.el;\n  }\n  _unloadScopedThemeStyles() {\n    this.scopedStyleEl?.remove();\n  }\n  _themeChangeListener(callback = () => {}) {\n    Base.clearLoadedStyleNames();\n    ThemeService.on('theme:change', callback);\n    this.themeChangeListeners.push(callback);\n  }\n  cx(key, params = {}) {\n    return cn(this._getOptionValue(this.$style?.classes, key, {\n      instance: this,\n      ...params\n    }));\n  }\n  sx(key = '', when = true, params = {}) {\n    if (when) {\n      const self = this._getOptionValue(this.$style?.inlineStyles, key, {\n        instance: this,\n        ...params\n      });\n      //const base = this._getOptionValue(BaseComponentStyle.inlineStyles, key, { ...this.$params, ...params });\n      return self;\n    }\n    return undefined;\n  }\n  get parent() {\n    return this['parentInstance'];\n  }\n  get $style() {\n    return this.parent ? this.parent.componentStyle : this.componentStyle;\n  }\n  cn = cn;\n  static ɵfac = function BaseComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BaseComponent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseComponent,\n    inputs: {\n      dt: \"dt\"\n    },\n    features: [i0.ɵɵProvidersFeature([BaseComponentStyle, BaseStyle]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseComponent, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      providers: [BaseComponentStyle, BaseStyle]\n    }]\n  }], null, {\n    dt: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseComponent, BaseComponentStyle };\n","import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, effect, Directive, NgModule } from '@angular/core';\nimport { removeClass, getHeight, getWidth, getOuterWidth, getOuterHeight, getOffset, addClass, remove } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/ripple';\nimport { BaseStyle } from 'primeng/base';\nconst theme = /*css*/`\n    ${style}\n    /* For PrimeNG */\n    .p-ripple {\n        overflow: hidden;\n        position: relative;\n    }\n\n    .p-ripple-disabled .p-ink {\n        display: none !important;\n    }\n\n    @keyframes ripple {\n        100% {\n            opacity: 0;\n            transform: scale(2.5);\n        }\n    }\n`;\nconst classes = {\n  root: 'p-ink'\n};\nclass RippleStyle extends BaseStyle {\n  name = 'ripple';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵRippleStyle_BaseFactory;\n    return function RippleStyle_Factory(__ngFactoryType__) {\n      return (ɵRippleStyle_BaseFactory || (ɵRippleStyle_BaseFactory = i0.ɵɵgetInheritedFactory(RippleStyle)))(__ngFactoryType__ || RippleStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: RippleStyle,\n    factory: RippleStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RippleStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Ripple directive adds ripple effect to the host element.\n *\n * [Live Demo](https://www.primeng.org/ripple)\n *\n * @module ripplestyle\n *\n */\nvar RippleClasses;\n(function (RippleClasses) {\n  /**\n   * Class name of the root element\n   */\n  RippleClasses[\"root\"] = \"p-ink\";\n})(RippleClasses || (RippleClasses = {}));\n\n/**\n * Ripple directive adds ripple effect to the host element.\n * @group Components\n */\nclass Ripple extends BaseComponent {\n  zone = inject(NgZone);\n  _componentStyle = inject(RippleStyle);\n  animationListener;\n  mouseDownListener;\n  timeout;\n  constructor() {\n    super();\n    effect(() => {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.config.ripple()) {\n          this.zone.runOutsideAngular(() => {\n            this.create();\n            this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n          });\n        } else {\n          this.remove();\n        }\n      }\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n  onMouseDown(event) {\n    let ink = this.getInk();\n    if (!ink || this.document.defaultView?.getComputedStyle(ink, null).display === 'none') {\n      return;\n    }\n    removeClass(ink, 'p-ink-active');\n    if (!getHeight(ink) && !getWidth(ink)) {\n      let d = Math.max(getOuterWidth(this.el.nativeElement), getOuterHeight(this.el.nativeElement));\n      ink.style.height = d + 'px';\n      ink.style.width = d + 'px';\n    }\n    let offset = getOffset(this.el.nativeElement);\n    let x = event.pageX - offset.left + this.document.body.scrollTop - getWidth(ink) / 2;\n    let y = event.pageY - offset.top + this.document.body.scrollLeft - getHeight(ink) / 2;\n    this.renderer.setStyle(ink, 'top', y + 'px');\n    this.renderer.setStyle(ink, 'left', x + 'px');\n    addClass(ink, 'p-ink-active');\n    this.timeout = setTimeout(() => {\n      let ink = this.getInk();\n      if (ink) {\n        removeClass(ink, 'p-ink-active');\n      }\n    }, 401);\n  }\n  getInk() {\n    const children = this.el.nativeElement.children;\n    for (let i = 0; i < children.length; i++) {\n      if (typeof children[i].className === 'string' && children[i].className.indexOf('p-ink') !== -1) {\n        return children[i];\n      }\n    }\n    return null;\n  }\n  resetInk() {\n    let ink = this.getInk();\n    if (ink) {\n      removeClass(ink, 'p-ink-active');\n    }\n  }\n  onAnimationEnd(event) {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    removeClass(event.currentTarget, 'p-ink-active');\n  }\n  create() {\n    let ink = this.renderer.createElement('span');\n    this.renderer.addClass(ink, 'p-ink');\n    this.renderer.appendChild(this.el.nativeElement, ink);\n    this.renderer.setAttribute(ink, 'aria-hidden', 'true');\n    this.renderer.setAttribute(ink, 'role', 'presentation');\n    if (!this.animationListener) {\n      this.animationListener = this.renderer.listen(ink, 'animationend', this.onAnimationEnd.bind(this));\n    }\n  }\n  remove() {\n    let ink = this.getInk();\n    if (ink) {\n      this.mouseDownListener && this.mouseDownListener();\n      this.animationListener && this.animationListener();\n      this.mouseDownListener = null;\n      this.animationListener = null;\n      remove(ink);\n    }\n  }\n  ngOnDestroy() {\n    if (this.config && this.config.ripple()) {\n      this.remove();\n    }\n    super.ngOnDestroy();\n  }\n  static ɵfac = function Ripple_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Ripple)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Ripple,\n    selectors: [[\"\", \"pRipple\", \"\"]],\n    hostAttrs: [1, \"p-ripple\"],\n    features: [i0.ɵɵProvidersFeature([RippleStyle]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ripple, [{\n    type: Directive,\n    args: [{\n      selector: '[pRipple]',\n      host: {\n        class: 'p-ripple'\n      },\n      standalone: true,\n      providers: [RippleStyle]\n    }]\n  }], () => [], null);\n})();\nclass RippleModule {\n  static ɵfac = function RippleModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || RippleModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: RippleModule,\n    imports: [Ripple],\n    exports: [Ripple]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Ripple],\n      exports: [Ripple]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ripple, RippleClasses, RippleModule, RippleStyle };\n","import * as i0 from '@angular/core';\nimport { signal, computed, Directive } from '@angular/core';\nimport { isNotEmpty } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nclass BaseModelHolder extends BaseComponent {\n  modelValue = signal(undefined, ...(ngDevMode ? [{\n    debugName: \"modelValue\"\n  }] : []));\n  $filled = computed(() => isNotEmpty(this.modelValue()), ...(ngDevMode ? [{\n    debugName: \"$filled\"\n  }] : []));\n  writeModelValue(value) {\n    this.modelValue.set(value);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseModelHolder_BaseFactory;\n    return function BaseModelHolder_Factory(__ngFactoryType__) {\n      return (ɵBaseModelHolder_BaseFactory || (ɵBaseModelHolder_BaseFactory = i0.ɵɵgetInheritedFactory(BaseModelHolder)))(__ngFactoryType__ || BaseModelHolder);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseModelHolder,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseModelHolder, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseModelHolder };\n","import * as i0 from '@angular/core';\nimport { input, booleanAttribute, signal, computed, Directive } from '@angular/core';\nimport { BaseModelHolder } from 'primeng/basemodelholder';\nclass BaseEditableHolder extends BaseModelHolder {\n  /**\n   * There must be a value (if set).\n   * @defaultValue false\n   * @group Props\n   */\n  required = input(undefined, ...(ngDevMode ? [{\n    debugName: \"required\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * When present, it specifies that the component should have invalid state style.\n   * @defaultValue false\n   * @group Props\n   */\n  invalid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"invalid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * When present, it specifies that the component should have disabled state style.\n   * @defaultValue false\n   * @group Props\n   */\n  disabled = input(undefined, ...(ngDevMode ? [{\n    debugName: \"disabled\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * When present, it specifies that the name of the input.\n   * @defaultValue undefined\n   * @group Props\n   */\n  name = input(...(ngDevMode ? [undefined, {\n    debugName: \"name\"\n  }] : []));\n  _disabled = signal(false, ...(ngDevMode ? [{\n    debugName: \"_disabled\"\n  }] : []));\n  $disabled = computed(() => this.disabled() || this._disabled(), ...(ngDevMode ? [{\n    debugName: \"$disabled\"\n  }] : []));\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  writeDisabledState(value) {\n    this._disabled.set(value);\n  }\n  writeControlValue(value, setModelValue) {\n    // NOOP - this method should be overridden in the derived classes\n  }\n  /**** Angular ControlValueAccessors ****/\n  writeValue(value) {\n    this.writeControlValue(value, this.writeModelValue.bind(this));\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.writeDisabledState(val);\n    this.cd.markForCheck();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseEditableHolder_BaseFactory;\n    return function BaseEditableHolder_Factory(__ngFactoryType__) {\n      return (ɵBaseEditableHolder_BaseFactory || (ɵBaseEditableHolder_BaseFactory = i0.ɵɵgetInheritedFactory(BaseEditableHolder)))(__ngFactoryType__ || BaseEditableHolder);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseEditableHolder,\n    inputs: {\n      required: [1, \"required\"],\n      invalid: [1, \"invalid\"],\n      disabled: [1, \"disabled\"],\n      name: [1, \"name\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseEditableHolder, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseEditableHolder };\n","import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, input, booleanAttribute, EventEmitter, inject, numberAttribute, ContentChildren, ContentChild, Output, Input, HostListener, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { style } from '@primeuix/styles/togglebutton';\nimport { BaseStyle } from 'primeng/base';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseEditableHolder } from 'primeng/baseeditableholder';\nimport * as i1 from 'primeng/ripple';\nimport { Ripple } from 'primeng/ripple';\nconst _c0 = [\"icon\"];\nconst _c1 = [\"content\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction ToggleButton_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.cn(ctx_r0.cx(\"icon\"), ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon, ctx_r0.iconPos === \"left\" ? ctx_r0.cx(\"iconLeft\") : ctx_r0.cx(\"iconRight\")));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, ToggleButton_Conditional_2_Conditional_0_Conditional_0_Template, 1, 3, \"span\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional(ctx_r0.onIcon || ctx_r0.offIcon ? 0 : -1);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToggleButton_Conditional_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToggleButton_Conditional_2_Conditional_1_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0._iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r0.checked));\n  }\n}\nfunction ToggleButton_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, ToggleButton_Conditional_2_Conditional_0_Template, 1, 1)(1, ToggleButton_Conditional_2_Conditional_1_Template, 1, 4, \"ng-container\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(!ctx_r0.iconTemplate ? 0 : 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r0.cx(\"label\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.checked ? ctx_r0.hasOnLabel ? ctx_r0.onLabel : \"\\xA0\" : ctx_r0.hasOffLabel ? ctx_r0.offLabel : \"\\xA0\");\n  }\n}\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG (iconPos) */\n    .p-togglebutton-icon-right {\n        order: 1;\n    }\n\n    .p-togglebutton.ng-invalid.ng-dirty {\n        border-color: dt('togglebutton.invalid.border.color');\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-togglebutton p-component', {\n    'p-togglebutton-checked': instance.checked,\n    'p-invalid': instance.invalid(),\n    'p-disabled': instance.$disabled(),\n    'p-togglebutton-sm p-inputfield-sm': instance.size === 'small',\n    'p-togglebutton-lg p-inputfield-lg': instance.size === 'large',\n    'p-togglebutton-fluid': instance.fluid()\n  }],\n  content: 'p-togglebutton-content',\n  icon: 'p-togglebutton-icon',\n  iconLeft: 'p-togglebutton-icon-left',\n  iconRight: 'p-togglebutton-icon-right',\n  label: 'p-togglebutton-label'\n};\nclass ToggleButtonStyle extends BaseStyle {\n  name = 'togglebutton';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵToggleButtonStyle_BaseFactory;\n    return function ToggleButtonStyle_Factory(__ngFactoryType__) {\n      return (ɵToggleButtonStyle_BaseFactory || (ɵToggleButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ToggleButtonStyle)))(__ngFactoryType__ || ToggleButtonStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToggleButtonStyle,\n    factory: ToggleButtonStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButtonStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * ToggleButton is used to select a boolean value using a button.\n *\n * [Live Demo](https://www.primeng.org/togglebutton/)\n *\n * @module togglebuttonstyle\n *\n */\nvar ToggleButtonClasses;\n(function (ToggleButtonClasses) {\n  /**\n   * Class name of the root element\n   */\n  ToggleButtonClasses[\"root\"] = \"p-togglebutton\";\n  /**\n   * Class name of the icon element\n   */\n  ToggleButtonClasses[\"icon\"] = \"p-togglebutton-icon\";\n  /**\n   * Class name of the left icon\n   */\n  ToggleButtonClasses[\"iconLeft\"] = \"p-togglebutton-icon-left\";\n  /**\n   * Class name of the right icon\n   */\n  ToggleButtonClasses[\"iconRight\"] = \"p-togglebutton-icon-right\";\n  /**\n   * Class name of the label element\n   */\n  ToggleButtonClasses[\"label\"] = \"p-togglebutton-label\";\n})(ToggleButtonClasses || (ToggleButtonClasses = {}));\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n/**\n * ToggleButton is used to select a boolean value using a button.\n * @group Components\n */\nclass ToggleButton extends BaseEditableHolder {\n  onKeyDown(event) {\n    switch (event.code) {\n      case 'Enter':\n        this.toggle(event);\n        event.preventDefault();\n        break;\n      case 'Space':\n        this.toggle(event);\n        event.preventDefault();\n        break;\n    }\n  }\n  toggle(event) {\n    if (!this.$disabled() && !(this.allowEmpty === false && this.checked)) {\n      this.checked = !this.checked;\n      this.writeModelValue(this.checked);\n      this.onModelChange(this.checked);\n      this.onModelTouched();\n      this.onChange.emit({\n        originalEvent: event,\n        checked: this.checked\n      });\n      this.cd.markForCheck();\n    }\n  }\n  /**\n   * Label for the on state.\n   * @group Props\n   */\n  onLabel = 'Yes';\n  /**\n   * Label for the off state.\n   * @group Props\n   */\n  offLabel = 'No';\n  /**\n   * Icon for the on state.\n   * @group Props\n   */\n  onIcon;\n  /**\n   * Icon for the off state.\n   * @group Props\n   */\n  offIcon;\n  /**\n   * Defines a string that labels the input for accessibility.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Style class of the element.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Identifier of the focus input to match a label defined for the component.\n   * @group Props\n   */\n  inputId;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * Position of the icon.\n   * @group Props\n   */\n  iconPos = 'left';\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Defines the size of the component.\n   * @group Props\n   */\n  size;\n  /**\n   * Whether selection can not be cleared.\n   * @group Props\n   */\n  allowEmpty;\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue undefined\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * Callback to invoke on value change.\n   * @param {ToggleButtonChangeEvent} event - Custom change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Custom icon template.\n   * @group Templates\n   */\n  iconTemplate;\n  /**\n   * Custom content template.\n   * @group Templates\n   */\n  contentTemplate;\n  templates;\n  checked = false;\n  _componentStyle = inject(ToggleButtonStyle);\n  onBlur() {\n    this.onModelTouched();\n  }\n  get hasOnLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n  get hasOffLabel() {\n    return this.onLabel && this.onLabel.length > 0;\n  }\n  get active() {\n    return this.checked === true;\n  }\n  _iconTemplate;\n  _contentTemplate;\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'icon':\n          this._iconTemplate = item.template;\n          break;\n        case 'content':\n          this._contentTemplate = item.template;\n          break;\n        default:\n          this._contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  /**\n   * @override\n   *\n   * @see {@link BaseEditableHolder.writeControlValue}\n   * Writes the value to the control.\n   */\n  writeControlValue(value, setModelValue) {\n    this.checked = value;\n    setModelValue(value);\n    this.cd.markForCheck();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵToggleButton_BaseFactory;\n    return function ToggleButton_Factory(__ngFactoryType__) {\n      return (ɵToggleButton_BaseFactory || (ɵToggleButton_BaseFactory = i0.ɵɵgetInheritedFactory(ToggleButton)))(__ngFactoryType__ || ToggleButton);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToggleButton,\n    selectors: [[\"p-toggleButton\"], [\"p-togglebutton\"], [\"p-toggle-button\"]],\n    contentQueries: function ToggleButton_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function ToggleButton_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function ToggleButton_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"click\", function ToggleButton_click_HostBindingHandler($event) {\n          return ctx.toggle($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-pressed\", ctx.checked)(\"role\", \"button\")(\"tabindex\", !ctx.$disabled() ? 0 : -1);\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      onLabel: \"onLabel\",\n      offLabel: \"offLabel\",\n      onIcon: \"onIcon\",\n      offIcon: \"offIcon\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      styleClass: \"styleClass\",\n      inputId: \"inputId\",\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      iconPos: \"iconPos\",\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n      size: \"size\",\n      allowEmpty: \"allowEmpty\",\n      fluid: [1, \"fluid\"]\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButtonStyle]), i0.ɵɵHostDirectivesFeature([i1.Ripple]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 7,\n    consts: [[4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"class\"]],\n    template: function ToggleButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\");\n        i0.ɵɵtemplate(1, ToggleButton_ng_container_1_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵconditionalCreate(2, ToggleButton_Conditional_2_Template, 4, 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"content\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || ctx._contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c2, ctx.checked));\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx.contentTemplate ? 2 : -1);\n      }\n    },\n    dependencies: [CommonModule, i2.NgTemplateOutlet, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-toggleButton, p-togglebutton, p-toggle-button',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      hostDirectives: [{\n        directive: Ripple\n      }],\n      host: {\n        '[class]': \"cn(cx('root'), styleClass)\",\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-pressed]': 'checked',\n        '[attr.role]': '\"button\"',\n        '[attr.tabindex]': '!$disabled() ? 0 : -1'\n      },\n      template: `<span [class]=\"cx('content')\">\n        <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate; context: { $implicit: checked }\"></ng-container>\n        @if (!contentTemplate) {\n            @if (!iconTemplate) {\n                @if (onIcon || offIcon) {\n                    <span [class]=\"cn(cx('icon'), checked ? this.onIcon : this.offIcon, iconPos === 'left' ? cx('iconLeft') : cx('iconRight'))\" [attr.data-pc-section]=\"'icon'\"></span>\n                }\n            } @else {\n                <ng-container *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { $implicit: checked }\"></ng-container>\n            }\n            <span [class]=\"cx('label')\" [attr.data-pc-section]=\"'label'\">{{ checked ? (hasOnLabel ? onLabel : ' ') : hasOffLabel ? offLabel : ' ' }}</span>\n        }\n    </span>`,\n      providers: [TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButtonStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    toggle: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onLabel: [{\n      type: Input\n    }],\n    offLabel: [{\n      type: Input\n    }],\n    onIcon: [{\n      type: Input\n    }],\n    offIcon: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    size: [{\n      type: Input\n    }],\n    allowEmpty: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    iconTemplate: [{\n      type: ContentChild,\n      args: ['icon', {\n        descendants: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: ['content', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ToggleButtonModule {\n  static ɵfac = function ToggleButtonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ToggleButtonModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToggleButtonModule,\n    imports: [ToggleButton, SharedModule],\n    exports: [ToggleButton, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ToggleButton, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ToggleButton, SharedModule],\n      exports: [ToggleButton, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonClasses, ToggleButtonModule, ToggleButtonStyle };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, input, booleanAttribute, EventEmitter, inject, numberAttribute, ContentChildren, ContentChild, Output, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { resolveFieldData, equals } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseEditableHolder } from 'primeng/baseeditableholder';\nimport { ToggleButton } from 'primeng/togglebutton';\nimport { style } from '@primeuix/styles/selectbutton';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"item\"];\nconst _c1 = (a0, a1) => ({\n  $implicit: a0,\n  index: a1\n});\nfunction _forTrack0($index, $item) {\n  return this.getOptionLabel($item);\n}\nfunction SelectButton_For_1_Conditional_1_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction SelectButton_For_1_Conditional_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SelectButton_For_1_Conditional_1_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    const option_r3 = ctx_r5.$implicit;\n    const ɵ$index_1_r4 = ctx_r5.$index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.itemTemplate || ctx_r4._itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c1, option_r3, ɵ$index_1_r4));\n  }\n}\nfunction SelectButton_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SelectButton_For_1_Conditional_1_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n  }\n}\nfunction SelectButton_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-togglebutton\", 2);\n    i0.ɵɵlistener(\"onChange\", function SelectButton_For_1_Template_p_togglebutton_onChange_0_listener($event) {\n      const ctx_r1 = i0.ɵɵrestoreView(_r1);\n      const option_r3 = ctx_r1.$implicit;\n      const ɵ$index_1_r4 = ctx_r1.$index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onOptionSelect($event, option_r3, ɵ$index_1_r4));\n    });\n    i0.ɵɵconditionalCreate(1, SelectButton_For_1_Conditional_1_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"autofocus\", ctx_r4.autofocus)(\"styleClass\", ctx_r4.styleClass)(\"ngModel\", ctx_r4.isSelected(option_r3))(\"onLabel\", ctx_r4.getOptionLabel(option_r3))(\"offLabel\", ctx_r4.getOptionLabel(option_r3))(\"disabled\", ctx_r4.$disabled() || ctx_r4.isOptionDisabled(option_r3))(\"allowEmpty\", ctx_r4.getAllowEmpty())(\"size\", ctx_r4.size())(\"fluid\", ctx_r4.fluid());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r4.itemTemplate || ctx_r4._itemTemplate ? 1 : -1);\n  }\n}\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG */\n    .p-selectbutton.ng-invalid.ng-dirty {\n        outline: 1px solid dt('selectbutton.invalid.border.color');\n        outline-offset: 0;\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-selectbutton p-component', {\n    'p-invalid': instance.invalid(),\n    'p-selectbutton-fluid': instance.fluid()\n  }]\n};\nclass SelectButtonStyle extends BaseStyle {\n  name = 'selectbutton';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSelectButtonStyle_BaseFactory;\n    return function SelectButtonStyle_Factory(__ngFactoryType__) {\n      return (ɵSelectButtonStyle_BaseFactory || (ɵSelectButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SelectButtonStyle)))(__ngFactoryType__ || SelectButtonStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SelectButtonStyle,\n    factory: SelectButtonStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectButtonStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * SelectButton is used to choose single or multiple items from a list using buttons.\n *\n * [Live Demo](https://www.primeng.org/selectbutton/)\n *\n * @module selectbuttonstyle\n *\n */\nvar SelectButtonClasses;\n(function (SelectButtonClasses) {\n  /**\n   * Class name of the root element\n   */\n  SelectButtonClasses[\"root\"] = \"p-selectbutton\";\n})(SelectButtonClasses || (SelectButtonClasses = {}));\nconst SELECTBUTTON_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectButton),\n  multi: true\n};\n/**\n * SelectButton is used to choose single or multiple items from a list using buttons.\n * @group Components\n */\nclass SelectButton extends BaseEditableHolder {\n  /**\n   * An array of selectitems to display as the available options.\n   * @group Props\n   */\n  options;\n  /**\n   * Name of the label field of an option.\n   * @group Props\n   */\n  optionLabel;\n  /**\n   * Name of the value field of an option.\n   * @group Props\n   */\n  optionValue;\n  /**\n   * Name of the disabled field of an option.\n   * @group Props\n   */\n  optionDisabled;\n  /**\n   * Whether selection can be cleared.\n   * @group Props\n   */\n  get unselectable() {\n    return this._unselectable;\n  }\n  _unselectable = false;\n  set unselectable(value) {\n    this._unselectable = value;\n    this.allowEmpty = !value;\n  }\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * When specified, allows selecting multiple values.\n   * @group Props\n   */\n  multiple;\n  /**\n   * Whether selection can not be cleared.\n   * @group Props\n   */\n  allowEmpty = true;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * A property to uniquely identify a value in options.\n   * @group Props\n   */\n  dataKey;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Specifies the size of the component.\n   * @defaultValue undefined\n   * @group Props\n   */\n  size = input(...(ngDevMode ? [undefined, {\n    debugName: \"size\"\n  }] : []));\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue undefined\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * Callback to invoke on input click.\n   * @param {SelectButtonOptionClickEvent} event - Custom click event.\n   * @group Emits\n   */\n  onOptionClick = new EventEmitter();\n  /**\n   * Callback to invoke on selection change.\n   * @param {SelectButtonChangeEvent} event - Custom change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Template of an item in the list.\n   * @group Templates\n   */\n  itemTemplate;\n  _itemTemplate;\n  get equalityKey() {\n    return this.optionValue ? null : this.dataKey;\n  }\n  value;\n  focusedIndex = 0;\n  _componentStyle = inject(SelectButtonStyle);\n  getAllowEmpty() {\n    if (this.multiple) {\n      return this.allowEmpty || this.value?.length !== 1;\n    }\n    return this.allowEmpty;\n  }\n  getOptionLabel(option) {\n    return this.optionLabel ? resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n  }\n  getOptionValue(option) {\n    return this.optionValue ? resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n  }\n  isOptionDisabled(option) {\n    return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n  }\n  onOptionSelect(event, option, index) {\n    if (this.$disabled() || this.isOptionDisabled(option)) {\n      return;\n    }\n    let selected = this.isSelected(option);\n    if (selected && this.unselectable) {\n      return;\n    }\n    let optionValue = this.getOptionValue(option);\n    let newValue;\n    if (this.multiple) {\n      if (selected) newValue = this.value.filter(val => !equals(val, optionValue, this.equalityKey));else newValue = this.value ? [...this.value, optionValue] : [optionValue];\n    } else {\n      if (selected && !this.allowEmpty) {\n        return;\n      }\n      newValue = selected ? null : optionValue;\n    }\n    this.focusedIndex = index;\n    this.value = newValue;\n    this.writeModelValue(this.value);\n    this.onModelChange(this.value);\n    this.onChange.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    this.onOptionClick.emit({\n      originalEvent: event,\n      option: option,\n      index: index\n    });\n  }\n  changeTabIndexes(event, direction) {\n    let firstTabableChild, index;\n    for (let i = 0; i <= this.el.nativeElement.children.length - 1; i++) {\n      if (this.el.nativeElement.children[i].getAttribute('tabindex') === '0') firstTabableChild = {\n        elem: this.el.nativeElement.children[i],\n        index: i\n      };\n    }\n    if (direction === 'prev') {\n      if (firstTabableChild.index === 0) index = this.el.nativeElement.children.length - 1;else index = firstTabableChild.index - 1;\n    } else {\n      if (firstTabableChild.index === this.el.nativeElement.children.length - 1) index = 0;else index = firstTabableChild.index + 1;\n    }\n    this.focusedIndex = index;\n    this.el.nativeElement.children[index].focus();\n  }\n  onFocus(event, index) {\n    this.focusedIndex = index;\n  }\n  onBlur() {\n    this.onModelTouched();\n  }\n  removeOption(option) {\n    this.value = this.value.filter(val => !equals(val, this.getOptionValue(option), this.dataKey));\n  }\n  isSelected(option) {\n    let selected = false;\n    const optionValue = this.getOptionValue(option);\n    if (this.multiple) {\n      if (this.value && Array.isArray(this.value)) {\n        for (let val of this.value) {\n          if (equals(val, optionValue, this.dataKey)) {\n            selected = true;\n            break;\n          }\n        }\n      }\n    } else {\n      selected = equals(this.getOptionValue(option), this.value, this.equalityKey);\n    }\n    return selected;\n  }\n  templates;\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this._itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n  /**\n   * @override\n   *\n   * @see {@link BaseEditableHolder.writeControlValue}\n   * Writes the value to the control.\n   */\n  writeControlValue(value, setModelValue) {\n    this.value = value;\n    setModelValue(this.value);\n    this.cd.markForCheck();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSelectButton_BaseFactory;\n    return function SelectButton_Factory(__ngFactoryType__) {\n      return (ɵSelectButton_BaseFactory || (ɵSelectButton_BaseFactory = i0.ɵɵgetInheritedFactory(SelectButton)))(__ngFactoryType__ || SelectButton);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SelectButton,\n    selectors: [[\"p-selectButton\"], [\"p-selectbutton\"], [\"p-select-button\"]],\n    contentQueries: function SelectButton_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function SelectButton_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", \"group\")(\"aria-labelledby\", ctx.ariaLabelledBy)(\"data-pc-section\", \"root\")(\"data-pc-name\", \"selectbutton\");\n        i0.ɵɵclassMap(ctx.cx(\"root\"));\n      }\n    },\n    inputs: {\n      options: \"options\",\n      optionLabel: \"optionLabel\",\n      optionValue: \"optionValue\",\n      optionDisabled: \"optionDisabled\",\n      unselectable: [2, \"unselectable\", \"unselectable\", booleanAttribute],\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      allowEmpty: [2, \"allowEmpty\", \"allowEmpty\", booleanAttribute],\n      styleClass: \"styleClass\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      dataKey: \"dataKey\",\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n      size: [1, \"size\"],\n      fluid: [1, \"fluid\"]\n    },\n    outputs: {\n      onOptionClick: \"onOptionClick\",\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([SELECTBUTTON_VALUE_ACCESSOR, SelectButtonStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"content\", \"\"], [3, \"autofocus\", \"styleClass\", \"ngModel\", \"onLabel\", \"offLabel\", \"disabled\", \"allowEmpty\", \"size\", \"fluid\"], [3, \"onChange\", \"autofocus\", \"styleClass\", \"ngModel\", \"onLabel\", \"offLabel\", \"disabled\", \"allowEmpty\", \"size\", \"fluid\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function SelectButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵrepeaterCreate(0, SelectButton_For_1_Template, 2, 10, \"p-togglebutton\", 1, _forTrack0, true);\n      }\n      if (rf & 2) {\n        i0.ɵɵrepeater(ctx.options);\n      }\n    },\n    dependencies: [ToggleButton, FormsModule, i1.NgControlStatus, i1.NgModel, CommonModule, i2.NgTemplateOutlet, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-selectButton, p-selectbutton, p-select-button',\n      standalone: true,\n      imports: [ToggleButton, FormsModule, CommonModule, SharedModule],\n      template: `\n        @for (option of options; track getOptionLabel(option); let i = $index) {\n            <p-togglebutton\n                [autofocus]=\"autofocus\"\n                [styleClass]=\"styleClass\"\n                [ngModel]=\"isSelected(option)\"\n                [onLabel]=\"this.getOptionLabel(option)\"\n                [offLabel]=\"this.getOptionLabel(option)\"\n                [disabled]=\"$disabled() || isOptionDisabled(option)\"\n                (onChange)=\"onOptionSelect($event, option, i)\"\n                [allowEmpty]=\"getAllowEmpty()\"\n                [size]=\"size()\"\n                [fluid]=\"fluid()\"\n            >\n                @if (itemTemplate || _itemTemplate) {\n                    <ng-template #content>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate || _itemTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                    </ng-template>\n                }\n            </p-togglebutton>\n        }\n    `,\n      providers: [SELECTBUTTON_VALUE_ACCESSOR, SelectButtonStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': \"cx('root')\",\n        '[attr.role]': '\"group\"',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.data-pc-section]': '\"root\"',\n        '[attr.data-pc-name]': '\"selectbutton\"'\n      }\n    }]\n  }], null, {\n    options: [{\n      type: Input\n    }],\n    optionLabel: [{\n      type: Input\n    }],\n    optionValue: [{\n      type: Input\n    }],\n    optionDisabled: [{\n      type: Input\n    }],\n    unselectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    allowEmpty: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onOptionClick: [{\n      type: Output\n    }],\n    onChange: [{\n      type: Output\n    }],\n    itemTemplate: [{\n      type: ContentChild,\n      args: ['item', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass SelectButtonModule {\n  static ɵfac = function SelectButtonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SelectButtonModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SelectButtonModule,\n    imports: [SelectButton, SharedModule],\n    exports: [SelectButton, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [SelectButton, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [SelectButton, SharedModule],\n      exports: [SelectButton, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SELECTBUTTON_VALUE_ACCESSOR, SelectButton, SelectButtonClasses, SelectButtonModule, SelectButtonStyle };\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, Directive, input, booleanAttribute, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { isEmpty, isNotEmpty, uuid, hasClass, removeClass, addClass } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/badge';\nimport { BaseStyle } from 'primeng/base';\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG (directive)*/\n    .p-overlay-badge {\n        position: relative;\n    }\n\n    .p-overlay-badge > .p-badge {\n        position: absolute;\n        top: 0;\n        inset-inline-end: 0;\n        transform: translate(50%, -50%);\n        transform-origin: 100% 0;\n        margin: 0;\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-badge p-component', {\n    'p-badge-circle': isNotEmpty(instance.value()) && String(instance.value()).length === 1,\n    'p-badge-dot': isEmpty(instance.value()),\n    'p-badge-sm': instance.size() === 'small' || instance.badgeSize() === 'small',\n    'p-badge-lg': instance.size() === 'large' || instance.badgeSize() === 'large',\n    'p-badge-xl': instance.size() === 'xlarge' || instance.badgeSize() === 'xlarge',\n    'p-badge-info': instance.severity() === 'info',\n    'p-badge-success': instance.severity() === 'success',\n    'p-badge-warn': instance.severity() === 'warn',\n    'p-badge-danger': instance.severity() === 'danger',\n    'p-badge-secondary': instance.severity() === 'secondary',\n    'p-badge-contrast': instance.severity() === 'contrast'\n  }]\n};\nclass BadgeStyle extends BaseStyle {\n  name = 'badge';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBadgeStyle_BaseFactory;\n    return function BadgeStyle_Factory(__ngFactoryType__) {\n      return (ɵBadgeStyle_BaseFactory || (ɵBadgeStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BadgeStyle)))(__ngFactoryType__ || BadgeStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BadgeStyle,\n    factory: BadgeStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BadgeStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Badge represents people using icons, labels and images.\n *\n * [Live Demo](https://www.primeng.org/badge)\n *\n * @module badgestyle\n *\n */\nvar BadgeClasses;\n(function (BadgeClasses) {\n  /**\n   * Class name of the root element\n   */\n  BadgeClasses[\"root\"] = \"p-badge\";\n})(BadgeClasses || (BadgeClasses = {}));\n\n/**\n * Badge Directive is directive usage of badge component.\n * @group Components\n */\nclass BadgeDirective extends BaseComponent {\n  /**\n   * When specified, disables the component.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   */\n  badgeSize;\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   * @deprecated use badgeSize instead.\n   */\n  set size(value) {\n    this._size = value;\n    console.log('size property is deprecated and will removed in v18, use badgeSize instead.');\n  }\n  get size() {\n    return this._size;\n  }\n  _size;\n  /**\n   * Severity type of the badge.\n   * @group Props\n   */\n  severity;\n  /**\n   * Value to display inside the badge.\n   * @group Props\n   */\n  value;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  badgeStyle;\n  /**\n   * Class of the element.\n   * @group Props\n   */\n  badgeStyleClass;\n  id;\n  badgeEl;\n  _componentStyle = inject(BadgeStyle);\n  get activeElement() {\n    return this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n  }\n  get canUpdateBadge() {\n    return this.id && !this.disabled;\n  }\n  constructor() {\n    super();\n  }\n  ngOnChanges({\n    value,\n    size,\n    severity,\n    disabled,\n    badgeStyle,\n    badgeStyleClass\n  }) {\n    super.ngOnChanges({\n      value,\n      size,\n      severity,\n      disabled\n    });\n    if (disabled) {\n      this.toggleDisableState();\n    }\n    if (!this.canUpdateBadge) {\n      return;\n    }\n    if (severity) {\n      this.setSeverity(severity.previousValue);\n    }\n    if (size) {\n      this.setSizeClasses();\n    }\n    if (value) {\n      this.setValue();\n    }\n    if (badgeStyle || badgeStyleClass) {\n      this.applyStyles();\n    }\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.id = uuid('pn_id_') + '_badge';\n    this.renderBadgeContent();\n  }\n  setValue(element) {\n    const badge = element ?? this.document.getElementById(this.id);\n    if (!badge) {\n      return;\n    }\n    if (this.value != null) {\n      if (hasClass(badge, 'p-badge-dot')) {\n        removeClass(badge, 'p-badge-dot');\n      }\n      if (this.value && String(this.value).length === 1) {\n        addClass(badge, 'p-badge-circle');\n      } else {\n        removeClass(badge, 'p-badge-circle');\n      }\n    } else {\n      if (!hasClass(badge, 'p-badge-dot')) {\n        addClass(badge, 'p-badge-dot');\n      }\n      removeClass(badge, 'p-badge-circle');\n    }\n    badge.innerHTML = '';\n    const badgeValue = this.value != null ? String(this.value) : '';\n    this.renderer.appendChild(badge, this.document.createTextNode(badgeValue));\n  }\n  setSizeClasses(element) {\n    const badge = element ?? this.document.getElementById(this.id);\n    if (!badge) {\n      return;\n    }\n    if (this.badgeSize) {\n      if (this.badgeSize === 'large') {\n        addClass(badge, 'p-badge-lg');\n        removeClass(badge, 'p-badge-xl');\n      }\n      if (this.badgeSize === 'xlarge') {\n        addClass(badge, 'p-badge-xl');\n        removeClass(badge, 'p-badge-lg');\n      }\n    } else if (this.size && !this.badgeSize) {\n      if (this.size === 'large') {\n        addClass(badge, 'p-badge-lg');\n        removeClass(badge, 'p-badge-xl');\n      }\n      if (this.size === 'xlarge') {\n        addClass(badge, 'p-badge-xl');\n        removeClass(badge, 'p-badge-lg');\n      }\n    } else {\n      removeClass(badge, 'p-badge-lg');\n      removeClass(badge, 'p-badge-xl');\n    }\n  }\n  renderBadgeContent() {\n    if (this.disabled) {\n      return null;\n    }\n    const el = this.activeElement;\n    const badge = this.document.createElement('span');\n    badge.id = this.id;\n    badge.className = 'p-badge p-component';\n    this.setSeverity(null, badge);\n    this.setSizeClasses(badge);\n    this.setValue(badge);\n    addClass(el, 'p-overlay-badge');\n    this.renderer.appendChild(el, badge);\n    this.badgeEl = badge;\n    this.applyStyles();\n  }\n  applyStyles() {\n    if (this.badgeEl && this.badgeStyle && typeof this.badgeStyle === 'object') {\n      for (const [key, value] of Object.entries(this.badgeStyle)) {\n        this.renderer.setStyle(this.badgeEl, key, value);\n      }\n    }\n    if (this.badgeEl && this.badgeStyleClass) {\n      this.badgeEl.classList.add(...this.badgeStyleClass.split(' '));\n    }\n  }\n  setSeverity(oldSeverity, element) {\n    const badge = element ?? this.document.getElementById(this.id);\n    if (!badge) {\n      return;\n    }\n    if (this.severity) {\n      addClass(badge, `p-badge-${this.severity}`);\n    }\n    if (oldSeverity) {\n      removeClass(badge, `p-badge-${oldSeverity}`);\n    }\n  }\n  toggleDisableState() {\n    if (!this.id) {\n      return;\n    }\n    if (this.disabled) {\n      const badge = this.activeElement?.querySelector(`#${this.id}`);\n      if (badge) {\n        this.renderer.removeChild(this.activeElement, badge);\n      }\n    } else {\n      this.renderBadgeContent();\n    }\n  }\n  static ɵfac = function BadgeDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BadgeDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BadgeDirective,\n    selectors: [[\"\", \"pBadge\", \"\"]],\n    inputs: {\n      disabled: [0, \"badgeDisabled\", \"disabled\"],\n      badgeSize: \"badgeSize\",\n      size: \"size\",\n      severity: \"severity\",\n      value: \"value\",\n      badgeStyle: \"badgeStyle\",\n      badgeStyleClass: \"badgeStyleClass\"\n    },\n    features: [i0.ɵɵProvidersFeature([BadgeStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BadgeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pBadge]',\n      providers: [BadgeStyle],\n      standalone: true\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: ['badgeDisabled']\n    }],\n    badgeSize: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    badgeStyle: [{\n      type: Input\n    }],\n    badgeStyleClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Badge is a small status indicator for another element.\n * @group Components\n */\nclass Badge extends BaseComponent {\n  /**\n   * Class of the element.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass = input(...(ngDevMode ? [undefined, {\n    debugName: \"styleClass\"\n  }] : []));\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   */\n  badgeSize = input(...(ngDevMode ? [undefined, {\n    debugName: \"badgeSize\"\n  }] : []));\n  /**\n   * Size of the badge, valid options are \"large\" and \"xlarge\".\n   * @group Props\n   */\n  size = input(...(ngDevMode ? [undefined, {\n    debugName: \"size\"\n  }] : []));\n  /**\n   * Severity type of the badge.\n   * @group Props\n   */\n  severity = input(...(ngDevMode ? [undefined, {\n    debugName: \"severity\"\n  }] : []));\n  /**\n   * Value to display inside the badge.\n   * @group Props\n   */\n  value = input(...(ngDevMode ? [undefined, {\n    debugName: \"value\"\n  }] : []));\n  /**\n   * When specified, disables the component.\n   * @group Props\n   */\n  badgeDisabled = input(false, ...(ngDevMode ? [{\n    debugName: \"badgeDisabled\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  _componentStyle = inject(BadgeStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBadge_BaseFactory;\n    return function Badge_Factory(__ngFactoryType__) {\n      return (ɵBadge_BaseFactory || (ɵBadge_BaseFactory = i0.ɵɵgetInheritedFactory(Badge)))(__ngFactoryType__ || Badge);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Badge,\n    selectors: [[\"p-badge\"]],\n    hostVars: 4,\n    hostBindings: function Badge_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass()));\n        i0.ɵɵstyleProp(\"display\", ctx.badgeDisabled() ? \"none\" : null);\n      }\n    },\n    inputs: {\n      styleClass: [1, \"styleClass\"],\n      badgeSize: [1, \"badgeSize\"],\n      size: [1, \"size\"],\n      severity: [1, \"severity\"],\n      value: [1, \"value\"],\n      badgeDisabled: [1, \"badgeDisabled\"]\n    },\n    features: [i0.ɵɵProvidersFeature([BadgeStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function Badge_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.value());\n      }\n    },\n    dependencies: [CommonModule, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Badge, [{\n    type: Component,\n    args: [{\n      selector: 'p-badge',\n      template: `{{ value() }}`,\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [BadgeStyle],\n      host: {\n        '[class]': \"cn(cx('root'), styleClass())\",\n        '[style.display]': 'badgeDisabled() ? \"none\" : null'\n      }\n    }]\n  }], null, null);\n})();\nclass BadgeModule {\n  static ɵfac = function BadgeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BadgeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BadgeModule,\n    imports: [Badge, BadgeDirective, SharedModule],\n    exports: [Badge, BadgeDirective, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Badge, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BadgeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Badge, BadgeDirective, SharedModule],\n      exports: [Badge, BadgeDirective, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Badge, BadgeClasses, BadgeDirective, BadgeModule, BadgeStyle };\n","class ObjectUtils {\n    static isArray(value, empty = true) {\n        return Array.isArray(value) && (empty || value.length !== 0);\n    }\n    static isObject(value, empty = true) {\n        return typeof value === 'object' && !Array.isArray(value) && value != null && (empty || Object.keys(value).length !== 0);\n    }\n    static equals(obj1, obj2, field) {\n        if (field)\n            return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);\n        else\n            return this.equalsByValue(obj1, obj2);\n    }\n    static equalsByValue(obj1, obj2) {\n        if (obj1 === obj2)\n            return true;\n        if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n            var arrA = Array.isArray(obj1), arrB = Array.isArray(obj2), i, length, key;\n            if (arrA && arrB) {\n                length = obj1.length;\n                if (length != obj2.length)\n                    return false;\n                for (i = length; i-- !== 0;)\n                    if (!this.equalsByValue(obj1[i], obj2[i]))\n                        return false;\n                return true;\n            }\n            if (arrA != arrB)\n                return false;\n            var dateA = this.isDate(obj1), dateB = this.isDate(obj2);\n            if (dateA != dateB)\n                return false;\n            if (dateA && dateB)\n                return obj1.getTime() == obj2.getTime();\n            var regexpA = obj1 instanceof RegExp, regexpB = obj2 instanceof RegExp;\n            if (regexpA != regexpB)\n                return false;\n            if (regexpA && regexpB)\n                return obj1.toString() == obj2.toString();\n            var keys = Object.keys(obj1);\n            length = keys.length;\n            if (length !== Object.keys(obj2).length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!Object.prototype.hasOwnProperty.call(obj2, keys[i]))\n                    return false;\n            for (i = length; i-- !== 0;) {\n                key = keys[i];\n                if (!this.equalsByValue(obj1[key], obj2[key]))\n                    return false;\n            }\n            return true;\n        }\n        return obj1 !== obj1 && obj2 !== obj2;\n    }\n    static resolveFieldData(data, field) {\n        if (data && field) {\n            if (this.isFunction(field)) {\n                return field(data);\n            }\n            else if (field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                let fields = field.split('.');\n                let value = data;\n                for (let i = 0, len = fields.length; i < len; ++i) {\n                    if (value == null) {\n                        return null;\n                    }\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    static isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n    static reorderArray(value, from, to) {\n        let target;\n        if (value && from !== to) {\n            if (to >= value.length) {\n                to %= value.length;\n                from %= value.length;\n            }\n            value.splice(to, 0, value.splice(from, 1)[0]);\n        }\n    }\n    static insertIntoOrderedArray(item, index, arr, sourceArr) {\n        if (arr.length > 0) {\n            let injected = false;\n            for (let i = 0; i < arr.length; i++) {\n                let currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n                if (currentItemIndex > index) {\n                    arr.splice(i, 0, item);\n                    injected = true;\n                    break;\n                }\n            }\n            if (!injected) {\n                arr.push(item);\n            }\n        }\n        else {\n            arr.push(item);\n        }\n    }\n    static findIndexInList(item, list) {\n        let index = -1;\n        if (list) {\n            for (let i = 0; i < list.length; i++) {\n                if (list[i] == item) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    static contains(value, list) {\n        if (value != null && list && list.length) {\n            for (let val of list) {\n                if (this.equals(value, val))\n                    return true;\n            }\n        }\n        return false;\n    }\n    static removeAccents(str) {\n        if (str) {\n            str = str.normalize('NFKD').replace(/\\p{Diacritic}/gu, '');\n        }\n        return str;\n    }\n    static isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]';\n    }\n    static isEmpty(value) {\n        return value === null || value === undefined || value === '' || (Array.isArray(value) && value.length === 0) || (!this.isDate(value) && typeof value === 'object' && Object.keys(value).length === 0);\n    }\n    static isNotEmpty(value) {\n        return !this.isEmpty(value);\n    }\n    static compare(value1, value2, locale, order = 1) {\n        let result = -1;\n        const emptyValue1 = this.isEmpty(value1);\n        const emptyValue2 = this.isEmpty(value2);\n        if (emptyValue1 && emptyValue2)\n            result = 0;\n        else if (emptyValue1)\n            result = order;\n        else if (emptyValue2)\n            result = -order;\n        else if (typeof value1 === 'string' && typeof value2 === 'string')\n            result = value1.localeCompare(value2, locale, { numeric: true });\n        else\n            result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n        return result;\n    }\n    static sort(value1, value2, order = 1, locale, nullSortOrder = 1) {\n        const result = ObjectUtils.compare(value1, value2, locale, order);\n        let finalSortOrder = order;\n        // nullSortOrder == 1 means Excel like sort nulls at bottom\n        if (ObjectUtils.isEmpty(value1) || ObjectUtils.isEmpty(value2)) {\n            finalSortOrder = nullSortOrder === 1 ? order : nullSortOrder;\n        }\n        return finalSortOrder * result;\n    }\n    static merge(obj1, obj2) {\n        if (obj1 == undefined && obj2 == undefined) {\n            return undefined;\n        }\n        else if ((obj1 == undefined || typeof obj1 === 'object') && (obj2 == undefined || typeof obj2 === 'object')) {\n            return { ...(obj1 || {}), ...(obj2 || {}) };\n        }\n        else if ((obj1 == undefined || typeof obj1 === 'string') && (obj2 == undefined || typeof obj2 === 'string')) {\n            return [obj1 || '', obj2 || ''].join(' ');\n        }\n        return obj2 || obj1;\n    }\n    static isPrintableCharacter(char = '') {\n        return this.isNotEmpty(char) && char.length === 1 && char.match(/\\S| /);\n    }\n    static getItemValue(obj, ...params) {\n        return this.isFunction(obj) ? obj(...params) : obj;\n    }\n    static findLastIndex(arr, callback) {\n        let index = -1;\n        if (this.isNotEmpty(arr)) {\n            try {\n                index = arr.findLastIndex(callback);\n            }\n            catch {\n                index = arr.lastIndexOf([...arr].reverse().find(callback));\n            }\n        }\n        return index;\n    }\n    static findLast(arr, callback) {\n        let item;\n        if (this.isNotEmpty(arr)) {\n            try {\n                item = arr.findLast(callback);\n            }\n            catch {\n                item = [...arr].reverse().find(callback);\n            }\n        }\n        return item;\n    }\n    static deepEquals(a, b) {\n        if (a === b)\n            return true;\n        if (a && b && typeof a == 'object' && typeof b == 'object') {\n            var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n            if (arrA && arrB) {\n                length = a.length;\n                if (length != b.length)\n                    return false;\n                for (i = length; i-- !== 0;)\n                    if (!this.deepEquals(a[i], b[i]))\n                        return false;\n                return true;\n            }\n            if (arrA != arrB)\n                return false;\n            var dateA = a instanceof Date, dateB = b instanceof Date;\n            if (dateA != dateB)\n                return false;\n            if (dateA && dateB)\n                return a.getTime() == b.getTime();\n            var regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;\n            if (regexpA != regexpB)\n                return false;\n            if (regexpA && regexpB)\n                return a.toString() == b.toString();\n            var keys = Object.keys(a);\n            length = keys.length;\n            if (length !== Object.keys(b).length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n                    return false;\n            for (i = length; i-- !== 0;) {\n                key = keys[i];\n                if (!this.deepEquals(a[key], b[key]))\n                    return false;\n            }\n            return true;\n        }\n        return a !== a && b !== b;\n    }\n    static minifyCSS(css) {\n        return css\n            ? css\n                .replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, '')\n                .replace(/ {2,}/g, ' ')\n                .replace(/ ([{:}]) /g, '$1')\n                .replace(/([;,]) /g, '$1')\n                .replace(/ !/g, '!')\n                .replace(/: /g, ':')\n            : css;\n    }\n    static toFlatCase(str) {\n        // convert snake, kebab, camel and pascal cases to flat case\n        return this.isString(str) ? str.replace(/(-|_)/g, '').toLowerCase() : str;\n    }\n    static isString(value, empty = true) {\n        return typeof value === 'string' && (empty || value !== '');\n    }\n}\n\nvar lastId = 0;\nfunction UniqueComponentId(prefix = 'pn_id_') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n\nfunction ZIndexUtils() {\n    let zIndexes = [];\n    const generateZIndex = (key, baseZIndex) => {\n        let lastZIndex = zIndexes.length > 0 ? zIndexes[zIndexes.length - 1] : { key, value: baseZIndex };\n        let newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 2;\n        zIndexes.push({ key, value: newZIndex });\n        return newZIndex;\n    };\n    const revertZIndex = (zIndex) => {\n        zIndexes = zIndexes.filter((obj) => obj.value !== zIndex);\n    };\n    const getCurrentZIndex = () => {\n        return zIndexes.length > 0 ? zIndexes[zIndexes.length - 1].value : 0;\n    };\n    const getZIndex = (el) => {\n        return el ? parseInt(el.style.zIndex, 10) || 0 : 0;\n    };\n    return {\n        get: getZIndex,\n        set: (key, el, baseZIndex) => {\n            if (el) {\n                el.style.zIndex = String(generateZIndex(key, baseZIndex));\n            }\n        },\n        clear: (el) => {\n            if (el) {\n                revertZIndex(getZIndex(el));\n                el.style.zIndex = '';\n            }\n        },\n        getCurrent: () => getCurrentZIndex(),\n        generateZIndex,\n        revertZIndex\n    };\n}\nvar zindexutils = ZIndexUtils();\n\nconst transformToBoolean = (value) => {\n    return !!value;\n};\nconst transformToNumber = (value) => {\n    return typeof value === 'string' ? parseFloat(value) : value;\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ObjectUtils, UniqueComponentId, zindexutils as ZIndexUtils, transformToBoolean, transformToNumber };\n\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/progressbar';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst classes = {\n  root: 'p-fluid'\n};\nclass FluidStyle extends BaseStyle {\n  name = 'fluid';\n  classes = classes;\n  theme = style;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵFluidStyle_BaseFactory;\n    return function FluidStyle_Factory(__ngFactoryType__) {\n      return (ɵFluidStyle_BaseFactory || (ɵFluidStyle_BaseFactory = i0.ɵɵgetInheritedFactory(FluidStyle)))(__ngFactoryType__ || FluidStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FluidStyle,\n    factory: FluidStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FluidStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Fluid is a layout component to make descendant components span full width of their container.\n *\n * [Live Demo](https://www.primeng.org/fluid/)\n *\n * @module fluidstyle\n *\n */\nvar FluidClasses;\n(function (FluidClasses) {\n  /**\n   * Class name of the root element\n   */\n  FluidClasses[\"root\"] = \"p-fluid\";\n})(FluidClasses || (FluidClasses = {}));\n\n/**\n * Fluid is a layout component to make descendant components span full width of their container.\n * @group Components\n */\nclass Fluid extends BaseComponent {\n  _componentStyle = inject(FluidStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵFluid_BaseFactory;\n    return function Fluid_Factory(__ngFactoryType__) {\n      return (ɵFluid_BaseFactory || (ɵFluid_BaseFactory = i0.ɵɵgetInheritedFactory(Fluid)))(__ngFactoryType__ || Fluid);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Fluid,\n    selectors: [[\"p-fluid\"]],\n    hostVars: 2,\n    hostBindings: function Fluid_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"root\"));\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([FluidStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function Fluid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Fluid, [{\n    type: Component,\n    args: [{\n      selector: 'p-fluid',\n      template: ` <ng-content></ng-content> `,\n      standalone: true,\n      imports: [CommonModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [FluidStyle],\n      host: {\n        '[class]': \"cx('root')\"\n      }\n    }]\n  }], null, null);\n})();\nclass FluidModule {\n  static ɵfac = function FluidModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FluidModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FluidModule,\n    imports: [Fluid],\n    exports: [Fluid]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Fluid]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FluidModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Fluid],\n      exports: [Fluid]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Fluid, FluidClasses, FluidModule, FluidStyle };\n","import * as utils from '@primeuix/utils';\nimport { getCSSVariableByRegex } from '@primeuix/utils';\nimport { $dt } from '@primeuix/styled';\n\n/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n    static zindex = 1000;\n    static calculatedScrollbarWidth = null;\n    static calculatedScrollbarHeight = null;\n    static browser;\n    static addClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.add(className);\n            else\n                element.className += ' ' + className;\n        }\n    }\n    static addMultipleClasses(element, className) {\n        if (element && className) {\n            if (element.classList) {\n                let styles = className.trim().split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.classList.add(styles[i]);\n                }\n            }\n            else {\n                let styles = className.split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.className += ' ' + styles[i];\n                }\n            }\n        }\n    }\n    static removeClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.remove(className);\n            else\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n    static removeMultipleClasses(element, classNames) {\n        if (element && classNames) {\n            [classNames]\n                .flat()\n                .filter(Boolean)\n                .forEach((cNames) => cNames.split(' ').forEach((className) => this.removeClass(element, className)));\n        }\n    }\n    static hasClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                return element.classList.contains(className);\n            else\n                return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n        return false;\n    }\n    static siblings(element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n    static find(element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n        return this.isElement(element) ? element.querySelector(selector) : null;\n    }\n    static index(element) {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static appendOverlay(overlay, target, appendTo = 'self') {\n        if (appendTo !== 'self' && overlay && target) {\n            this.appendChild(overlay, target);\n        }\n    }\n    static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n        if (overlay && target) {\n            if (calculateMinWidth) {\n                overlay.style.minWidth = `${DomHandler.getOuterWidth(target)}px`;\n            }\n            if (appendTo === 'self') {\n                this.relativePosition(overlay, target);\n            }\n            else {\n                this.absolutePosition(overlay, target);\n            }\n        }\n    }\n    static relativePosition(element, target, gutter = true) {\n        const getClosestRelativeElement = (el) => {\n            if (!el)\n                return;\n            return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n        };\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        const relativeElement = getClosestRelativeElement(element);\n        const relativeElementOffset = relativeElement?.getBoundingClientRect() || {\n            top: -1 * windowScrollTop,\n            left: -1 * windowScrollLeft\n        };\n        let top, left, origin = 'top';\n        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n            top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n            origin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight + targetOffset.top - relativeElementOffset.top;\n            origin = 'top';\n        }\n        const horizontalOverflow = targetOffset.left + elementDimensions.width - viewport.width;\n        const targetLeftOffsetInSpaceOfRelativeElement = targetOffset.left - relativeElementOffset.left;\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left) * -1;\n        }\n        else if (horizontalOverflow > 0) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = targetLeftOffsetInSpaceOfRelativeElement - horizontalOverflow;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = targetOffset.left - relativeElementOffset.left;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        element.style.transformOrigin = origin;\n        if (gutter) {\n            const gutterValue = getCSSVariableByRegex(/-anchor-gutter$/)?.value;\n            element.style.marginTop = origin === 'bottom' ? `calc(${gutterValue ?? '2px'} * -1)` : (gutterValue ?? '');\n        }\n    }\n    static absolutePosition(element, target, gutter = true) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const elementOuterHeight = elementDimensions.height;\n        const elementOuterWidth = elementDimensions.width;\n        const targetOuterHeight = target.offsetHeight;\n        const targetOuterWidth = target.offsetWidth;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        let top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n    static getParents(element, parents = []) {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n        let scrollableParents = [];\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n                if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                    scrollableParents.push(parent);\n                }\n            }\n        }\n        return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n        let dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    }\n    static scrollInView(container, item) {\n        let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if (offset + itemHeight > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n    static fadeIn(element, duration) {\n        element.style.opacity = 0;\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    }\n    static fadeOut(element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    }\n    static getWindowScrollTop() {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] ||\n            p.webkitMatchesSelector ||\n            p['mozMatchesSelector'] ||\n            p['msMatchesSelector'] ||\n            function (s) {\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n            };\n        return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n        let width = el.offsetWidth;\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    }\n    static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n    static getOuterHeight(el, margin) {\n        let height = el.offsetHeight;\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    }\n    static getHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    }\n    static getWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    }\n    static getViewport() {\n        let win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    }\n    static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n        };\n    }\n    static replaceElementWith(element, replacementElement) {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n        if (navigator && this.isClient()) {\n            return navigator.userAgent;\n        }\n    }\n    static isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    }\n    static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    static isTouchDevice() {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    static appendChild(element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target && target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n    static isElement(obj) {\n        return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    static calculateScrollbarWidth(el) {\n        if (el) {\n            let style = getComputedStyle(el);\n            return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            let scrollDiv = document.createElement('div');\n            scrollDiv.className = 'p-scrollbar-measure';\n            document.body.appendChild(scrollDiv);\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    }\n    static calculateScrollbarHeight() {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.className = 'p-scrollbar-measure';\n        document.body.appendChild(scrollDiv);\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n        element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    }\n    static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    }\n    static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) || [];\n        return {\n            browser: match[1] || '',\n            version: match[2] || '0'\n        };\n    }\n    static isInteger(value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n        }\n    }\n    static isHidden(element) {\n        return !element || element.offsetParent === null;\n    }\n    static isVisible(element) {\n        return element && element.offsetParent != null;\n    }\n    static isExist(element) {\n        return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n    }\n    static focus(element, options) {\n        element && document.activeElement !== element && element.focus(options);\n    }\n    static getFocusableSelectorString(selector = '') {\n        return `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-inputtext:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`;\n    }\n    static getFocusableElements(element, selector = '') {\n        let focusableElements = this.find(element, this.getFocusableSelectorString(selector));\n        let visibleFocusableElements = [];\n        for (let focusableElement of focusableElements) {\n            const computedStyle = getComputedStyle(focusableElement);\n            if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden')\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    }\n    static getFocusableElement(element, selector = '') {\n        let focusableElement = this.findSingle(element, this.getFocusableSelectorString(selector));\n        if (focusableElement) {\n            const computedStyle = getComputedStyle(focusableElement);\n            if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden')\n                return focusableElement;\n        }\n        return null;\n    }\n    static getFirstFocusableElement(element, selector = '') {\n        const focusableElements = this.getFocusableElements(element, selector);\n        return focusableElements.length > 0 ? focusableElements[0] : null;\n    }\n    static getLastFocusableElement(element, selector) {\n        const focusableElements = this.getFocusableElements(element, selector);\n        return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;\n    }\n    static getNextFocusableElement(element, reverse = false) {\n        const focusableElements = DomHandler.getFocusableElements(element);\n        let index = 0;\n        if (focusableElements && focusableElements.length > 0) {\n            const focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n            if (reverse) {\n                if (focusedIndex == -1 || focusedIndex === 0) {\n                    index = focusableElements.length - 1;\n                }\n                else {\n                    index = focusedIndex - 1;\n                }\n            }\n            else if (focusedIndex != -1 && focusedIndex !== focusableElements.length - 1) {\n                index = focusedIndex + 1;\n            }\n        }\n        return focusableElements[index];\n    }\n    static generateZIndex() {\n        this.zindex = this.zindex || 999;\n        return ++this.zindex;\n    }\n    static getSelection() {\n        if (window.getSelection)\n            return window.getSelection().toString();\n        else if (document.getSelection)\n            return document.getSelection().toString();\n        else if (document['selection'])\n            return document['selection'].createRange().text;\n        return null;\n    }\n    static getTargetElement(target, el) {\n        if (!target)\n            return null;\n        switch (target) {\n            case 'document':\n                return document;\n            case 'window':\n                return window;\n            case '@next':\n                return el?.nextElementSibling;\n            case '@prev':\n                return el?.previousElementSibling;\n            case '@parent':\n                return el?.parentElement;\n            case '@grandparent':\n                return el?.parentElement.parentElement;\n            default:\n                const type = typeof target;\n                if (type === 'string') {\n                    return document.querySelector(target);\n                }\n                else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n                    return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n                }\n                const isFunction = (obj) => !!(obj && obj.constructor && obj.call && obj.apply);\n                const element = isFunction(target) ? target() : target;\n                return (element && element.nodeType === 9) || this.isExist(element) ? element : null;\n        }\n    }\n    static isClient() {\n        return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n    }\n    static getAttribute(element, name) {\n        if (element) {\n            const value = element.getAttribute(name);\n            if (!isNaN(value)) {\n                return +value;\n            }\n            if (value === 'true' || value === 'false') {\n                return value === 'true';\n            }\n            return value;\n        }\n        return undefined;\n    }\n    static calculateBodyScrollbarWidth() {\n        return window.innerWidth - document.documentElement.offsetWidth;\n    }\n    static blockBodyScroll(className = 'p-overflow-hidden') {\n        document.body.style.setProperty('--scrollbar-width', this.calculateBodyScrollbarWidth() + 'px');\n        this.addClass(document.body, className);\n    }\n    static unblockBodyScroll(className = 'p-overflow-hidden') {\n        document.body.style.removeProperty('--scrollbar-width');\n        this.removeClass(document.body, className);\n    }\n    static createElement(type, attributes = {}, ...children) {\n        if (type) {\n            const element = document.createElement(type);\n            this.setAttributes(element, attributes);\n            element.append(...children);\n            return element;\n        }\n        return undefined;\n    }\n    static setAttribute(element, attribute = '', value) {\n        if (this.isElement(element) && value !== null && value !== undefined) {\n            element.setAttribute(attribute, value);\n        }\n    }\n    static setAttributes(element, attributes = {}) {\n        if (this.isElement(element)) {\n            const computedStyles = (rule, value) => {\n                const styles = element?.$attrs?.[rule] ? [element?.$attrs?.[rule]] : [];\n                return [value].flat().reduce((cv, v) => {\n                    if (v !== null && v !== undefined) {\n                        const type = typeof v;\n                        if (type === 'string' || type === 'number') {\n                            cv.push(v);\n                        }\n                        else if (type === 'object') {\n                            const _cv = Array.isArray(v)\n                                ? computedStyles(rule, v)\n                                : Object.entries(v).map(([_k, _v]) => (rule === 'style' && (!!_v || _v === 0) ? `${_k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${_v}` : !!_v ? _k : undefined));\n                            cv = _cv.length ? cv.concat(_cv.filter((c) => !!c)) : cv;\n                        }\n                    }\n                    return cv;\n                }, styles);\n            };\n            Object.entries(attributes).forEach(([key, value]) => {\n                if (value !== undefined && value !== null) {\n                    const matchedEvent = key.match(/^on(.+)/);\n                    if (matchedEvent) {\n                        element.addEventListener(matchedEvent[1].toLowerCase(), value);\n                    }\n                    else if (key === 'pBind') {\n                        this.setAttributes(element, value);\n                    }\n                    else {\n                        value = key === 'class' ? [...new Set(computedStyles('class', value))].join(' ').trim() : key === 'style' ? computedStyles('style', value).join(';').trim() : value;\n                        (element.$attrs = element.$attrs || {}) && (element.$attrs[key] = value);\n                        element.setAttribute(key, value);\n                    }\n                }\n            });\n        }\n    }\n    static isFocusableElement(element, selector = '') {\n        return this.isElement(element)\n            ? element.matches(`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`)\n            : false;\n    }\n}\n// @todo: update this when we remove the old domhandler\nfunction blockBodyScroll() {\n    utils.blockBodyScroll({ variableName: $dt('scrollbar.width').name });\n}\nfunction unblockBodyScroll() {\n    utils.unblockBodyScroll({ variableName: $dt('scrollbar.width').name });\n}\n\nclass ConnectedOverlayScrollHandler {\n    element;\n    listener;\n    scrollableParents;\n    constructor(element, listener = () => { }) {\n        this.element = element;\n        this.listener = listener;\n    }\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler, blockBodyScroll, unblockBodyScroll };\n\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, ElementRef, Input, Directive, NgModule } from '@angular/core';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nclass AutoFocus extends BaseComponent {\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus = false;\n  focused = false;\n  platformId = inject(PLATFORM_ID);\n  document = inject(DOCUMENT);\n  host = inject(ElementRef);\n  ngAfterContentChecked() {\n    // This sets the `attr.autofocus` which is different than the Input `autofocus` attribute.\n    if (this.autofocus === false) {\n      this.host.nativeElement.removeAttribute('autofocus');\n    } else {\n      this.host.nativeElement.setAttribute('autofocus', true);\n    }\n    if (!this.focused) {\n      this.autoFocus();\n    }\n  }\n  ngAfterViewChecked() {\n    if (!this.focused) {\n      this.autoFocus();\n    }\n  }\n  autoFocus() {\n    if (isPlatformBrowser(this.platformId) && this.autofocus) {\n      setTimeout(() => {\n        const focusableElements = DomHandler.getFocusableElements(this.host?.nativeElement);\n        if (focusableElements.length === 0) {\n          this.host.nativeElement.focus();\n        }\n        if (focusableElements.length > 0) {\n          focusableElements[0].focus();\n        }\n        this.focused = true;\n      });\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAutoFocus_BaseFactory;\n    return function AutoFocus_Factory(__ngFactoryType__) {\n      return (ɵAutoFocus_BaseFactory || (ɵAutoFocus_BaseFactory = i0.ɵɵgetInheritedFactory(AutoFocus)))(__ngFactoryType__ || AutoFocus);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AutoFocus,\n    selectors: [[\"\", \"pAutoFocus\", \"\"]],\n    inputs: {\n      autofocus: [0, \"pAutoFocus\", \"autofocus\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocus, [{\n    type: Directive,\n    args: [{\n      selector: '[pAutoFocus]',\n      standalone: true\n    }]\n  }], null, {\n    autofocus: [{\n      type: Input,\n      args: ['pAutoFocus']\n    }]\n  });\n})();\nclass AutoFocusModule {\n  static ɵfac = function AutoFocusModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AutoFocusModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AutoFocusModule,\n    imports: [AutoFocus],\n    exports: [AutoFocus]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoFocusModule, [{\n    type: NgModule,\n    args: [{\n      imports: [AutoFocus],\n      exports: [AutoFocus]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, booleanAttribute, Input, ViewEncapsulation, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { cn } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst css = /*css*/`\n.p-icon {\n    display: inline-block;\n    vertical-align: baseline;\n}\n\n.p-icon-spin {\n    -webkit-animation: p-icon-spin 2s infinite linear;\n    animation: p-icon-spin 2s infinite linear;\n}\n\n@-webkit-keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n\n@keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n`;\nclass BaseIconStyle extends BaseStyle {\n  name = 'baseicon';\n  css = css;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseIconStyle_BaseFactory;\n    return function BaseIconStyle_Factory(__ngFactoryType__) {\n      return (ɵBaseIconStyle_BaseFactory || (ɵBaseIconStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIconStyle)))(__ngFactoryType__ || BaseIconStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BaseIconStyle,\n    factory: BaseIconStyle.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseIconStyle, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n *\n * [Live Demo](https://www.primeng.org/)\n *\n * @module baseiconstyle\n *\n */\nvar BaseIconClasses;\n(function (BaseIconClasses) {\n  BaseIconClasses[\"root\"] = \"p-icon\";\n})(BaseIconClasses || (BaseIconClasses = {}));\nclass BaseIcon extends BaseComponent {\n  spin = false;\n  _componentStyle = inject(BaseIconStyle);\n  getClassNames() {\n    return cn('p-icon', {\n      'p-icon-spin': this.spin\n    });\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseIcon_BaseFactory;\n    return function BaseIcon_Factory(__ngFactoryType__) {\n      return (ɵBaseIcon_BaseFactory || (ɵBaseIcon_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIcon)))(__ngFactoryType__ || BaseIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BaseIcon,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"],\n    hostVars: 2,\n    hostBindings: function BaseIcon_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.getClassNames());\n      }\n    },\n    inputs: {\n      spin: [2, \"spin\", \"spin\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([BaseIconStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function BaseIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseIcon, [{\n    type: Component,\n    args: [{\n      template: ` <ng-content></ng-content> `,\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [BaseIconStyle],\n      host: {\n        width: '14',\n        height: '14',\n        viewBox: '0 0 14 14',\n        fill: 'none',\n        xmlns: 'http://www.w3.org/2000/svg',\n        '[class]': 'getClassNames()'\n      }\n    }]\n  }], null, {\n    spin: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseIcon, BaseIconClasses, BaseIconStyle };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"check\"];\nclass CheckIcon extends BaseIcon {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵCheckIcon_BaseFactory;\n    return function CheckIcon_Factory(__ngFactoryType__) {\n      return (ɵCheckIcon_BaseFactory || (ɵCheckIcon_BaseFactory = i0.ɵɵgetInheritedFactory(CheckIcon)))(__ngFactoryType__ || CheckIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckIcon,\n    selectors: [[\"\", \"data-p-icon\", \"check\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[\"d\", \"M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z\", \"fill\", \"currentColor\"]],\n    template: function CheckIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElement(0, \"path\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"check\"]',\n      standalone: true,\n      template: `\n        <svg:path\n            d=\"M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z\"\n            fill=\"currentColor\"\n        />\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CheckIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"exclamation-triangle\"];\nclass ExclamationTriangleIcon extends BaseIcon {\n  pathId;\n  ngOnInit() {\n    super.ngOnInit();\n    this.pathId = 'url(#' + uuid() + ')';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵExclamationTriangleIcon_BaseFactory;\n    return function ExclamationTriangleIcon_Factory(__ngFactoryType__) {\n      return (ɵExclamationTriangleIcon_BaseFactory || (ɵExclamationTriangleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ExclamationTriangleIcon)))(__ngFactoryType__ || ExclamationTriangleIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ExclamationTriangleIcon,\n    selectors: [[\"\", \"data-p-icon\", \"exclamation-triangle\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 7,\n    vars: 2,\n    consts: [[\"d\", \"M13.4018 13.1893H0.598161C0.49329 13.189 0.390283 13.1615 0.299143 13.1097C0.208003 13.0578 0.131826 12.9832 0.0780112 12.8932C0.0268539 12.8015 0 12.6982 0 12.5931C0 12.4881 0.0268539 12.3848 0.0780112 12.293L6.47985 1.08982C6.53679 1.00399 6.61408 0.933574 6.70484 0.884867C6.7956 0.836159 6.897 0.810669 7 0.810669C7.103 0.810669 7.2044 0.836159 7.29516 0.884867C7.38592 0.933574 7.46321 1.00399 7.52015 1.08982L13.922 12.293C13.9731 12.3848 14 12.4881 14 12.5931C14 12.6982 13.9731 12.8015 13.922 12.8932C13.8682 12.9832 13.792 13.0578 13.7009 13.1097C13.6097 13.1615 13.5067 13.189 13.4018 13.1893ZM1.63046 11.989H12.3695L7 2.59425L1.63046 11.989Z\", \"fill\", \"currentColor\"], [\"d\", \"M6.99996 8.78801C6.84143 8.78594 6.68997 8.72204 6.57787 8.60993C6.46576 8.49782 6.40186 8.34637 6.39979 8.18784V5.38703C6.39979 5.22786 6.46302 5.0752 6.57557 4.96265C6.68813 4.85009 6.84078 4.78686 6.99996 4.78686C7.15914 4.78686 7.31179 4.85009 7.42435 4.96265C7.5369 5.0752 7.60013 5.22786 7.60013 5.38703V8.18784C7.59806 8.34637 7.53416 8.49782 7.42205 8.60993C7.30995 8.72204 7.15849 8.78594 6.99996 8.78801Z\", \"fill\", \"currentColor\"], [\"d\", \"M6.99996 11.1887C6.84143 11.1866 6.68997 11.1227 6.57787 11.0106C6.46576 10.8985 6.40186 10.7471 6.39979 10.5885V10.1884C6.39979 10.0292 6.46302 9.87658 6.57557 9.76403C6.68813 9.65147 6.84078 9.58824 6.99996 9.58824C7.15914 9.58824 7.31179 9.65147 7.42435 9.76403C7.5369 9.87658 7.60013 10.0292 7.60013 10.1884V10.5885C7.59806 10.7471 7.53416 10.8985 7.42205 11.0106C7.30995 11.1227 7.15849 11.1866 6.99996 11.1887Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n    template: function ExclamationTriangleIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElementStart(0, \"g\");\n        i0.ɵɵdomElement(1, \"path\", 0)(2, \"path\", 1)(3, \"path\", 2);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElementStart(4, \"defs\")(5, \"clipPath\", 3);\n        i0.ɵɵdomElement(6, \"rect\", 4);\n        i0.ɵɵdomElementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n        i0.ɵɵadvance(5);\n        i0.ɵɵdomProperty(\"id\", ctx.pathId);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExclamationTriangleIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"exclamation-triangle\"]',\n      standalone: true,\n      template: `\n        <svg:g [attr.clip-path]=\"pathId\">\n            <svg:path\n                d=\"M13.4018 13.1893H0.598161C0.49329 13.189 0.390283 13.1615 0.299143 13.1097C0.208003 13.0578 0.131826 12.9832 0.0780112 12.8932C0.0268539 12.8015 0 12.6982 0 12.5931C0 12.4881 0.0268539 12.3848 0.0780112 12.293L6.47985 1.08982C6.53679 1.00399 6.61408 0.933574 6.70484 0.884867C6.7956 0.836159 6.897 0.810669 7 0.810669C7.103 0.810669 7.2044 0.836159 7.29516 0.884867C7.38592 0.933574 7.46321 1.00399 7.52015 1.08982L13.922 12.293C13.9731 12.3848 14 12.4881 14 12.5931C14 12.6982 13.9731 12.8015 13.922 12.8932C13.8682 12.9832 13.792 13.0578 13.7009 13.1097C13.6097 13.1615 13.5067 13.189 13.4018 13.1893ZM1.63046 11.989H12.3695L7 2.59425L1.63046 11.989Z\"\n                fill=\"currentColor\"\n            />\n            <svg:path\n                d=\"M6.99996 8.78801C6.84143 8.78594 6.68997 8.72204 6.57787 8.60993C6.46576 8.49782 6.40186 8.34637 6.39979 8.18784V5.38703C6.39979 5.22786 6.46302 5.0752 6.57557 4.96265C6.68813 4.85009 6.84078 4.78686 6.99996 4.78686C7.15914 4.78686 7.31179 4.85009 7.42435 4.96265C7.5369 5.0752 7.60013 5.22786 7.60013 5.38703V8.18784C7.59806 8.34637 7.53416 8.49782 7.42205 8.60993C7.30995 8.72204 7.15849 8.78594 6.99996 8.78801Z\"\n                fill=\"currentColor\"\n            />\n            <svg:path\n                d=\"M6.99996 11.1887C6.84143 11.1866 6.68997 11.1227 6.57787 11.0106C6.46576 10.8985 6.40186 10.7471 6.39979 10.5885V10.1884C6.39979 10.0292 6.46302 9.87658 6.57557 9.76403C6.68813 9.65147 6.84078 9.58824 6.99996 9.58824C7.15914 9.58824 7.31179 9.65147 7.42435 9.76403C7.5369 9.87658 7.60013 10.0292 7.60013 10.1884V10.5885C7.59806 10.7471 7.53416 10.8985 7.42205 11.0106C7.30995 11.1227 7.15849 11.1866 6.99996 11.1887Z\"\n                fill=\"currentColor\"\n            />\n        </svg:g>\n        <svg:defs>\n            <svg:clipPath [id]=\"pathId\">\n                <svg:rect width=\"14\" height=\"14\" fill=\"white\" />\n            </svg:clipPath>\n        </svg:defs>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ExclamationTriangleIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"info-circle\"];\nclass InfoCircleIcon extends BaseIcon {\n  pathId;\n  ngOnInit() {\n    super.ngOnInit();\n    this.pathId = 'url(#' + uuid() + ')';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵInfoCircleIcon_BaseFactory;\n    return function InfoCircleIcon_Factory(__ngFactoryType__) {\n      return (ɵInfoCircleIcon_BaseFactory || (ɵInfoCircleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(InfoCircleIcon)))(__ngFactoryType__ || InfoCircleIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: InfoCircleIcon,\n    selectors: [[\"\", \"data-p-icon\", \"info-circle\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M3.11101 12.8203C4.26215 13.5895 5.61553 14 7 14C8.85652 14 10.637 13.2625 11.9497 11.9497C13.2625 10.637 14 8.85652 14 7C14 5.61553 13.5895 4.26215 12.8203 3.11101C12.0511 1.95987 10.9579 1.06266 9.67879 0.532846C8.3997 0.00303296 6.99224 -0.13559 5.63437 0.134506C4.2765 0.404603 3.02922 1.07129 2.05026 2.05026C1.07129 3.02922 0.404603 4.2765 0.134506 5.63437C-0.13559 6.99224 0.00303296 8.3997 0.532846 9.67879C1.06266 10.9579 1.95987 12.0511 3.11101 12.8203ZM3.75918 2.14976C4.71846 1.50879 5.84628 1.16667 7 1.16667C8.5471 1.16667 10.0308 1.78125 11.1248 2.87521C12.2188 3.96918 12.8333 5.45291 12.8333 7C12.8333 8.15373 12.4912 9.28154 11.8502 10.2408C11.2093 11.2001 10.2982 11.9478 9.23232 12.3893C8.16642 12.8308 6.99353 12.9463 5.86198 12.7212C4.73042 12.4962 3.69102 11.9406 2.87521 11.1248C2.05941 10.309 1.50384 9.26958 1.27876 8.13803C1.05367 7.00647 1.16919 5.83358 1.61071 4.76768C2.05222 3.70178 2.79989 2.79074 3.75918 2.14976ZM7.00002 4.8611C6.84594 4.85908 6.69873 4.79698 6.58977 4.68801C6.48081 4.57905 6.4187 4.43185 6.41669 4.27776V3.88888C6.41669 3.73417 6.47815 3.58579 6.58754 3.4764C6.69694 3.367 6.84531 3.30554 7.00002 3.30554C7.15473 3.30554 7.3031 3.367 7.4125 3.4764C7.52189 3.58579 7.58335 3.73417 7.58335 3.88888V4.27776C7.58134 4.43185 7.51923 4.57905 7.41027 4.68801C7.30131 4.79698 7.1541 4.85908 7.00002 4.8611ZM7.00002 10.6945C6.84594 10.6925 6.69873 10.6304 6.58977 10.5214C6.48081 10.4124 6.4187 10.2652 6.41669 10.1111V6.22225C6.41669 6.06754 6.47815 5.91917 6.58754 5.80977C6.69694 5.70037 6.84531 5.63892 7.00002 5.63892C7.15473 5.63892 7.3031 5.70037 7.4125 5.80977C7.52189 5.91917 7.58335 6.06754 7.58335 6.22225V10.1111C7.58134 10.2652 7.51923 10.4124 7.41027 10.5214C7.30131 10.6304 7.1541 10.6925 7.00002 10.6945Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n    template: function InfoCircleIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElementStart(0, \"g\");\n        i0.ɵɵdomElement(1, \"path\", 0);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElementStart(2, \"defs\")(3, \"clipPath\", 1);\n        i0.ɵɵdomElement(4, \"rect\", 2);\n        i0.ɵɵdomElementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵdomProperty(\"id\", ctx.pathId);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InfoCircleIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"info-circle\"]',\n      standalone: true,\n      template: `\n        <svg:g [attr.clip-path]=\"pathId\">\n            <svg:path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M3.11101 12.8203C4.26215 13.5895 5.61553 14 7 14C8.85652 14 10.637 13.2625 11.9497 11.9497C13.2625 10.637 14 8.85652 14 7C14 5.61553 13.5895 4.26215 12.8203 3.11101C12.0511 1.95987 10.9579 1.06266 9.67879 0.532846C8.3997 0.00303296 6.99224 -0.13559 5.63437 0.134506C4.2765 0.404603 3.02922 1.07129 2.05026 2.05026C1.07129 3.02922 0.404603 4.2765 0.134506 5.63437C-0.13559 6.99224 0.00303296 8.3997 0.532846 9.67879C1.06266 10.9579 1.95987 12.0511 3.11101 12.8203ZM3.75918 2.14976C4.71846 1.50879 5.84628 1.16667 7 1.16667C8.5471 1.16667 10.0308 1.78125 11.1248 2.87521C12.2188 3.96918 12.8333 5.45291 12.8333 7C12.8333 8.15373 12.4912 9.28154 11.8502 10.2408C11.2093 11.2001 10.2982 11.9478 9.23232 12.3893C8.16642 12.8308 6.99353 12.9463 5.86198 12.7212C4.73042 12.4962 3.69102 11.9406 2.87521 11.1248C2.05941 10.309 1.50384 9.26958 1.27876 8.13803C1.05367 7.00647 1.16919 5.83358 1.61071 4.76768C2.05222 3.70178 2.79989 2.79074 3.75918 2.14976ZM7.00002 4.8611C6.84594 4.85908 6.69873 4.79698 6.58977 4.68801C6.48081 4.57905 6.4187 4.43185 6.41669 4.27776V3.88888C6.41669 3.73417 6.47815 3.58579 6.58754 3.4764C6.69694 3.367 6.84531 3.30554 7.00002 3.30554C7.15473 3.30554 7.3031 3.367 7.4125 3.4764C7.52189 3.58579 7.58335 3.73417 7.58335 3.88888V4.27776C7.58134 4.43185 7.51923 4.57905 7.41027 4.68801C7.30131 4.79698 7.1541 4.85908 7.00002 4.8611ZM7.00002 10.6945C6.84594 10.6925 6.69873 10.6304 6.58977 10.5214C6.48081 10.4124 6.4187 10.2652 6.41669 10.1111V6.22225C6.41669 6.06754 6.47815 5.91917 6.58754 5.80977C6.69694 5.70037 6.84531 5.63892 7.00002 5.63892C7.15473 5.63892 7.3031 5.70037 7.4125 5.80977C7.52189 5.91917 7.58335 6.06754 7.58335 6.22225V10.1111C7.58134 10.2652 7.51923 10.4124 7.41027 10.5214C7.30131 10.6304 7.1541 10.6925 7.00002 10.6945Z\"\n                fill=\"currentColor\"\n            />\n        </svg:g>\n        <svg:defs>\n            <svg:clipPath [id]=\"pathId\">\n                <svg:rect width=\"14\" height=\"14\" fill=\"white\" />\n            </svg:clipPath>\n        </svg:defs>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfoCircleIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"minus\"];\nclass MinusIcon extends BaseIcon {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMinusIcon_BaseFactory;\n    return function MinusIcon_Factory(__ngFactoryType__) {\n      return (ɵMinusIcon_BaseFactory || (ɵMinusIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MinusIcon)))(__ngFactoryType__ || MinusIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MinusIcon,\n    selectors: [[\"\", \"data-p-icon\", \"minus\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[\"d\", \"M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z\", \"fill\", \"currentColor\"]],\n    template: function MinusIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElement(0, \"path\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MinusIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"minus\"]',\n      standalone: true,\n      template: `\n        <svg:path\n            d=\"M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z\"\n            fill=\"currentColor\"\n        />\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MinusIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"spinner\"];\nclass SpinnerIcon extends BaseIcon {\n  pathId;\n  ngOnInit() {\n    super.ngOnInit();\n    this.pathId = 'url(#' + uuid() + ')';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSpinnerIcon_BaseFactory;\n    return function SpinnerIcon_Factory(__ngFactoryType__) {\n      return (ɵSpinnerIcon_BaseFactory || (ɵSpinnerIcon_BaseFactory = i0.ɵɵgetInheritedFactory(SpinnerIcon)))(__ngFactoryType__ || SpinnerIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SpinnerIcon,\n    selectors: [[\"\", \"data-p-icon\", \"spinner\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[\"d\", \"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n    template: function SpinnerIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElementStart(0, \"g\");\n        i0.ɵɵdomElement(1, \"path\", 0);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElementStart(2, \"defs\")(3, \"clipPath\", 1);\n        i0.ɵɵdomElement(4, \"rect\", 2);\n        i0.ɵɵdomElementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵdomProperty(\"id\", ctx.pathId);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SpinnerIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"spinner\"]',\n      standalone: true,\n      template: `\n        <svg:g [attr.clip-path]=\"pathId\">\n            <svg:path\n                d=\"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\"\n                fill=\"currentColor\"\n            />\n        </svg:g>\n        <svg:defs>\n            <svg:clipPath [id]=\"pathId\">\n                <svg:rect width=\"14\" height=\"14\" fill=\"white\" />\n            </svg:clipPath>\n        </svg:defs>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpinnerIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"times\"];\nclass TimesIcon extends BaseIcon {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTimesIcon_BaseFactory;\n    return function TimesIcon_Factory(__ngFactoryType__) {\n      return (ɵTimesIcon_BaseFactory || (ɵTimesIcon_BaseFactory = i0.ɵɵgetInheritedFactory(TimesIcon)))(__ngFactoryType__ || TimesIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TimesIcon,\n    selectors: [[\"\", \"data-p-icon\", \"times\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 1,\n    vars: 0,\n    consts: [[\"d\", \"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\", \"fill\", \"currentColor\"]],\n    template: function TimesIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElement(0, \"path\", 0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimesIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"times\"]',\n      standalone: true,\n      template: `\n        <svg:path\n            d=\"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\"\n            fill=\"currentColor\"\n        />\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimesIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nconst _c0 = [\"data-p-icon\", \"times-circle\"];\nclass TimesCircleIcon extends BaseIcon {\n  pathId;\n  ngOnInit() {\n    super.ngOnInit();\n    this.pathId = 'url(#' + uuid() + ')';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTimesCircleIcon_BaseFactory;\n    return function TimesCircleIcon_Factory(__ngFactoryType__) {\n      return (ɵTimesCircleIcon_BaseFactory || (ɵTimesCircleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(TimesCircleIcon)))(__ngFactoryType__ || TimesCircleIcon);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TimesCircleIcon,\n    selectors: [[\"\", \"data-p-icon\", \"times-circle\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M7 14C5.61553 14 4.26215 13.5895 3.11101 12.8203C1.95987 12.0511 1.06266 10.9579 0.532846 9.67879C0.00303296 8.3997 -0.13559 6.99224 0.134506 5.63437C0.404603 4.2765 1.07129 3.02922 2.05026 2.05026C3.02922 1.07129 4.2765 0.404603 5.63437 0.134506C6.99224 -0.13559 8.3997 0.00303296 9.67879 0.532846C10.9579 1.06266 12.0511 1.95987 12.8203 3.11101C13.5895 4.26215 14 5.61553 14 7C14 8.85652 13.2625 10.637 11.9497 11.9497C10.637 13.2625 8.85652 14 7 14ZM7 1.16667C5.84628 1.16667 4.71846 1.50879 3.75918 2.14976C2.79989 2.79074 2.05222 3.70178 1.61071 4.76768C1.16919 5.83358 1.05367 7.00647 1.27876 8.13803C1.50384 9.26958 2.05941 10.309 2.87521 11.1248C3.69102 11.9406 4.73042 12.4962 5.86198 12.7212C6.99353 12.9463 8.16642 12.8308 9.23232 12.3893C10.2982 11.9478 11.2093 11.2001 11.8502 10.2408C12.4912 9.28154 12.8333 8.15373 12.8333 7C12.8333 5.45291 12.2188 3.96918 11.1248 2.87521C10.0308 1.78125 8.5471 1.16667 7 1.16667ZM4.66662 9.91668C4.58998 9.91704 4.51404 9.90209 4.44325 9.87271C4.37246 9.84333 4.30826 9.8001 4.2544 9.74557C4.14516 9.6362 4.0838 9.48793 4.0838 9.33335C4.0838 9.17876 4.14516 9.0305 4.2544 8.92113L6.17553 7L4.25443 5.07891C4.15139 4.96832 4.09529 4.82207 4.09796 4.67094C4.10063 4.51982 4.16185 4.37563 4.26872 4.26876C4.3756 4.16188 4.51979 4.10066 4.67091 4.09799C4.82204 4.09532 4.96829 4.15142 5.07887 4.25446L6.99997 6.17556L8.92106 4.25446C9.03164 4.15142 9.1779 4.09532 9.32903 4.09799C9.48015 4.10066 9.62434 4.16188 9.73121 4.26876C9.83809 4.37563 9.89931 4.51982 9.90198 4.67094C9.90464 4.82207 9.84855 4.96832 9.74551 5.07891L7.82441 7L9.74554 8.92113C9.85478 9.0305 9.91614 9.17876 9.91614 9.33335C9.91614 9.48793 9.85478 9.6362 9.74554 9.74557C9.69168 9.8001 9.62748 9.84333 9.55669 9.87271C9.4859 9.90209 9.40996 9.91704 9.33332 9.91668C9.25668 9.91704 9.18073 9.90209 9.10995 9.87271C9.03916 9.84333 8.97495 9.8001 8.9211 9.74557L6.99997 7.82444L5.07884 9.74557C5.02499 9.8001 4.96078 9.84333 4.88999 9.87271C4.81921 9.90209 4.74326 9.91704 4.66662 9.91668Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n    template: function TimesCircleIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵdomElementStart(0, \"g\");\n        i0.ɵɵdomElement(1, \"path\", 0);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElementStart(2, \"defs\")(3, \"clipPath\", 1);\n        i0.ɵɵdomElement(4, \"rect\", 2);\n        i0.ɵɵdomElementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵdomProperty(\"id\", ctx.pathId);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimesCircleIcon, [{\n    type: Component,\n    args: [{\n      selector: '[data-p-icon=\"times-circle\"]',\n      standalone: true,\n      template: `\n        <svg:g [attr.clip-path]=\"pathId\">\n            <svg:path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M7 14C5.61553 14 4.26215 13.5895 3.11101 12.8203C1.95987 12.0511 1.06266 10.9579 0.532846 9.67879C0.00303296 8.3997 -0.13559 6.99224 0.134506 5.63437C0.404603 4.2765 1.07129 3.02922 2.05026 2.05026C3.02922 1.07129 4.2765 0.404603 5.63437 0.134506C6.99224 -0.13559 8.3997 0.00303296 9.67879 0.532846C10.9579 1.06266 12.0511 1.95987 12.8203 3.11101C13.5895 4.26215 14 5.61553 14 7C14 8.85652 13.2625 10.637 11.9497 11.9497C10.637 13.2625 8.85652 14 7 14ZM7 1.16667C5.84628 1.16667 4.71846 1.50879 3.75918 2.14976C2.79989 2.79074 2.05222 3.70178 1.61071 4.76768C1.16919 5.83358 1.05367 7.00647 1.27876 8.13803C1.50384 9.26958 2.05941 10.309 2.87521 11.1248C3.69102 11.9406 4.73042 12.4962 5.86198 12.7212C6.99353 12.9463 8.16642 12.8308 9.23232 12.3893C10.2982 11.9478 11.2093 11.2001 11.8502 10.2408C12.4912 9.28154 12.8333 8.15373 12.8333 7C12.8333 5.45291 12.2188 3.96918 11.1248 2.87521C10.0308 1.78125 8.5471 1.16667 7 1.16667ZM4.66662 9.91668C4.58998 9.91704 4.51404 9.90209 4.44325 9.87271C4.37246 9.84333 4.30826 9.8001 4.2544 9.74557C4.14516 9.6362 4.0838 9.48793 4.0838 9.33335C4.0838 9.17876 4.14516 9.0305 4.2544 8.92113L6.17553 7L4.25443 5.07891C4.15139 4.96832 4.09529 4.82207 4.09796 4.67094C4.10063 4.51982 4.16185 4.37563 4.26872 4.26876C4.3756 4.16188 4.51979 4.10066 4.67091 4.09799C4.82204 4.09532 4.96829 4.15142 5.07887 4.25446L6.99997 6.17556L8.92106 4.25446C9.03164 4.15142 9.1779 4.09532 9.32903 4.09799C9.48015 4.10066 9.62434 4.16188 9.73121 4.26876C9.83809 4.37563 9.89931 4.51982 9.90198 4.67094C9.90464 4.82207 9.84855 4.96832 9.74551 5.07891L7.82441 7L9.74554 8.92113C9.85478 9.0305 9.91614 9.17876 9.91614 9.33335C9.91614 9.48793 9.85478 9.6362 9.74554 9.74557C9.69168 9.8001 9.62748 9.84333 9.55669 9.87271C9.4859 9.90209 9.40996 9.91704 9.33332 9.91668C9.25668 9.91704 9.18073 9.90209 9.10995 9.87271C9.03916 9.84333 8.97495 9.8001 8.9211 9.74557L6.99997 7.82444L5.07884 9.74557C5.02499 9.8001 4.96078 9.84333 4.88999 9.87271C4.81921 9.90209 4.74326 9.91704 4.66662 9.91668Z\"\n                fill=\"currentColor\"\n            />\n        </svg:g>\n        <svg:defs>\n            <svg:clipPath [id]=\"pathId\">\n                <svg:rect width=\"14\" height=\"14\" fill=\"white\" />\n            </svg:clipPath>\n        </svg:defs>\n    `\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimesCircleIcon };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Directive, contentChild, computed, input, booleanAttribute, Input, EventEmitter, numberAttribute, ContentChildren, ContentChild, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { addClass, isEmpty, findSingle } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport * as i2 from 'primeng/badge';\nimport { BadgeModule } from 'primeng/badge';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Fluid } from 'primeng/fluid';\nimport { SpinnerIcon } from 'primeng/icons';\nimport { Ripple } from 'primeng/ripple';\nimport { style } from '@primeuix/styles/button';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"content\"];\nconst _c1 = [\"loadingicon\"];\nconst _c2 = [\"icon\"];\nconst _c3 = [\"*\"];\nconst _c4 = a0 => ({\n  class: a0\n});\nfunction Button_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Button_ng_container_3_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.cx(\"loadingIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.cn(ctx_r0.cx(\"loadingIcon\"), ctx_r0.spinnerIconClass()));\n    i0.ɵɵproperty(\"spin\", true);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_span_1_Template, 1, 4, \"span\", 3)(2, Button_ng_container_3_ng_container_1__svg_svg_2_Template, 1, 5, \"svg\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIcon);\n  }\n}\nfunction Button_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate);\n  }\n}\nfunction Button_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_Template, 3, 2, \"ng-container\", 2)(2, Button_ng_container_3_2_Template, 1, 1, null, 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIconTemplate && !ctx_r0._loadingIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r0.cx(\"loadingIcon\")));\n  }\n}\nfunction Button_ng_container_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r0.cx(\"icon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Button_ng_container_4_2_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_4_2_ng_template_0_Template, 0, 0, \"ng-template\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.icon && (ctx_r0.iconTemplate || ctx_r0._iconTemplate));\n  }\n}\nfunction Button_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_4_span_1_Template, 1, 3, \"span\", 3)(2, Button_ng_container_4_2_Template, 1, 1, null, 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.icon && !ctx_r0.iconTemplate && !ctx_r0._iconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0._iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r0.cx(\"icon\")));\n  }\n}\nfunction Button_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.cx(\"label\"));\n    i0.ɵɵattribute(\"aria-hidden\", ctx_r0.icon && !ctx_r0.label)(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction Button_p_badge_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-badge\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.badge)(\"severity\", ctx_r0.badgeSeverity);\n  }\n}\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-button p-component', {\n    'p-button-icon-only': (instance.icon || instance.buttonProps?.icon || instance.iconTemplate || instance._iconTemplate || instance.loadingIcon || instance.loadingIconTemplate || instance._loadingIconTemplate) && !instance.label && !instance.buttonProps?.label,\n    'p-button-vertical': (instance.iconPos === 'top' || instance.iconPos === 'bottom') && instance.label,\n    'p-button-loading': instance.loading || instance.buttonProps?.loading,\n    'p-button-link': instance.link || instance.buttonProps?.link,\n    [`p-button-${instance.severity || instance.buttonProps?.severity}`]: instance.severity || instance.buttonProps?.severity,\n    'p-button-raised': instance.raised || instance.buttonProps?.raised,\n    'p-button-rounded': instance.rounded || instance.buttonProps?.rounded,\n    'p-button-text': instance.text || instance.variant === 'text' || instance.buttonProps?.text || instance.buttonProps?.variant === 'text',\n    'p-button-outlined': instance.outlined || instance.variant === 'outlined' || instance.buttonProps?.outlined || instance.buttonProps?.variant === 'outlined',\n    'p-button-sm': instance.size === 'small' || instance.buttonProps?.size === 'small',\n    'p-button-lg': instance.size === 'large' || instance.buttonProps?.size === 'large',\n    'p-button-plain': instance.plain || instance.buttonProps?.plain,\n    'p-button-fluid': instance.hasFluid\n  }],\n  loadingIcon: 'p-button-loading-icon',\n  icon: ({\n    instance\n  }) => ['p-button-icon', {\n    [`p-button-icon-${instance.iconPos || instance.buttonProps?.iconPos}`]: instance.label || instance.buttonProps?.label,\n    'p-button-icon-left': (instance.iconPos === 'left' || instance.buttonProps?.iconPos === 'left') && instance.label || instance.buttonProps?.label,\n    'p-button-icon-right': (instance.iconPos === 'right' || instance.buttonProps?.iconPos === 'right') && instance.label || instance.buttonProps?.label\n  }, instance.icon, instance.buttonProps?.icon],\n  spinnerIcon: ({\n    instance\n  }) => {\n    return Object.entries(instance.iconClass()).filter(([, value]) => !!value).reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n  },\n  label: 'p-button-label'\n};\nclass ButtonStyle extends BaseStyle {\n  name = 'button';\n  theme = style;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵButtonStyle_BaseFactory;\n    return function ButtonStyle_Factory(__ngFactoryType__) {\n      return (ɵButtonStyle_BaseFactory || (ɵButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonStyle)))(__ngFactoryType__ || ButtonStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ButtonStyle,\n    factory: ButtonStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Button is an extension to standard button element with icons and theming.\n *\n * [Live Demo](https://www.primeng.org/button/)\n *\n * @module buttonstyle\n *\n */\nvar ButtonClasses;\n(function (ButtonClasses) {\n  /**\n   * Class name of the root element\n   */\n  ButtonClasses[\"root\"] = \"p-button\";\n  /**\n   * Class name of the loading icon element\n   */\n  ButtonClasses[\"loadingIcon\"] = \"p-button-loading-icon\";\n  /**\n   * Class name of the icon element\n   */\n  ButtonClasses[\"icon\"] = \"p-button-icon\";\n  /**\n   * Class name of the label element\n   */\n  ButtonClasses[\"label\"] = \"p-button-label\";\n})(ButtonClasses || (ButtonClasses = {}));\nconst INTERNAL_BUTTON_CLASSES = {\n  button: 'p-button',\n  component: 'p-component',\n  iconOnly: 'p-button-icon-only',\n  disabled: 'p-disabled',\n  loading: 'p-button-loading',\n  labelOnly: 'p-button-loading-label-only'\n};\nclass ButtonLabel extends BaseComponent {\n  _componentStyle = inject(ButtonStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵButtonLabel_BaseFactory;\n    return function ButtonLabel_Factory(__ngFactoryType__) {\n      return (ɵButtonLabel_BaseFactory || (ɵButtonLabel_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonLabel)))(__ngFactoryType__ || ButtonLabel);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ButtonLabel,\n    selectors: [[\"\", \"pButtonLabel\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ButtonLabel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-button-label\", true);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[pButtonLabel]',\n      providers: [ButtonStyle],\n      standalone: true,\n      host: {\n        '[class.p-button-label]': 'true'\n      }\n    }]\n  }], null, null);\n})();\nclass ButtonIcon extends BaseComponent {\n  _componentStyle = inject(ButtonStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵButtonIcon_BaseFactory;\n    return function ButtonIcon_Factory(__ngFactoryType__) {\n      return (ɵButtonIcon_BaseFactory || (ɵButtonIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonIcon)))(__ngFactoryType__ || ButtonIcon);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ButtonIcon,\n    selectors: [[\"\", \"pButtonIcon\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ButtonIcon_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-button-icon\", true);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[pButtonIcon]',\n      providers: [ButtonStyle],\n      standalone: true,\n      host: {\n        '[class.p-button-icon]': 'true'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Button directive is an extension to button component.\n * @group Components\n */\nclass ButtonDirective extends BaseComponent {\n  /**\n   * Position of the icon.\n   * @deprecated utilize pButtonIcon and pButtonLabel directives.\n   * @group Props\n   */\n  iconPos = 'left';\n  /**\n   * Uses to pass attributes to the loading icon's DOM element.\n   * @deprecated utilize pButonIcon instead.\n   * @group Props\n   */\n  loadingIcon;\n  set label(val) {\n    this._label = val;\n    if (this.initialized) {\n      this.updateLabel();\n      this.updateIcon();\n      this.setStyleClass();\n    }\n  }\n  set icon(val) {\n    this._icon = val;\n    if (this.initialized) {\n      this.updateIcon();\n      this.setStyleClass();\n    }\n  }\n  /**\n   * Whether the button is in loading state.\n   * @group Props\n   */\n  get loading() {\n    return this._loading;\n  }\n  set loading(val) {\n    this._loading = val;\n    if (this.initialized) {\n      this.updateIcon();\n      this.setStyleClass();\n    }\n  }\n  _buttonProps;\n  iconSignal = contentChild(ButtonIcon, ...(ngDevMode ? [{\n    debugName: \"iconSignal\"\n  }] : []));\n  labelSignal = contentChild(ButtonLabel, ...(ngDevMode ? [{\n    debugName: \"labelSignal\"\n  }] : []));\n  isIconOnly = computed(() => !!(!this.labelSignal() && this.iconSignal()), ...(ngDevMode ? [{\n    debugName: \"isIconOnly\"\n  }] : []));\n  set buttonProps(val) {\n    this._buttonProps = val;\n    if (val && typeof val === 'object') {\n      //@ts-ignore\n      Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n    }\n  }\n  _severity;\n  /**\n   * Defines the style of the button.\n   * @group Props\n   */\n  get severity() {\n    return this._severity;\n  }\n  set severity(value) {\n    this._severity = value;\n    if (this.initialized) {\n      this.setStyleClass();\n    }\n  }\n  /**\n   * Add a shadow to indicate elevation.\n   * @group Props\n   */\n  raised = false;\n  /**\n   * Add a circular border radius to the button.\n   * @group Props\n   */\n  rounded = false;\n  /**\n   * Add a textual class to the button without a background initially.\n   * @group Props\n   */\n  text = false;\n  /**\n   * Add a border class without a background initially.\n   * @group Props\n   */\n  outlined = false;\n  /**\n   * Defines the size of the button.\n   * @group Props\n   */\n  size = null;\n  /**\n   * Add a plain textual class to the button without a background initially.\n   * @group Props\n   */\n  plain = false;\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue undefined\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  _label;\n  _icon;\n  _loading = false;\n  initialized;\n  get htmlElement() {\n    return this.el.nativeElement;\n  }\n  _internalClasses = Object.values(INTERNAL_BUTTON_CLASSES);\n  pcFluid = inject(Fluid, {\n    optional: true,\n    host: true,\n    skipSelf: true\n  });\n  isTextButton = computed(() => !!(!this.iconSignal() && this.labelSignal() && this.text), ...(ngDevMode ? [{\n    debugName: \"isTextButton\"\n  }] : []));\n  /**\n   * Text of the button.\n   * @deprecated use pButtonLabel directive instead.\n   * @group Props\n   */\n  get label() {\n    return this._label;\n  }\n  /**\n   * Name of the icon.\n   * @deprecated use pButtonIcon directive instead\n   * @group Props\n   */\n  get icon() {\n    return this._icon;\n  }\n  /**\n   * Used to pass all properties of the ButtonProps to the Button component.\n   * @deprecated assign props directly to the button element.\n   * @group Props\n   */\n  get buttonProps() {\n    return this._buttonProps;\n  }\n  spinnerIcon = `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"p-icon-spin\">\n        <g clip-path=\"url(#clip0_417_21408)\">\n            <path\n                d=\"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\"\n                fill=\"currentColor\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0_417_21408\">\n                <rect width=\"14\" height=\"14\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>`;\n  _componentStyle = inject(ButtonStyle);\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    addClass(this.htmlElement, this.getStyleClass().join(' '));\n    this.createIcon();\n    this.createLabel();\n    this.initialized = true;\n  }\n  getStyleClass() {\n    const styleClass = [INTERNAL_BUTTON_CLASSES.button, INTERNAL_BUTTON_CLASSES.component];\n    if (this.icon && !this.label && isEmpty(this.htmlElement.textContent)) {\n      styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n    }\n    if (this.loading) {\n      styleClass.push(INTERNAL_BUTTON_CLASSES.disabled, INTERNAL_BUTTON_CLASSES.loading);\n      if (!this.icon && this.label) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.labelOnly);\n      }\n      if (this.icon && !this.label && !isEmpty(this.htmlElement.textContent)) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n      }\n    }\n    if (this.text) {\n      styleClass.push('p-button-text');\n    }\n    if (this.severity) {\n      styleClass.push(`p-button-${this.severity}`);\n    }\n    if (this.plain) {\n      styleClass.push('p-button-plain');\n    }\n    if (this.raised) {\n      styleClass.push('p-button-raised');\n    }\n    if (this.size) {\n      styleClass.push(`p-button-${this.size}`);\n    }\n    if (this.outlined) {\n      styleClass.push('p-button-outlined');\n    }\n    if (this.rounded) {\n      styleClass.push('p-button-rounded');\n    }\n    if (this.size === 'small') {\n      styleClass.push('p-button-sm');\n    }\n    if (this.size === 'large') {\n      styleClass.push('p-button-lg');\n    }\n    if (this.hasFluid) {\n      styleClass.push('p-button-fluid');\n    }\n    return styleClass;\n  }\n  get hasFluid() {\n    return this.fluid() ?? !!this.pcFluid;\n  }\n  setStyleClass() {\n    const styleClass = this.getStyleClass();\n    this.removeExistingSeverityClass();\n    this.htmlElement.classList.remove(...this._internalClasses);\n    this.htmlElement.classList.add(...styleClass);\n  }\n  removeExistingSeverityClass() {\n    const severityArray = ['success', 'info', 'warn', 'danger', 'help', 'primary', 'secondary', 'contrast'];\n    const existingSeverityClass = this.htmlElement.classList.value.split(' ').find(cls => severityArray.some(severity => cls === `p-button-${severity}`));\n    if (existingSeverityClass) {\n      this.htmlElement.classList.remove(existingSeverityClass);\n    }\n  }\n  createLabel() {\n    const created = findSingle(this.htmlElement, '.p-button-label');\n    if (!created && this.label) {\n      let labelElement = this.document.createElement('span');\n      if (this.icon && !this.label) {\n        labelElement.setAttribute('aria-hidden', 'true');\n      }\n      labelElement.className = 'p-button-label';\n      labelElement.appendChild(this.document.createTextNode(this.label));\n      this.htmlElement.appendChild(labelElement);\n    }\n  }\n  createIcon() {\n    const created = findSingle(this.htmlElement, '.p-button-icon');\n    if (!created && (this.icon || this.loading)) {\n      let iconElement = this.document.createElement('span');\n      iconElement.className = 'p-button-icon';\n      iconElement.setAttribute('aria-hidden', 'true');\n      let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n      if (iconPosClass) {\n        addClass(iconElement, iconPosClass);\n      }\n      let iconClass = this.getIconClass();\n      if (iconClass) {\n        addClass(iconElement, iconClass);\n      }\n      if (!this.loadingIcon && this.loading) {\n        iconElement.innerHTML = this.spinnerIcon;\n      }\n      this.htmlElement.insertBefore(iconElement, this.htmlElement.firstChild);\n    }\n  }\n  updateLabel() {\n    let labelElement = findSingle(this.htmlElement, '.p-button-label');\n    if (!this.label) {\n      labelElement && this.htmlElement.removeChild(labelElement);\n      return;\n    }\n    labelElement ? labelElement.textContent = this.label : this.createLabel();\n  }\n  updateIcon() {\n    let iconElement = findSingle(this.htmlElement, '.p-button-icon');\n    let labelElement = findSingle(this.htmlElement, '.p-button-label');\n    if (this.loading && !this.loadingIcon && iconElement) {\n      iconElement.innerHTML = this.spinnerIcon;\n    } else if (iconElement?.innerHTML) {\n      iconElement.innerHTML = '';\n    }\n    if (iconElement) {\n      if (this.iconPos) {\n        iconElement.className = 'p-button-icon ' + (labelElement ? 'p-button-icon-' + this.iconPos : '') + ' ' + this.getIconClass();\n      } else {\n        iconElement.className = 'p-button-icon ' + this.getIconClass();\n      }\n    } else {\n      this.createIcon();\n    }\n  }\n  getIconClass() {\n    return this.loading ? 'p-button-loading-icon ' + (this.loadingIcon ? this.loadingIcon : 'p-icon') : this.icon || 'p-hidden';\n  }\n  ngOnDestroy() {\n    this.initialized = false;\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵButtonDirective_BaseFactory;\n    return function ButtonDirective_Factory(__ngFactoryType__) {\n      return (ɵButtonDirective_BaseFactory || (ɵButtonDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonDirective)))(__ngFactoryType__ || ButtonDirective);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ButtonDirective,\n    selectors: [[\"\", \"pButton\", \"\"]],\n    contentQueries: function ButtonDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.iconSignal, ButtonIcon, 5);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.labelSignal, ButtonLabel, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(2);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function ButtonDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-button-icon-only\", ctx.isIconOnly())(\"p-button-text\", ctx.isTextButton());\n      }\n    },\n    inputs: {\n      iconPos: \"iconPos\",\n      loadingIcon: \"loadingIcon\",\n      loading: \"loading\",\n      severity: \"severity\",\n      raised: [2, \"raised\", \"raised\", booleanAttribute],\n      rounded: [2, \"rounded\", \"rounded\", booleanAttribute],\n      text: [2, \"text\", \"text\", booleanAttribute],\n      outlined: [2, \"outlined\", \"outlined\", booleanAttribute],\n      size: \"size\",\n      plain: [2, \"plain\", \"plain\", booleanAttribute],\n      fluid: [1, \"fluid\"],\n      label: \"label\",\n      icon: \"icon\",\n      buttonProps: \"buttonProps\"\n    },\n    features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pButton]',\n      standalone: true,\n      providers: [ButtonStyle],\n      host: {\n        '[class.p-button-icon-only]': 'isIconOnly()',\n        '[class.p-button-text]': 'isTextButton()'\n      }\n    }]\n  }], null, {\n    iconPos: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }],\n    raised: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    rounded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    text: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    outlined: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    size: [{\n      type: Input\n    }],\n    plain: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    buttonProps: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Button is an extension to standard button element with icons and theming.\n * @group Components\n */\nclass Button extends BaseComponent {\n  /**\n   * Type of the button.\n   * @group Props\n   */\n  type = 'button';\n  /**\n   * Position of the icon.\n   * @group Props\n   */\n  iconPos = 'left';\n  /**\n   * Name of the icon.\n   * @group Props\n   */\n  icon;\n  /**\n   * Value of the badge.\n   * @group Props\n   */\n  badge;\n  /**\n   * Uses to pass attributes to the label's DOM element.\n   * @group Props\n   */\n  label;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Whether the button is in loading state.\n   * @group Props\n   */\n  loading = false;\n  /**\n   * Icon to display in loading state.\n   * @group Props\n   */\n  loadingIcon;\n  /**\n   * Add a shadow to indicate elevation.\n   * @group Props\n   */\n  raised = false;\n  /**\n   * Add a circular border radius to the button.\n   * @group Props\n   */\n  rounded = false;\n  /**\n   * Add a textual class to the button without a background initially.\n   * @group Props\n   */\n  text = false;\n  /**\n   * Add a plain textual class to the button without a background initially.\n   * @group Props\n   */\n  plain = false;\n  /**\n   * Defines the style of the button.\n   * @group Props\n   */\n  severity;\n  /**\n   * Add a border class without a background initially.\n   * @group Props\n   */\n  outlined = false;\n  /**\n   * Add a link style to the button.\n   * @group Props\n   */\n  link = false;\n  /**\n   * Add a tabindex to the button.\n   * @group Props\n   */\n  tabindex;\n  /**\n   * Defines the size of the button.\n   * @group Props\n   */\n  size;\n  /**\n   * Specifies the variant of the component.\n   * @group Props\n   */\n  variant;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the badge.\n   * @group Props\n   * @deprecated use badgeSeverity instead.\n   */\n  badgeClass;\n  /**\n   * Severity type of the badge.\n   * @group Props\n   * @defaultValue secondary\n   */\n  badgeSeverity = 'secondary';\n  /**\n   * Used to define a string that autocomplete attribute the current element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Button props as an object.\n   * @group Props\n   */\n  buttonProps;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue undefined\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * Callback to execute when button is clicked.\n   * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (click).\n   * @param {MouseEvent} event - Mouse event.\n   * @group Emits\n   */\n  onClick = new EventEmitter();\n  /**\n   * Callback to execute when button is focused.\n   * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (focus).\n   * @param {FocusEvent} event - Focus event.\n   * @group Emits\n   */\n  onFocus = new EventEmitter();\n  /**\n   * Callback to execute when button loses focus.\n   * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (blur).\n   * @param {FocusEvent} event - Focus event.\n   * @group Emits\n   */\n  onBlur = new EventEmitter();\n  /**\n   * Template of the content.\n   * @group Templates\n   **/\n  contentTemplate;\n  /**\n   * Template of the loading.\n   * @group Templates\n   **/\n  loadingIconTemplate;\n  /**\n   * Template of the icon.\n   * @group Templates\n   **/\n  iconTemplate;\n  templates;\n  pcFluid = inject(Fluid, {\n    optional: true,\n    host: true,\n    skipSelf: true\n  });\n  get hasFluid() {\n    return this.fluid() ?? !!this.pcFluid;\n  }\n  _componentStyle = inject(ButtonStyle);\n  _contentTemplate;\n  _iconTemplate;\n  _loadingIconTemplate;\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this._contentTemplate = item.template;\n          break;\n        case 'icon':\n          this._iconTemplate = item.template;\n          break;\n        case 'loadingicon':\n          this._loadingIconTemplate = item.template;\n          break;\n        default:\n          this._contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  spinnerIconClass() {\n    return Object.entries(this.iconClass()).filter(([, value]) => !!value).reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n  }\n  iconClass() {\n    return {\n      [`p-button-loading-icon pi-spin ${this.loadingIcon ?? ''}`]: this.loading,\n      'p-button-icon': true,\n      'p-button-icon-left': this.iconPos === 'left' && this.label,\n      'p-button-icon-right': this.iconPos === 'right' && this.label,\n      'p-button-icon-top': this.iconPos === 'top' && this.label,\n      'p-button-icon-bottom': this.iconPos === 'bottom' && this.label\n    };\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵButton_BaseFactory;\n    return function Button_Factory(__ngFactoryType__) {\n      return (ɵButton_BaseFactory || (ɵButton_BaseFactory = i0.ɵɵgetInheritedFactory(Button)))(__ngFactoryType__ || Button);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Button,\n    selectors: [[\"p-button\"]],\n    contentQueries: function Button_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    inputs: {\n      type: \"type\",\n      iconPos: \"iconPos\",\n      icon: \"icon\",\n      badge: \"badge\",\n      label: \"label\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      loading: [2, \"loading\", \"loading\", booleanAttribute],\n      loadingIcon: \"loadingIcon\",\n      raised: [2, \"raised\", \"raised\", booleanAttribute],\n      rounded: [2, \"rounded\", \"rounded\", booleanAttribute],\n      text: [2, \"text\", \"text\", booleanAttribute],\n      plain: [2, \"plain\", \"plain\", booleanAttribute],\n      severity: \"severity\",\n      outlined: [2, \"outlined\", \"outlined\", booleanAttribute],\n      link: [2, \"link\", \"link\", booleanAttribute],\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      size: \"size\",\n      variant: \"variant\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      badgeClass: \"badgeClass\",\n      badgeSeverity: \"badgeSeverity\",\n      ariaLabel: \"ariaLabel\",\n      buttonProps: \"buttonProps\",\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n      fluid: [1, \"fluid\"]\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\"\n    },\n    features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c3,\n    decls: 7,\n    vars: 15,\n    consts: [[\"pRipple\", \"\", 3, \"click\", \"focus\", \"blur\", \"ngStyle\", \"disabled\", \"pAutoFocus\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [3, \"value\", \"severity\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"data-p-icon\", \"spinner\", 3, \"class\", \"spin\", 4, \"ngIf\"], [\"data-p-icon\", \"spinner\", 3, \"spin\"], [3, \"ngIf\"], [3, \"value\", \"severity\"]],\n    template: function Button_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n          return ctx.onFocus.emit($event);\n        })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n          return ctx.onBlur.emit($event);\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵtemplate(2, Button_ng_container_2_Template, 1, 0, \"ng-container\", 1)(3, Button_ng_container_3_Template, 3, 5, \"ng-container\", 2)(4, Button_ng_container_4_Template, 3, 5, \"ng-container\", 2)(5, Button_span_5_Template, 2, 5, \"span\", 3)(6, Button_p_badge_6_Template, 1, 2, \"p-badge\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass, ctx.buttonProps == null ? null : ctx.buttonProps.styleClass));\n        i0.ɵɵproperty(\"ngStyle\", ctx.style || (ctx.buttonProps == null ? null : ctx.buttonProps.style))(\"disabled\", ctx.disabled || ctx.loading || (ctx.buttonProps == null ? null : ctx.buttonProps.disabled))(\"pAutoFocus\", ctx.autofocus || (ctx.buttonProps == null ? null : ctx.buttonProps.autofocus));\n        i0.ɵɵattribute(\"type\", ctx.type || (ctx.buttonProps == null ? null : ctx.buttonProps.type))(\"aria-label\", ctx.ariaLabel || (ctx.buttonProps == null ? null : ctx.buttonProps.ariaLabel))(\"data-pc-name\", \"button\")(\"data-pc-section\", \"root\")(\"tabindex\", ctx.tabindex || (ctx.buttonProps == null ? null : ctx.buttonProps.tabindex));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || ctx._contentTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && !ctx._contentTemplate && ctx.label);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && !ctx._contentTemplate && ctx.badge);\n      }\n    },\n    dependencies: [CommonModule, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, Ripple, AutoFocus, SpinnerIcon, BadgeModule, i2.Badge, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Button, [{\n    type: Component,\n    args: [{\n      selector: 'p-button',\n      standalone: true,\n      imports: [CommonModule, Ripple, AutoFocus, SpinnerIcon, BadgeModule, SharedModule],\n      template: `\n        <button\n            [attr.type]=\"type || buttonProps?.type\"\n            [attr.aria-label]=\"ariaLabel || buttonProps?.ariaLabel\"\n            [ngStyle]=\"style || buttonProps?.style\"\n            [disabled]=\"disabled || loading || buttonProps?.disabled\"\n            [class]=\"cn(cx('root'), styleClass, buttonProps?.styleClass)\"\n            (click)=\"onClick.emit($event)\"\n            (focus)=\"onFocus.emit($event)\"\n            (blur)=\"onBlur.emit($event)\"\n            pRipple\n            [attr.data-pc-name]=\"'button'\"\n            [attr.data-pc-section]=\"'root'\"\n            [attr.tabindex]=\"tabindex || buttonProps?.tabindex\"\n            [pAutoFocus]=\"autofocus || buttonProps?.autofocus\"\n        >\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n            <ng-container *ngIf=\"loading\">\n                <ng-container *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\">\n                    <span *ngIf=\"loadingIcon\" [class]=\"cx('loadingIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\"></span>\n                    <svg data-p-icon=\"spinner\" *ngIf=\"!loadingIcon\" [class]=\"cn(cx('loadingIcon'), spinnerIconClass())\" [spin]=\"true\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\" />\n                </ng-container>\n                <ng-template [ngIf]=\"loadingIconTemplate || _loadingIconTemplate\" *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate; context: { class: cx('loadingIcon') }\"></ng-template>\n            </ng-container>\n            <ng-container *ngIf=\"!loading\">\n                <span *ngIf=\"icon && !iconTemplate && !_iconTemplate\" [class]=\"cx('icon')\" [attr.data-pc-section]=\"'icon'\"></span>\n                <ng-template [ngIf]=\"!icon && (iconTemplate || _iconTemplate)\" *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { class: cx('icon') }\"></ng-template>\n            </ng-container>\n            <span [class]=\"cx('label')\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate && !_contentTemplate && label\" [attr.data-pc-section]=\"'label'\">{{ label }}</span>\n            <p-badge *ngIf=\"!contentTemplate && !_contentTemplate && badge\" [value]=\"badge\" [severity]=\"badgeSeverity\"></p-badge>\n        </button>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [ButtonStyle]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    badge: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    raised: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    rounded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    text: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    plain: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    severity: [{\n      type: Input\n    }],\n    outlined: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    link: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    size: [{\n      type: Input\n    }],\n    variant: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    badgeClass: [{\n      type: Input\n    }],\n    badgeSeverity: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    buttonProps: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: ['content']\n    }],\n    loadingIconTemplate: [{\n      type: ContentChild,\n      args: ['loadingicon']\n    }],\n    iconTemplate: [{\n      type: ContentChild,\n      args: ['icon']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ButtonModule {\n  static ɵfac = function ButtonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ButtonModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ButtonModule,\n    imports: [CommonModule, ButtonDirective, Button, SharedModule, ButtonLabel, ButtonIcon],\n    exports: [ButtonDirective, Button, ButtonLabel, ButtonIcon, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, Button, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonDirective, Button, SharedModule, ButtonLabel, ButtonIcon],\n      exports: [ButtonDirective, Button, ButtonLabel, ButtonIcon, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonClasses, ButtonDirective, ButtonIcon, ButtonLabel, ButtonModule, ButtonStyle };\n","/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ɵRuntimeError as _RuntimeError, Inject, ViewEncapsulation } from '@angular/core';\nimport { sequence } from './private_export.mjs';\nexport { AUTO_STYLE, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE } from './private_export.mjs';\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static ɵfac = function AnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AnimationBuilder)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationBuilder,\n    factory: () => (() => inject(BrowserAnimationBuilder))(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _nextAnimationId = 0;\n  _renderer;\n  constructor(rootRenderer, doc) {\n    super();\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static ɵfac = function BrowserAnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserAnimationBuilder,\n    factory: BrowserAnimationBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  _id;\n  _renderer;\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  id;\n  element;\n  _renderer;\n  parentPlayer = null;\n  _started = false;\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n  totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\nexport { AnimationBuilder, AnimationFactory, sequence, BrowserAnimationBuilder as ɵBrowserAnimationBuilder };\n","import { trigger, state, transition, style as style$1, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, numberAttribute, Output, Input, ChangeDetectionStrategy, ViewEncapsulation, Component, booleanAttribute, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { uuid, isEmpty, setAttribute } from '@primeuix/utils';\nimport { SharedModule, MessageService, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { CheckIcon, ExclamationTriangleIcon, InfoCircleIcon, TimesIcon, TimesCircleIcon } from 'primeng/icons';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { style } from '@primeuix/styles/toast';\nimport { BaseStyle } from 'primeng/base';\n\n// Position\nconst _c0 = (a0, a1, a2, a3) => ({\n  showTransformParams: a0,\n  hideTransformParams: a1,\n  showTransitionParams: a2,\n  hideTransitionParams: a3\n});\nconst _c1 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c2 = (a0, a1) => ({\n  $implicit: a0,\n  closeFn: a1\n});\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction ToastItem_Conditional_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToastItem_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToastItem_Conditional_2_ng_container_0_Template, 1, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headlessTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c2, ctx_r1.message, ctx_r1.onCloseIconClick));\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cn(ctx_r1.cx(\"messageIcon\"), ctx_r1.message == null ? null : ctx_r1.message.icon));\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_0_Template, 1, 4, \":svg:svg\", 6)(1, ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_1_Template, 1, 4, \":svg:svg\", 7)(2, ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_2_Template, 1, 4, \":svg:svg\", 8)(3, ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_3_Template, 1, 4, \":svg:svg\", 9)(4, ToastItem_Conditional_3_ng_container_1_Conditional_2_Case_4_Template, 1, 4, \":svg:svg\", 7);\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵconditional((tmp_4_0 = ctx_r1.message.severity) === \"success\" ? 0 : tmp_4_0 === \"info\" ? 1 : tmp_4_0 === \"error\" ? 2 : tmp_4_0 === \"warn\" ? 3 : 4);\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵconditionalCreate(1, ToastItem_Conditional_3_ng_container_1_Conditional_1_Template, 1, 2, \"span\", 2)(2, ToastItem_Conditional_3_ng_container_1_Conditional_2_Template, 5, 1);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.message.icon ? 1 : 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"messageText\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"summary\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"summary\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message.summary, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"detail\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"detail\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.message.detail);\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.cn(ctx_r1.cx(\"closeIcon\"), ctx_r1.message == null ? null : ctx_r1.message.closeIcon));\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToastItem_Conditional_3_Conditional_3_Conditional_2_span_0_Template, 1, 2, \"span\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.message.closeIcon);\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cx(\"closeIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"closeicon\");\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ToastItem_Conditional_3_Conditional_3_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onCloseIconClick($event));\n    })(\"keydown.enter\", function ToastItem_Conditional_3_Conditional_3_Template_button_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onCloseIconClick($event));\n    });\n    i0.ɵɵconditionalCreate(2, ToastItem_Conditional_3_Conditional_3_Conditional_2_Template, 1, 1, \"span\", 2)(3, ToastItem_Conditional_3_Conditional_3_Conditional_3_Template, 1, 4, \":svg:svg\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"class\", ctx_r1.cx(\"closeButton\"))(\"aria-label\", ctx_r1.closeAriaLabel)(\"data-pc-section\", \"closebutton\");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.message.closeIcon ? 2 : 3);\n  }\n}\nfunction ToastItem_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ToastItem_Conditional_3_ng_container_1_Template, 8, 9, \"ng-container\", 4)(2, ToastItem_Conditional_3_ng_container_2_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵconditionalCreate(3, ToastItem_Conditional_3_Conditional_3_Template, 4, 4, \"div\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.cn(ctx_r1.cx(\"messageContent\"), ctx_r1.message == null ? null : ctx_r1.message.contentStyleClass));\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.template);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c3, ctx_r1.message));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional((ctx_r1.message == null ? null : ctx_r1.message.closable) !== false ? 3 : -1);\n  }\n}\nconst _c4 = [\"message\"];\nconst _c5 = [\"headless\"];\nfunction Toast_p_toastItem_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-toastItem\", 1);\n    i0.ɵɵlistener(\"onClose\", function Toast_p_toastItem_0_Template_p_toastItem_onClose_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onMessageClose($event));\n    })(\"@toastAnimation.start\", function Toast_p_toastItem_0_Template_p_toastItem_animation_toastAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationStart($event));\n    })(\"@toastAnimation.done\", function Toast_p_toastItem_0_Template_p_toastItem_animation_toastAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationEnd($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"message\", msg_r3)(\"index\", i_r4)(\"life\", ctx_r1.life)(\"template\", ctx_r1.template || ctx_r1._template)(\"headlessTemplate\", ctx_r1.headlessTemplate || ctx_r1._headlessTemplate)(\"@toastAnimation\", undefined)(\"showTransformOptions\", ctx_r1.showTransformOptions)(\"hideTransformOptions\", ctx_r1.hideTransformOptions)(\"showTransitionOptions\", ctx_r1.showTransitionOptions)(\"hideTransitionOptions\", ctx_r1.hideTransitionOptions);\n  }\n}\nconst inlineStyles = {\n  root: ({\n    instance\n  }) => {\n    const {\n      _position\n    } = instance;\n    return {\n      position: 'fixed',\n      top: _position === 'top-right' || _position === 'top-left' || _position === 'top-center' ? '20px' : _position === 'center' ? '50%' : null,\n      right: (_position === 'top-right' || _position === 'bottom-right') && '20px',\n      bottom: (_position === 'bottom-left' || _position === 'bottom-right' || _position === 'bottom-center') && '20px',\n      left: _position === 'top-left' || _position === 'bottom-left' ? '20px' : _position === 'center' || _position === 'top-center' || _position === 'bottom-center' ? '50%' : null\n    };\n  }\n};\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-toast p-component', `p-toast-${instance._position}`],\n  message: ({\n    instance\n  }) => ({\n    'p-toast-message': true,\n    'p-toast-message-info': instance.message.severity === 'info' || instance.message.severity === undefined,\n    'p-toast-message-warn': instance.message.severity === 'warn',\n    'p-toast-message-error': instance.message.severity === 'error',\n    'p-toast-message-success': instance.message.severity === 'success',\n    'p-toast-message-secondary': instance.message.severity === 'secondary',\n    'p-toast-message-contrast': instance.message.severity === 'contrast'\n  }),\n  messageContent: 'p-toast-message-content',\n  messageIcon: ({\n    instance\n  }) => ({\n    'p-toast-message-icon': true,\n    [`pi ${instance.message.icon}`]: !!instance.message.icon\n  }),\n  messageText: 'p-toast-message-text',\n  summary: 'p-toast-summary',\n  detail: 'p-toast-detail',\n  closeButton: 'p-toast-close-button',\n  closeIcon: ({\n    instance\n  }) => ({\n    'p-toast-close-icon': true,\n    [`pi ${instance.message.closeIcon}`]: !!instance.message.closeIcon\n  })\n};\nclass ToastStyle extends BaseStyle {\n  name = 'toast';\n  theme = style;\n  classes = classes;\n  inlineStyles = inlineStyles;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵToastStyle_BaseFactory;\n    return function ToastStyle_Factory(__ngFactoryType__) {\n      return (ɵToastStyle_BaseFactory || (ɵToastStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ToastStyle)))(__ngFactoryType__ || ToastStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToastStyle,\n    factory: ToastStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Toast is used to display messages in an overlay.\n *\n * [Live Demo](https://www.primeng.org/toast/)\n *\n * @module toaststyle\n *\n */\nvar ToastClasses;\n(function (ToastClasses) {\n  /**\n   * Class name of the root element\n   */\n  ToastClasses[\"root\"] = \"p-toast\";\n  /**\n   * Class name of the message element\n   */\n  ToastClasses[\"message\"] = \"p-toast-message\";\n  /**\n   * Class name of the message content element\n   */\n  ToastClasses[\"messageContent\"] = \"p-toast-message-content\";\n  /**\n   * Class name of the message icon element\n   */\n  ToastClasses[\"messageIcon\"] = \"p-toast-message-icon\";\n  /**\n   * Class name of the message text element\n   */\n  ToastClasses[\"messageText\"] = \"p-toast-message-text\";\n  /**\n   * Class name of the summary element\n   */\n  ToastClasses[\"summary\"] = \"p-toast-summary\";\n  /**\n   * Class name of the detail element\n   */\n  ToastClasses[\"detail\"] = \"p-toast-detail\";\n  /**\n   * Class name of the close button element\n   */\n  ToastClasses[\"closeButton\"] = \"p-toast-close-button\";\n  /**\n   * Class name of the close icon element\n   */\n  ToastClasses[\"closeIcon\"] = \"p-toast-close-icon\";\n})(ToastClasses || (ToastClasses = {}));\nclass ToastItem extends BaseComponent {\n  zone;\n  message;\n  index;\n  life;\n  template;\n  headlessTemplate;\n  showTransformOptions;\n  hideTransformOptions;\n  showTransitionOptions;\n  hideTransitionOptions;\n  onClose = new EventEmitter();\n  _componentStyle = inject(ToastStyle);\n  timeout;\n  constructor(zone) {\n    super();\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.initTimeout();\n  }\n  initTimeout() {\n    if (!this.message?.sticky) {\n      this.zone.runOutsideAngular(() => {\n        this.timeout = setTimeout(() => {\n          this.onClose.emit({\n            index: this.index,\n            message: this.message\n          });\n        }, this.message?.life || this.life || 3000);\n      });\n    }\n  }\n  clearTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }\n  onMouseEnter() {\n    this.clearTimeout();\n  }\n  onMouseLeave() {\n    this.initTimeout();\n  }\n  onCloseIconClick = event => {\n    this.clearTimeout();\n    this.onClose.emit({\n      index: this.index,\n      message: this.message\n    });\n    event.preventDefault();\n  };\n  get closeAriaLabel() {\n    return this.config.translation.aria ? this.config.translation.aria.close : undefined;\n  }\n  ngOnDestroy() {\n    this.clearTimeout();\n    super.ngOnDestroy();\n  }\n  static ɵfac = function ToastItem_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ToastItem)(i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToastItem,\n    selectors: [[\"p-toastItem\"]],\n    inputs: {\n      message: \"message\",\n      index: [2, \"index\", \"index\", numberAttribute],\n      life: [2, \"life\", \"life\", numberAttribute],\n      template: \"template\",\n      headlessTemplate: \"headlessTemplate\",\n      showTransformOptions: \"showTransformOptions\",\n      hideTransformOptions: \"hideTransformOptions\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\"\n    },\n    outputs: {\n      onClose: \"onClose\"\n    },\n    features: [i0.ɵɵProvidersFeature([ToastStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 14,\n    consts: [[\"container\", \"\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"mouseenter\", \"mouseleave\"], [3, \"class\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [3, \"ngClass\"], [\"data-p-icon\", \"check\", 3, \"class\"], [\"data-p-icon\", \"info-circle\", 3, \"class\"], [\"data-p-icon\", \"times-circle\", 3, \"class\"], [\"data-p-icon\", \"exclamation-triangle\", 3, \"class\"], [\"data-p-icon\", \"check\"], [\"data-p-icon\", \"info-circle\"], [\"data-p-icon\", \"times-circle\"], [\"data-p-icon\", \"exclamation-triangle\"], [\"type\", \"button\", \"autofocus\", \"\", 3, \"click\", \"keydown.enter\"], [\"data-p-icon\", \"times\", 3, \"class\"], [3, \"class\", 4, \"ngIf\"], [\"data-p-icon\", \"times\"]],\n    template: function ToastItem_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵlistener(\"mouseenter\", function ToastItem_Template_div_mouseenter_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onMouseEnter());\n        })(\"mouseleave\", function ToastItem_Template_div_mouseleave_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onMouseLeave());\n        });\n        i0.ɵɵconditionalCreate(2, ToastItem_Conditional_2_Template, 1, 5, \"ng-container\")(3, ToastItem_Conditional_3_Template, 4, 9, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"message\"), ctx.message == null ? null : ctx.message.styleClass));\n        i0.ɵɵproperty(\"@messageState\", i0.ɵɵpureFunction1(12, _c1, i0.ɵɵpureFunction4(7, _c0, ctx.showTransformOptions, ctx.hideTransformOptions, ctx.showTransitionOptions, ctx.hideTransitionOptions)));\n        i0.ɵɵattribute(\"id\", ctx.message == null ? null : ctx.message.id)(\"data-pc-name\", \"toast\")(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.headlessTemplate ? 2 : 3);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, CheckIcon, ExclamationTriangleIcon, InfoCircleIcon, TimesIcon, TimesCircleIcon, SharedModule],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('messageState', [state('visible', style$1({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => *', [style$1({\n        transform: '{{showTransformParams}}',\n        opacity: 0\n      }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style$1({\n        height: 0,\n        opacity: 0,\n        transform: '{{hideTransformParams}}'\n      }))])])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-toastItem',\n      standalone: true,\n      imports: [CommonModule, CheckIcon, ExclamationTriangleIcon, InfoCircleIcon, TimesIcon, TimesCircleIcon, SharedModule],\n      template: `\n        <div\n            #container\n            [attr.id]=\"message?.id\"\n            [class]=\"cn(cx('message'), message?.styleClass)\"\n            [@messageState]=\"{\n                value: 'visible',\n                params: {\n                    showTransformParams: showTransformOptions,\n                    hideTransformParams: hideTransformOptions,\n                    showTransitionParams: showTransitionOptions,\n                    hideTransitionParams: hideTransitionOptions\n                }\n            }\"\n            (mouseenter)=\"onMouseEnter()\"\n            (mouseleave)=\"onMouseLeave()\"\n            role=\"alert\"\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [attr.data-pc-name]=\"'toast'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            @if (headlessTemplate) {\n                <ng-container *ngTemplateOutlet=\"headlessTemplate; context: { $implicit: message, closeFn: onCloseIconClick }\"></ng-container>\n            } @else {\n                <div [class]=\"cn(cx('messageContent'), message?.contentStyleClass)\" [attr.data-pc-section]=\"'content'\">\n                    <ng-container *ngIf=\"!template\">\n                        @if (message.icon) {\n                            <span [class]=\"cn(cx('messageIcon'), message?.icon)\"></span>\n                        } @else {\n                            @switch (message.severity) {\n                                @case ('success') {\n                                    <svg data-p-icon=\"check\" [class]=\"cx('messageIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'icon'\" />\n                                }\n                                @case ('info') {\n                                    <svg data-p-icon=\"info-circle\" [class]=\"cx('messageIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'icon'\" />\n                                }\n                                @case ('error') {\n                                    <svg data-p-icon=\"times-circle\" [class]=\"cx('messageIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'icon'\" />\n                                }\n                                @case ('warn') {\n                                    <svg data-p-icon=\"exclamation-triangle\" [class]=\"cx('messageIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'icon'\" />\n                                }\n                                @default {\n                                    <svg data-p-icon=\"info-circle\" [class]=\"cx('messageIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'icon'\" />\n                                }\n                            }\n                        }\n                        <div [ngClass]=\"cx('messageText')\" [attr.data-pc-section]=\"'text'\">\n                            <div [ngClass]=\"cx('summary')\" [attr.data-pc-section]=\"'summary'\">\n                                {{ message.summary }}\n                            </div>\n                            <div [ngClass]=\"cx('detail')\" [attr.data-pc-section]=\"'detail'\">{{ message.detail }}</div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngTemplateOutlet=\"template; context: { $implicit: message }\"></ng-container>\n                    @if (message?.closable !== false) {\n                        <div>\n                            <button type=\"button\" [attr.class]=\"cx('closeButton')\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" [attr.aria-label]=\"closeAriaLabel\" [attr.data-pc-section]=\"'closebutton'\" autofocus>\n                                @if (message.closeIcon) {\n                                    <span *ngIf=\"message.closeIcon\" [class]=\"cn(cx('closeIcon'), message?.closeIcon)\"></span>\n                                } @else {\n                                    <svg data-p-icon=\"times\" [class]=\"cx('closeIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'closeicon'\" />\n                                }\n                            </button>\n                        </div>\n                    }\n                </div>\n            }\n        </div>\n    `,\n      animations: [trigger('messageState', [state('visible', style$1({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => *', [style$1({\n        transform: '{{showTransformParams}}',\n        opacity: 0\n      }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style$1({\n        height: 0,\n        opacity: 0,\n        transform: '{{hideTransformParams}}'\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [ToastStyle]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], {\n    message: [{\n      type: Input\n    }],\n    index: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    life: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    template: [{\n      type: Input\n    }],\n    headlessTemplate: [{\n      type: Input\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Toast is used to display messages in an overlay.\n * @group Components\n */\nclass Toast extends BaseComponent {\n  /**\n   * Key of the message in case message is targeted to a specific toast component.\n   * @group Props\n   */\n  key;\n  /**\n   * Whether to automatically manage layering.\n   * @group Props\n   */\n  autoZIndex = true;\n  /**\n   * Base zIndex value to use in layering.\n   * @group Props\n   */\n  baseZIndex = 0;\n  /**\n   * The default time to display messages for in milliseconds.\n   * @group Props\n   */\n  life = 3000;\n  /**\n   * Inline class of the component.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Position of the toast in viewport.\n   * @group Props\n   */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    this._position = value;\n    this.cd.markForCheck();\n  }\n  /**\n   * It does not add the new message if there is already a toast displayed with the same content\n   * @group Props\n   */\n  preventOpenDuplicates = false;\n  /**\n   * Displays only once a message with the same content.\n   * @group Props\n   */\n  preventDuplicates = false;\n  /**\n   * Transform options of the show animation.\n   * @group Props\n   */\n  showTransformOptions = 'translateY(100%)';\n  /**\n   * Transform options of the hide animation.\n   * @group Props\n   */\n  hideTransformOptions = 'translateY(-100%)';\n  /**\n   * Transition options of the show animation.\n   * @group Props\n   */\n  showTransitionOptions = '300ms ease-out';\n  /**\n   * Transition options of the hide animation.\n   * @group Props\n   */\n  hideTransitionOptions = '250ms ease-in';\n  /**\n   * Object literal to define styles per screen size.\n   * @group Props\n   */\n  breakpoints;\n  /**\n   * Callback to invoke when a message is closed.\n   * @param {ToastCloseEvent} event - custom close event.\n   * @group Emits\n   */\n  onClose = new EventEmitter();\n  /**\n   * Custom template of message.\n   * @group Templates\n   */\n  template;\n  /**\n   * Custom headless template.\n   * @group Templates\n   */\n  headlessTemplate;\n  messageSubscription;\n  clearSubscription;\n  messages;\n  messagesArchieve;\n  _position = 'top-right';\n  messageService = inject(MessageService);\n  _componentStyle = inject(ToastStyle);\n  styleElement;\n  id = uuid('pn_id_');\n  templates;\n  constructor() {\n    super();\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n      if (messages) {\n        if (Array.isArray(messages)) {\n          const filteredMessages = messages.filter(m => this.canAdd(m));\n          this.add(filteredMessages);\n        } else if (this.canAdd(messages)) {\n          this.add([messages]);\n        }\n      }\n    });\n    this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n      if (key) {\n        if (this.key === key) {\n          this.messages = null;\n        }\n      } else {\n        this.messages = null;\n      }\n      this.cd.markForCheck();\n    });\n  }\n  _template;\n  _headlessTemplate;\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'message':\n          this._template = item.template;\n          break;\n        case 'headless':\n          this._headlessTemplate = item.template;\n          break;\n        default:\n          this._template = item.template;\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.breakpoints) {\n      this.createStyle();\n    }\n  }\n  add(messages) {\n    this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n    if (this.preventDuplicates) {\n      this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n    }\n    this.cd.markForCheck();\n  }\n  canAdd(message) {\n    let allow = this.key === message.key;\n    if (allow && this.preventOpenDuplicates) {\n      allow = !this.containsMessage(this.messages, message);\n    }\n    if (allow && this.preventDuplicates) {\n      allow = !this.containsMessage(this.messagesArchieve, message);\n    }\n    return allow;\n  }\n  containsMessage(collection, message) {\n    if (!collection) {\n      return false;\n    }\n    return collection.find(m => {\n      return m.summary === message.summary && m.detail == message.detail && m.severity === message.severity;\n    }) != null;\n  }\n  onMessageClose(event) {\n    this.messages?.splice(event.index, 1);\n    this.onClose.emit({\n      message: event.message\n    });\n    this.cd.detectChanges();\n  }\n  onAnimationStart(event) {\n    if (event.fromState === 'void') {\n      this.renderer.setAttribute(this.el?.nativeElement, this.id, '');\n      if (this.autoZIndex && this.el?.nativeElement.style.zIndex === '') {\n        ZIndexUtils.set('modal', this.el?.nativeElement, this.baseZIndex || this.config.zIndex.modal);\n      }\n    }\n  }\n  onAnimationEnd(event) {\n    if (event.toState === 'void') {\n      if (this.autoZIndex && isEmpty(this.messages)) {\n        ZIndexUtils.clear(this.el?.nativeElement);\n      }\n    }\n  }\n  createStyle() {\n    if (!this.styleElement) {\n      this.styleElement = this.renderer.createElement('style');\n      this.styleElement.type = 'text/css';\n      setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n      this.renderer.appendChild(this.document.head, this.styleElement);\n      let innerHTML = '';\n      for (let breakpoint in this.breakpoints) {\n        let breakpointStyle = '';\n        for (let styleProp in this.breakpoints[breakpoint]) {\n          breakpointStyle += styleProp + ':' + this.breakpoints[breakpoint][styleProp] + ' !important;';\n        }\n        innerHTML += `\n                    @media screen and (max-width: ${breakpoint}) {\n                        .p-toast[${this.id}] {\n                           ${breakpointStyle}\n                        }\n                    }\n                `;\n      }\n      this.renderer.setProperty(this.styleElement, 'innerHTML', innerHTML);\n      setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n    }\n  }\n  destroyStyle() {\n    if (this.styleElement) {\n      this.renderer.removeChild(this.document.head, this.styleElement);\n      this.styleElement = null;\n    }\n  }\n  ngOnDestroy() {\n    if (this.messageSubscription) {\n      this.messageSubscription.unsubscribe();\n    }\n    if (this.el && this.autoZIndex) {\n      ZIndexUtils.clear(this.el.nativeElement);\n    }\n    if (this.clearSubscription) {\n      this.clearSubscription.unsubscribe();\n    }\n    this.destroyStyle();\n    super.ngOnDestroy();\n  }\n  static ɵfac = function Toast_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Toast)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Toast,\n    selectors: [[\"p-toast\"]],\n    contentQueries: function Toast_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c4, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c5, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headlessTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function Toast_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.sx(\"root\"));\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      key: \"key\",\n      autoZIndex: [2, \"autoZIndex\", \"autoZIndex\", booleanAttribute],\n      baseZIndex: [2, \"baseZIndex\", \"baseZIndex\", numberAttribute],\n      life: [2, \"life\", \"life\", numberAttribute],\n      styleClass: \"styleClass\",\n      position: \"position\",\n      preventOpenDuplicates: [2, \"preventOpenDuplicates\", \"preventOpenDuplicates\", booleanAttribute],\n      preventDuplicates: [2, \"preventDuplicates\", \"preventDuplicates\", booleanAttribute],\n      showTransformOptions: \"showTransformOptions\",\n      hideTransformOptions: \"hideTransformOptions\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      breakpoints: \"breakpoints\"\n    },\n    outputs: {\n      onClose: \"onClose\"\n    },\n    features: [i0.ɵɵProvidersFeature([ToastStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"message\", \"index\", \"life\", \"template\", \"headlessTemplate\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\", 4, \"ngFor\", \"ngForOf\"], [3, \"onClose\", \"message\", \"index\", \"life\", \"template\", \"headlessTemplate\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\"]],\n    template: function Toast_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, Toast_p_toastItem_0_Template, 1, 10, \"p-toastItem\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, ToastItem, SharedModule],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: 'p-toast',\n      standalone: true,\n      imports: [CommonModule, ToastItem, SharedModule],\n      template: `\n        <p-toastItem\n            *ngFor=\"let msg of messages; let i = index\"\n            [message]=\"msg\"\n            [index]=\"i\"\n            [life]=\"life\"\n            (onClose)=\"onMessageClose($event)\"\n            [template]=\"template || _template\"\n            [headlessTemplate]=\"headlessTemplate || _headlessTemplate\"\n            @toastAnimation\n            (@toastAnimation.start)=\"onAnimationStart($event)\"\n            (@toastAnimation.done)=\"onAnimationEnd($event)\"\n            [showTransformOptions]=\"showTransformOptions\"\n            [hideTransformOptions]=\"hideTransformOptions\"\n            [showTransitionOptions]=\"showTransitionOptions\"\n            [hideTransitionOptions]=\"hideTransitionOptions\"\n        ></p-toastItem>\n    `,\n      animations: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [ToastStyle],\n      host: {\n        '[class]': \"cn(cx('root'), styleClass)\",\n        '[style]': \"sx('root')\"\n      }\n    }]\n  }], () => [], {\n    key: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    baseZIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    life: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    preventOpenDuplicates: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preventDuplicates: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    breakpoints: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }],\n    template: [{\n      type: ContentChild,\n      args: ['message']\n    }],\n    headlessTemplate: [{\n      type: ContentChild,\n      args: ['headless']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ToastModule {\n  static ɵfac = function ToastModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ToastModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToastModule,\n    imports: [Toast, SharedModule],\n    exports: [Toast, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Toast, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Toast, SharedModule],\n      exports: [Toast, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Toast, ToastClasses, ToastItem, ToastModule, ToastStyle };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, input, EventEmitter, signal, inject, computed, booleanAttribute, numberAttribute, ContentChildren, ContentChild, ViewChild, Output, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { contains, equals } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseEditableHolder } from 'primeng/baseeditableholder';\nimport { style } from '@primeuix/styles/checkbox';\nimport { BaseStyle } from 'primeng/base';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { MinusIcon } from 'primeng/icons/minus';\nconst _c0 = [\"icon\"];\nconst _c1 = [\"input\"];\nconst _c2 = (a0, a1) => ({\n  checked: a0,\n  class: a1\n});\nfunction Checkbox_ng_container_3_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cx(\"icon\"));\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.checkboxIcon);\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Checkbox_ng_container_3_ng_container_1__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.cx(\"icon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Checkbox_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Checkbox_ng_container_3_ng_container_1_span_1_Template, 1, 4, \"span\", 5)(2, Checkbox_ng_container_3_ng_container_1__svg_svg_2_Template, 1, 3, \"svg\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkboxIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.checkboxIcon);\n  }\n}\nfunction Checkbox_ng_container_3__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"svg\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r1.cx(\"icon\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Checkbox_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Checkbox_ng_container_3_ng_container_1_Template, 3, 2, \"ng-container\", 2)(2, Checkbox_ng_container_3__svg_svg_2_Template, 1, 3, \"svg\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checked);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._indeterminate());\n  }\n}\nfunction Checkbox_4_ng_template_0_Template(rf, ctx) {}\nfunction Checkbox_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Checkbox_4_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG */\n    p-checkBox.ng-invalid.ng-dirty .p-checkbox-box,\n    p-check-box.ng-invalid.ng-dirty .p-checkbox-box,\n    p-checkbox.ng-invalid.ng-dirty .p-checkbox-box {\n        border-color: dt('checkbox.invalid.border.color');\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-checkbox p-component', {\n    'p-checkbox-checked p-highlight': instance.checked,\n    'p-disabled': instance.$disabled(),\n    'p-invalid': instance.invalid(),\n    'p-variant-filled': instance.$variant() === 'filled',\n    'p-checkbox-sm p-inputfield-sm': instance.size() === 'small',\n    'p-checkbox-lg p-inputfield-lg': instance.size() === 'large'\n  }],\n  box: 'p-checkbox-box',\n  input: 'p-checkbox-input',\n  icon: 'p-checkbox-icon'\n};\nclass CheckboxStyle extends BaseStyle {\n  name = 'checkbox';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵCheckboxStyle_BaseFactory;\n    return function CheckboxStyle_Factory(__ngFactoryType__) {\n      return (ɵCheckboxStyle_BaseFactory || (ɵCheckboxStyle_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxStyle)))(__ngFactoryType__ || CheckboxStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: CheckboxStyle,\n    factory: CheckboxStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Checkbox is an extension to standard checkbox element with theming.\n *\n * [Live Demo](https://www.primeng.org/checkbox/)\n *\n * @module checkboxstyle\n *\n */\nvar CheckboxClasses;\n(function (CheckboxClasses) {\n  /**\n   * Class name of the root element\n   */\n  CheckboxClasses[\"root\"] = \"p-checkbox\";\n  /**\n   * Class name of the box element\n   */\n  CheckboxClasses[\"box\"] = \"p-checkbox-box\";\n  /**\n   * Class name of the input element\n   */\n  CheckboxClasses[\"input\"] = \"p-checkbox-input\";\n  /**\n   * Class name of the icon element\n   */\n  CheckboxClasses[\"icon\"] = \"p-checkbox-icon\";\n})(CheckboxClasses || (CheckboxClasses = {}));\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n/**\n * Checkbox is an extension to standard checkbox element with theming.\n * @group Components\n */\nclass Checkbox extends BaseEditableHolder {\n  /**\n   * Value of the checkbox.\n   * @group Props\n   */\n  value;\n  /**\n   * Allows to select a boolean value instead of multiple values.\n   * @group Props\n   */\n  binary;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Used to define a string that labels the input element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex;\n  /**\n   * Identifier of the focus input to match a label defined for the component.\n   * @group Props\n   */\n  inputId;\n  /**\n   * Inline style of the input element.\n   * @group Props\n   */\n  inputStyle;\n  /**\n   * Style class of the component.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the input element.\n   * @group Props\n   */\n  inputClass;\n  /**\n   * When present, it specifies input state as indeterminate.\n   * @group Props\n   */\n  indeterminate = false;\n  /**\n   * Form control value.\n   * @group Props\n   */\n  formControl;\n  /**\n   * Icon class of the checkbox icon.\n   * @group Props\n   */\n  checkboxIcon;\n  /**\n   * When present, it specifies that the component cannot be edited.\n   * @group Props\n   */\n  readonly;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Value in checked state.\n   * @group Props\n   */\n  trueValue = true;\n  /**\n   * Value in unchecked state.\n   * @group Props\n   */\n  falseValue = false;\n  /**\n   * Specifies the input variant of the component.\n   * @defaultValue undefined\n   * @group Props\n   */\n  variant = input(...(ngDevMode ? [undefined, {\n    debugName: \"variant\"\n  }] : []));\n  /**\n   * Specifies the size of the component.\n   * @defaultValue undefined\n   * @group Props\n   */\n  size = input(...(ngDevMode ? [undefined, {\n    debugName: \"size\"\n  }] : []));\n  /**\n   * Callback to invoke on value change.\n   * @param {CheckboxChangeEvent} event - Custom value change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Callback to invoke when the receives focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onFocus = new EventEmitter();\n  /**\n   * Callback to invoke when the loses focus.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onBlur = new EventEmitter();\n  inputViewChild;\n  get checked() {\n    return this._indeterminate() ? false : this.binary ? this.modelValue() === this.trueValue : contains(this.value, this.modelValue());\n  }\n  _indeterminate = signal(undefined, ...(ngDevMode ? [{\n    debugName: \"_indeterminate\"\n  }] : []));\n  /**\n   * The template of the checkbox icon.\n   * @group Templates\n   */\n  checkboxIconTemplate;\n  templates;\n  _checkboxIconTemplate;\n  focused = false;\n  _componentStyle = inject(CheckboxStyle);\n  $variant = computed(() => this.variant() || this.config.inputStyle() || this.config.inputVariant(), ...(ngDevMode ? [{\n    debugName: \"$variant\"\n  }] : []));\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'icon':\n          this._checkboxIconTemplate = item.template;\n          break;\n        case 'checkboxicon':\n          this._checkboxIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    if (changes.indeterminate) {\n      this._indeterminate.set(changes.indeterminate.currentValue);\n    }\n  }\n  updateModel(event) {\n    let newModelValue;\n    /*\n     * When `formControlName` or `formControl` is used - `writeValue` is not called after control changes.\n     * Otherwise it is causing multiple references to the actual value: there is one array reference inside the component and another one in the control value.\n     * `selfControl` is the source of truth of references, it is made to avoid reference loss.\n     * */\n    const selfControl = this.injector.get(NgControl, null, {\n      optional: true,\n      self: true\n    });\n    const currentModelValue = selfControl && !this.formControl ? selfControl.value : this.modelValue();\n    if (!this.binary) {\n      if (this.checked || this._indeterminate()) newModelValue = currentModelValue.filter(val => !equals(val, this.value));else newModelValue = currentModelValue ? [...currentModelValue, this.value] : [this.value];\n      this.onModelChange(newModelValue);\n      this.writeModelValue(newModelValue);\n      if (this.formControl) {\n        this.formControl.setValue(newModelValue);\n      }\n    } else {\n      newModelValue = this._indeterminate() ? this.trueValue : this.checked ? this.falseValue : this.trueValue;\n      this.writeModelValue(newModelValue);\n      this.onModelChange(newModelValue);\n    }\n    if (this._indeterminate()) {\n      this._indeterminate.set(false);\n    }\n    this.onChange.emit({\n      checked: newModelValue,\n      originalEvent: event\n    });\n  }\n  handleChange(event) {\n    if (!this.readonly) {\n      this.updateModel(event);\n    }\n  }\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    this.onBlur.emit(event);\n    this.onModelTouched();\n  }\n  focus() {\n    this.inputViewChild.nativeElement.focus();\n  }\n  /**\n   * @override\n   *\n   * @see {@link BaseEditableHolder.writeControlValue}\n   * Writes the value to the control.\n   */\n  writeControlValue(value, setModelValue) {\n    setModelValue(value);\n    this.cd.markForCheck();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵCheckbox_BaseFactory;\n    return function Checkbox_Factory(__ngFactoryType__) {\n      return (ɵCheckbox_BaseFactory || (ɵCheckbox_BaseFactory = i0.ɵɵgetInheritedFactory(Checkbox)))(__ngFactoryType__ || Checkbox);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Checkbox,\n    selectors: [[\"p-checkbox\"], [\"p-checkBox\"], [\"p-check-box\"]],\n    contentQueries: function Checkbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkboxIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Checkbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n      }\n    },\n    hostVars: 5,\n    hostBindings: function Checkbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-p-highlight\", ctx.checked)(\"data-p-checked\", ctx.checked)(\"data-p-disabled\", ctx.$disabled());\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      value: \"value\",\n      binary: [2, \"binary\", \"binary\", booleanAttribute],\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      inputId: \"inputId\",\n      inputStyle: \"inputStyle\",\n      styleClass: \"styleClass\",\n      inputClass: \"inputClass\",\n      indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute],\n      formControl: \"formControl\",\n      checkboxIcon: \"checkboxIcon\",\n      readonly: [2, \"readonly\", \"readonly\", booleanAttribute],\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n      trueValue: \"trueValue\",\n      falseValue: \"falseValue\",\n      variant: [1, \"variant\"],\n      size: [1, \"size\"]\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\"\n    },\n    features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR, CheckboxStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 22,\n    consts: [[\"input\", \"\"], [\"type\", \"checkbox\", 3, \"focus\", \"blur\", \"change\", \"checked\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"data-p-icon\", \"minus\", 3, \"class\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [\"data-p-icon\", \"check\", 3, \"class\", 4, \"ngIf\"], [3, \"ngClass\"], [\"data-p-icon\", \"check\"], [\"data-p-icon\", \"minus\"]],\n    template: function Checkbox_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"input\", 1, 0);\n        i0.ɵɵlistener(\"focus\", function Checkbox_Template_input_focus_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onInputFocus($event));\n        })(\"blur\", function Checkbox_Template_input_blur_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onInputBlur($event));\n        })(\"change\", function Checkbox_Template_input_change_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.handleChange($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtemplate(3, Checkbox_ng_container_3_Template, 3, 2, \"ng-container\", 2)(4, Checkbox_4_Template, 1, 0, null, 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.inputStyle);\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"input\"), ctx.inputClass));\n        i0.ɵɵproperty(\"checked\", ctx.checked);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"value\", ctx.value)(\"name\", ctx.name())(\"tabindex\", ctx.tabindex)(\"required\", ctx.required() ? \"\" : undefined)(\"readonly\", ctx.readonly ? \"\" : undefined)(\"disabled\", ctx.$disabled() ? \"\" : undefined)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.cx(\"box\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.checkboxIconTemplate && !ctx._checkboxIconTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.checkboxIconTemplate || ctx._checkboxIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(19, _c2, ctx.checked, ctx.cx(\"icon\")));\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, SharedModule, CheckIcon, MinusIcon],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Checkbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-checkbox, p-checkBox, p-check-box',\n      standalone: true,\n      imports: [CommonModule, SharedModule, CheckIcon, MinusIcon],\n      template: `\n        <input\n            #input\n            [attr.id]=\"inputId\"\n            type=\"checkbox\"\n            [attr.value]=\"value\"\n            [attr.name]=\"name()\"\n            [checked]=\"checked\"\n            [attr.tabindex]=\"tabindex\"\n            [attr.required]=\"required() ? '' : undefined\"\n            [attr.readonly]=\"readonly ? '' : undefined\"\n            [attr.disabled]=\"$disabled() ? '' : undefined\"\n            [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.aria-label]=\"ariaLabel\"\n            [style]=\"inputStyle\"\n            [class]=\"cn(cx('input'), inputClass)\"\n            (focus)=\"onInputFocus($event)\"\n            (blur)=\"onInputBlur($event)\"\n            (change)=\"handleChange($event)\"\n        />\n        <div [class]=\"cx('box')\">\n            <ng-container *ngIf=\"!checkboxIconTemplate && !_checkboxIconTemplate\">\n                <ng-container *ngIf=\"checked\">\n                    <span *ngIf=\"checkboxIcon\" [class]=\"cx('icon')\" [ngClass]=\"checkboxIcon\" [attr.data-pc-section]=\"'icon'\"></span>\n                    <svg data-p-icon=\"check\" *ngIf=\"!checkboxIcon\" [class]=\"cx('icon')\" [attr.data-pc-section]=\"'icon'\" />\n                </ng-container>\n                <svg data-p-icon=\"minus\" *ngIf=\"_indeterminate()\" [class]=\"cx('icon')\" [attr.data-pc-section]=\"'icon'\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"checkboxIconTemplate || _checkboxIconTemplate; context: { checked: checked, class: cx('icon') }\"></ng-template>\n        </div>\n    `,\n      providers: [CHECKBOX_VALUE_ACCESSOR, CheckboxStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': \"cn(cx('root'), styleClass)\",\n        '[attr.data-p-highlight]': 'checked',\n        '[attr.data-p-checked]': 'checked',\n        '[attr.data-p-disabled]': '$disabled()'\n      }\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    binary: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    formControl: [{\n      type: Input\n    }],\n    checkboxIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    trueValue: [{\n      type: Input\n    }],\n    falseValue: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    inputViewChild: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    checkboxIconTemplate: [{\n      type: ContentChild,\n      args: ['icon', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass CheckboxModule {\n  static ɵfac = function CheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CheckboxModule,\n    imports: [Checkbox, SharedModule],\n    exports: [Checkbox, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Checkbox, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Checkbox, SharedModule],\n      exports: [Checkbox, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxClasses, CheckboxModule, CheckboxStyle };\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, input, booleanAttribute, computed, HostListener, Input, Directive, NgModule } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseModelHolder } from 'primeng/basemodelholder';\nimport { Fluid } from 'primeng/fluid';\nimport { style } from '@primeuix/styles/inputtext';\nimport { BaseStyle } from 'primeng/base';\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG */\n   .p-inputtext.ng-invalid.ng-dirty {\n        border-color: dt('inputtext.invalid.border.color');\n    }\n\n    .p-inputtext.ng-invalid.ng-dirty::placeholder {\n        color: dt('inputtext.invalid.placeholder.color');\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-inputtext p-component', {\n    'p-filled': instance.$filled(),\n    'p-inputtext-sm': instance.pSize === 'small',\n    'p-inputtext-lg': instance.pSize === 'large',\n    'p-invalid': instance.invalid(),\n    'p-variant-filled': instance.$variant() === 'filled',\n    'p-inputtext-fluid': instance.hasFluid\n  }]\n};\nclass InputTextStyle extends BaseStyle {\n  name = 'inputtext';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵInputTextStyle_BaseFactory;\n    return function InputTextStyle_Factory(__ngFactoryType__) {\n      return (ɵInputTextStyle_BaseFactory || (ɵInputTextStyle_BaseFactory = i0.ɵɵgetInheritedFactory(InputTextStyle)))(__ngFactoryType__ || InputTextStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: InputTextStyle,\n    factory: InputTextStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * InputText renders a text field to enter data.\n *\n * [Live Demo](https://www.primeng.org/inputtext/)\n *\n * @module inputtextstyle\n *\n */\nvar InputTextClasses;\n(function (InputTextClasses) {\n  /**\n   * The class of root element\n   */\n  InputTextClasses[\"root\"] = \"p-inputtext\";\n})(InputTextClasses || (InputTextClasses = {}));\n\n/**\n * InputText directive is an extension to standard input element with theming.\n * @group Components\n */\nclass InputText extends BaseModelHolder {\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  pcFluid = inject(Fluid, {\n    optional: true,\n    host: true,\n    skipSelf: true\n  });\n  /**\n   * Defines the size of the component.\n   * @group Props\n   */\n  pSize;\n  /**\n   * Specifies the input variant of the component.\n   * @defaultValue undefined\n   * @group Props\n   */\n  variant = input(...(ngDevMode ? [undefined, {\n    debugName: \"variant\"\n  }] : []));\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue undefined\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * When present, it specifies that the component should have invalid state style.\n   * @defaultValue false\n   * @group Props\n   */\n  invalid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"invalid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  $variant = computed(() => this.variant() || this.config.inputStyle() || this.config.inputVariant(), ...(ngDevMode ? [{\n    debugName: \"$variant\"\n  }] : []));\n  _componentStyle = inject(InputTextStyle);\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.writeModelValue(this.ngControl?.value ?? this.el.nativeElement.value);\n    this.cd.detectChanges();\n  }\n  ngDoCheck() {\n    this.writeModelValue(this.ngControl?.value ?? this.el.nativeElement.value);\n  }\n  onInput() {\n    this.writeModelValue(this.ngControl?.value ?? this.el.nativeElement.value);\n  }\n  get hasFluid() {\n    return this.fluid() ?? !!this.pcFluid;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵInputText_BaseFactory;\n    return function InputText_Factory(__ngFactoryType__) {\n      return (ɵInputText_BaseFactory || (ɵInputText_BaseFactory = i0.ɵɵgetInheritedFactory(InputText)))(__ngFactoryType__ || InputText);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InputText,\n    selectors: [[\"\", \"pInputText\", \"\"]],\n    hostVars: 2,\n    hostBindings: function InputText_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function InputText_input_HostBindingHandler($event) {\n          return ctx.onInput($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"root\"));\n      }\n    },\n    inputs: {\n      pSize: \"pSize\",\n      variant: [1, \"variant\"],\n      fluid: [1, \"fluid\"],\n      invalid: [1, \"invalid\"]\n    },\n    features: [i0.ɵɵProvidersFeature([InputTextStyle]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputText, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputText]',\n      standalone: true,\n      host: {\n        '[class]': \"cx('root')\"\n      },\n      providers: [InputTextStyle]\n    }]\n  }], null, {\n    pSize: [{\n      type: Input,\n      args: ['pSize']\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\nclass InputTextModule {\n  static ɵfac = function InputTextModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || InputTextModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: InputTextModule,\n    imports: [InputText],\n    exports: [InputText]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextModule, [{\n    type: NgModule,\n    args: [{\n      imports: [InputText],\n      exports: [InputText]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputText, InputTextClasses, InputTextModule, InputTextStyle };\n","import * as i0 from '@angular/core';\nimport { inject, input, booleanAttribute, computed, Directive } from '@angular/core';\nimport { BaseEditableHolder } from 'primeng/baseeditableholder';\nimport { Fluid } from 'primeng/fluid';\nclass BaseInput extends BaseEditableHolder {\n  pcFluid = inject(Fluid, {\n    optional: true,\n    host: true,\n    skipSelf: true\n  });\n  /**\n   * Spans 100% width of the container when enabled.\n   * @defaultValue false\n   * @group Props\n   */\n  fluid = input(undefined, ...(ngDevMode ? [{\n    debugName: \"fluid\",\n    transform: booleanAttribute\n  }] : [{\n    transform: booleanAttribute\n  }]));\n  /**\n   * Specifies the input variant of the component.\n   * @defaultValue 'outlined'\n   * @group Props\n   */\n  variant = input(...(ngDevMode ? [undefined, {\n    debugName: \"variant\"\n  }] : []));\n  /**\n   * Specifies the size of the component.\n   * @defaultValue undefined\n   * @group Props\n   */\n  size = input(...(ngDevMode ? [undefined, {\n    debugName: \"size\"\n  }] : []));\n  /**\n   * Specifies the visible width of the input element in characters.\n   * @defaultValue undefined\n   * @group Props\n   */\n  inputSize = input(...(ngDevMode ? [undefined, {\n    debugName: \"inputSize\"\n  }] : []));\n  /**\n   * Specifies the value must match the pattern.\n   * @defaultValue undefined\n   * @group Props\n   */\n  pattern = input(...(ngDevMode ? [undefined, {\n    debugName: \"pattern\"\n  }] : []));\n  /**\n   * The value must be greater than or equal to the value.\n   * @defaultValue undefined\n   * @group Props\n   */\n  min = input(...(ngDevMode ? [undefined, {\n    debugName: \"min\"\n  }] : []));\n  /**\n   * The value must be less than or equal to the value.\n   * @defaultValue undefined\n   * @group Props\n   */\n  max = input(...(ngDevMode ? [undefined, {\n    debugName: \"max\"\n  }] : []));\n  /**\n   * Unless the step is set to the any literal, the value must be min + an integral multiple of the step.\n   * @defaultValue undefined\n   * @group Props\n   */\n  step = input(...(ngDevMode ? [undefined, {\n    debugName: \"step\"\n  }] : []));\n  /**\n   * The number of characters (code points) must not be less than the value of the attribute, if non-empty.\n   * @defaultValue undefined\n   * @group Props\n   */\n  minlength = input(...(ngDevMode ? [undefined, {\n    debugName: \"minlength\"\n  }] : []));\n  /**\n   * The number of characters (code points) must not exceed the value of the attribute.\n   * @defaultValue undefined\n   * @group Props\n   */\n  maxlength = input(...(ngDevMode ? [undefined, {\n    debugName: \"maxlength\"\n  }] : []));\n  $variant = computed(() => this.variant() || this.config.inputStyle() || this.config.inputVariant(), ...(ngDevMode ? [{\n    debugName: \"$variant\"\n  }] : []));\n  get hasFluid() {\n    return this.fluid() ?? !!this.pcFluid;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵBaseInput_BaseFactory;\n    return function BaseInput_Factory(__ngFactoryType__) {\n      return (ɵBaseInput_BaseFactory || (ɵBaseInput_BaseFactory = i0.ɵɵgetInheritedFactory(BaseInput)))(__ngFactoryType__ || BaseInput);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseInput,\n    inputs: {\n      fluid: [1, \"fluid\"],\n      variant: [1, \"variant\"],\n      size: [1, \"size\"],\n      inputSize: [1, \"inputSize\"],\n      pattern: [1, \"pattern\"],\n      min: [1, \"min\"],\n      max: [1, \"max\"],\n      step: [1, \"step\"],\n      minlength: [1, \"minlength\"],\n      maxlength: [1, \"maxlength\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseInput, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseInput };\n"],"mappings":"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","names":["window","state","query","v","isAbsoluteUrl","state","NumberFormatStyle","Plural","FormStyle","TranslationWidth","FormatWidth","WeekDay","getLocalePluralCase","i","h","m","value","from","y","d","s","p","j","k","carry","digits","getLocalePluralCase","state","klass","v","input","a","b","document","window","origin","input","a","b","base","value","map","v","s","t","headers","params","HttpEventType","HttpStatusCode","req","signal","document","_","HttpFeatureKind","f","httpResource","request","t","i","s","c","t","t","i","l","d","s","a","c","f","g","N","t","s","l","d","i","a","c","f","g","t","t","t","t","t","t","t","t","t","i","l","d","s","a","c","f","t","i","l","s","a","c","t","i","K","t","R","t","f","h","A","S","I","O","y","s","k","B","$","w","C","t","s","p","f","b","t","T","s","j","z","t","U","w","G","Y","Q","t","p","t","s","ConfirmEventType","filter","Y","i","k","rt","st","nt","F","t","g","$","v","s","N","k","oe","p","t","dt","Q","t","p","Y","s","i","a","z","k","l","c","m","d","t","p","C","l","c","m","d","h","f","s","i","a","a","t","S","ue","s","i","E","l","z","k","Y","w","U","g","$","c","m","d","h","f","p","Q","y","R","T","C","b","j","O","M","V","K","A","v","x","G","B","I","H","W","q","fe","et","oe","N","w","css","style","E","G","S","k","v","css","N","S","style","theme","_","c","v","_","x","acc","noop","v","group","FormControl","i","c","v","input","c","VERSION","s","dt","N","S","style","css","style","RippleClasses","d","x","y","ink","i","s","_c0","theme","style","classes","ToggleButtonClasses","_c0","_c1","theme","style","classes","SelectButtonClasses","k","i","theme","style","classes","s","BadgeClasses","i","from","input","a","b","css","_c0","classes","style","FluidClasses","i","origin","p","f","s","style","d","g","w","h","v","c","_c0","css","BaseIconClasses","_c0","_c0","s","_c0","s","_c0","_c0","s","_c0","_c0","s","_c0","_c1","_c2","classes","style","ButtonClasses","k","v","animation","_id","p","_c0","_c1","_c2","_c3","_c4","classes","style","ToastClasses","s","m","_c0","_c1","_c2","theme","style","classes","CheckboxClasses","CHECKBOX_VALUE_ACCESSOR","B","k","theme","style","classes","InputTextClasses"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}