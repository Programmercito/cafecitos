{"version":3,"sources":["node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/users/services/users-api.ts","src/app/libs/components/Common.ts","src/app/layout/component/app.topbar.ts","src/app/layout/component/app.menuitem.ts","src/app/layout/component/app.menu.ts","src/app/layout/component/app.sidebar.ts","src/app/layout/component/app.footer.ts","src/app/layout/component/app.layout.ts","src/app/pages/dashboard/dashboard.ts","src/app/pages/notfound/notfound.ts","src/app/products/services/products-api.ts","src/app/products/component/products.ts","src/app/products/component/products.html","src/app/users/component/users.ts","src/app/users/component/users.html","src/app/change-password/component/change-password.ts","src/app/change-password/component/change-password.html","src/app/orders/services/order-waiter-api.ts","src/app/orders/component/waiters/waiters.ts","src/app/orders/component/waiters/waiters.html","src/app/orders/services/order-details-api.ts","src/app/orders/component/details/details.ts","src/app/orders/component/details/details.html","src/app/orders/component/commisions/commisions.ts","src/app/orders/component/commisions/commisions.html","src/app/orders/services/orders-api.ts","src/app/orders/component/orders.ts","src/app/orders/component/orders.html","src/app.routes.ts","src/app/libs/apis/csrf-cookie-api.ts","src/app/libs/interceptors/HeadersRequest.ts","src/app.config.ts","src/app.component.ts","src/main.ts"],"sourcesContent":["/**\n * @license Angular v20.1.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injector, ɵRuntimeError as _RuntimeError, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, Injectable, InjectionToken, ɵperformanceMarkFeature as _performanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { DomRendererFactory2 } from '../dom_renderer.mjs';\nconst ANIMATION_PREFIX = '@';\nclass AsyncAnimationRendererFactory {\n  doc;\n  delegate;\n  zone;\n  animationType;\n  moduleImpl;\n  _rendererFactoryPromise = null;\n  scheduler = null;\n  injector = inject(Injector);\n  loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n    optional: true\n  });\n  _engine;\n  /**\n   *\n   * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n   */\n  constructor(doc, delegate, zone, animationType, moduleImpl) {\n    this.doc = doc;\n    this.delegate = delegate;\n    this.zone = zone;\n    this.animationType = animationType;\n    this.moduleImpl = moduleImpl;\n  }\n  /** @docs-private */\n  ngOnDestroy() {\n    // When the root view is removed, the renderer defers the actual work to the\n    // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n    // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n    // removed until `TransitionAnimationEngine` \"flushes\".\n    // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n    // engine is not provided when async animations are used.\n    this._engine?.flush();\n  }\n  /**\n   * @internal\n   */\n  loadImpl() {\n    // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n    // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n    // the set of imported symbols.\n    const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n    let moduleImplPromise;\n    if (this.loadingSchedulerFn) {\n      moduleImplPromise = this.loadingSchedulerFn(loadFn);\n    } else {\n      moduleImplPromise = loadFn();\n    }\n    return moduleImplPromise.catch(e => {\n      throw new _RuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n    }).then(({\n      ɵcreateEngine,\n      ɵAnimationRendererFactory\n    }) => {\n      // We can't create the renderer yet because we might need the hostElement and the type\n      // Both are provided in createRenderer().\n      this._engine = ɵcreateEngine(this.animationType, this.doc);\n      const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n      this.delegate = rendererFactory;\n      return rendererFactory;\n    });\n  }\n  /**\n   * This method is delegating the renderer creation to the factories.\n   * It uses default factory while the animation factory isn't loaded\n   * and will rely on the animation factory once it is loaded.\n   *\n   * Calling this method will trigger as side effect the loading of the animation module\n   * if the renderered component uses animations.\n   */\n  createRenderer(hostElement, rendererType) {\n    const renderer = this.delegate.createRenderer(hostElement, rendererType);\n    if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n      // The factory is already loaded, this is an animation renderer\n      return renderer;\n    }\n    // We need to prevent the DomRenderer to throw an error because of synthetic properties\n    if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n      renderer.throwOnSyntheticProps = false;\n    }\n    // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n    const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n    // Kick off the module loading if the component uses animations but the module hasn't been\n    // loaded yet.\n    if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n      this._rendererFactoryPromise = this.loadImpl();\n    }\n    this._rendererFactoryPromise?.then(animationRendererFactory => {\n      const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n      dynamicRenderer.use(animationRenderer);\n      this.scheduler ??= this.injector.get(_ChangeDetectionScheduler, null, {\n        optional: true\n      });\n      this.scheduler?.notify(10 /* NotificationSource.AsyncAnimationsLoaded */);\n    }).catch(e => {\n      // Permanently use regular renderer when loading fails.\n      dynamicRenderer.use(renderer);\n    });\n    return dynamicRenderer;\n  }\n  begin() {\n    this.delegate.begin?.();\n  }\n  end() {\n    this.delegate.end?.();\n  }\n  whenRenderingDone() {\n    return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n  }\n  /**\n   * Used during HMR to clear any cached data about a component.\n   * @param componentId ID of the component that is being replaced.\n   */\n  componentReplaced(componentId) {\n    // Flush the engine since the renderer destruction waits for animations to be done.\n    this._engine?.flush();\n    this.delegate.componentReplaced?.(componentId);\n  }\n  static ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n    i0.ɵɵinvalidFactory();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AsyncAnimationRendererFactory,\n    factory: AsyncAnimationRendererFactory.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsyncAnimationRendererFactory, [{\n    type: Injectable\n  }], () => [{\n    type: Document\n  }, {\n    type: i0.RendererFactory2\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined\n  }, {\n    type: Promise\n  }], null);\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  delegate;\n  // List of callbacks that need to be replayed on the animation renderer once its loaded\n  replay = [];\n  ɵtype = 1 /* AnimationRendererType.Delegated */;\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback, options) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback, options));\n    }\n    return this.delegate.listen(target, eventName, callback, options);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  _performanceMarkFeature('NgAsyncAnimations');\n  // Animations don't work on the server so we switch them over to no-op automatically.\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    type = 'noop';\n  }\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, DomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { UserModel } from '../../libs/models/user.model';\r\nimport { PaginatedResponse } from '../../libs/models/paginated-response.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersApiService { // Renamed from UsersApi to UsersApiService for consistency\r\n\r\n  private apiUrl = '/api/users'; // Base URL for users API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(\r\n    active?: boolean,\r\n    name?: string, // Assuming 'name' can be used for filtering username/first_name/last_name\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<PaginatedResponse<UserModel>> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('perPage', perPage.toString());\r\n\r\n    if (active !== undefined) {\r\n      params = params.set('active', active ? \"1\" : \"0\");\r\n    }\r\n\r\n    if (name) {\r\n      params = params.set('username', name);\r\n    }\r\n\r\n    return this.http.get<PaginatedResponse<UserModel>>(this.apiUrl, { params });\r\n  }\r\n\r\n  getUser(id: number): Observable<UserModel> {\r\n    return this.http.get<UserModel>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createUser(user: Omit<UserModel, 'id' | 'is_active'>): Observable<UserModel> {\r\n    return this.http.post<UserModel>(this.apiUrl, user);\r\n  }\r\n\r\n  updateUser(id: number, user: UserModel): Observable<UserModel> {\r\n    const { id: userId, ...userData } = user; // Exclude id from body\r\n    return this.http.put<UserModel>(`${this.apiUrl}/${id}`, userData);\r\n  }\r\n\r\n  changeStatus(id: number, is_active: boolean): Observable<void> {\r\n    return this.http.patch<void>(`${this.apiUrl}/${id}/status`, { is_active });\r\n  }\r\n\r\n  getUsersType(): Observable<{ name: string, value: string }[]> {\r\n    return this.http.get<{ name: string, value: string }[]>(`${this.apiUrl}/types`);\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return this.http.delete<void>('/api/auth/logout');\r\n  }\r\n\r\n  changePassword(current_password: string, new_password: string): Observable<void> {\r\n    return this.http.post<void>('/api/auth/change-password', { current_password, new_password, new_password_confirmation: new_password });\r\n  }\r\n\r\n  getWaiters(username: string) {\r\n    return this.http.get<UserModel[]>(`/api/users/waiters?username=${username}`);\r\n  }\r\n}","import { Users } from \"../models/Users\";\r\n\r\nexport class Common {\r\n    public getCurrentUser(): Users {\r\n        let user: Users = JSON.parse(sessionStorage.getItem(\"user\") || '{}');\r\n        return user;\r\n    }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MenuItem, ConfirmationService, MessageService } from 'primeng/api';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StyleClassModule } from 'primeng/styleclass';\r\nimport { AppConfigurator } from './app.configurator';\r\nimport { LayoutService } from '../service/layout.service';\r\nimport { Logo } from \"@/libs/components/logo/logo\";\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { UsersApiService } from 'src/app/users/services/users-api';\r\nimport { Menu } from 'primeng/menu';\r\nimport { Tooltip } from \"primeng/tooltip\";\r\nimport { Common } from '@/libs/components/Common';\r\n\r\n@Component({\r\n    selector: 'app-topbar',\r\n    standalone: true,\r\n    imports: [RouterModule, CommonModule, StyleClassModule, AppConfigurator, Logo, MenuModule, ConfirmDialogModule, ToastModule, Tooltip],\r\n    providers: [MessageService, ConfirmationService, UsersApiService],\r\n    template: ` <div class=\"layout-topbar\">\r\n        <div class=\"layout-topbar-logo-container\">\r\n            <button class=\"layout-menu-button layout-topbar-action\" (click)=\"layoutService.onMenuToggle()\" [pTooltip]=\"this.getCurrentUser().username+' '+this.getCurrentUser().type\">\r\n                <i class=\"pi pi-bars\"></i>\r\n            </button>\r\n            <a class=\"layout-topbar-logo\" routerLink=\"/\">\r\n                <app-logo></app-logo>\r\n                <span>CAFECITO</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"layout-topbar-actions\">\r\n            <div class=\"layout-config-menu\">\r\n\r\n                <button type=\"button\" class=\"layout-topbar-action\" (click)=\"toggleDarkMode()\">\r\n                    <i [ngClass]=\"{ 'pi ': true, 'pi-moon': layoutService.isDarkTheme(), 'pi-sun': !layoutService.isDarkTheme() }\"></i>\r\n                </button>\r\n                <div class=\"relative\">\r\n                    <button\r\n                        class=\"layout-topbar-action layout-topbar-action-highlight\"\r\n                        pStyleClass=\"@next\"\r\n                        enterFromClass=\"hidden\"\r\n                        enterActiveClass=\"animate-scalein\"\r\n                        leaveToClass=\"hidden\"\r\n                        leaveActiveClass=\"animate-fadeout\"\r\n                        [hideOnOutsideClick]=\"true\"\r\n                    >\r\n                        <i class=\"pi pi-palette\"></i>\r\n                    </button>\r\n                    <app-configurator />\r\n                </div>\r\n            </div>\r\n\r\n                <div class=\"layout-topbar-menu-content\">\r\n                    <button type=\"button\" class=\"layout-topbar-action\" (click)=\"toggleMenu($event)\" >\r\n                        <i class=\"pi pi-user\"></i>\r\n                        <span>Usuario</span>\r\n                    </button>\r\n                    <p-menu #menu [model]=\"menuItems\" [popup]=\"true\"></p-menu>\r\n                </div>\r\n        </div>\r\n        <p-toast></p-toast>\r\n        <p-confirmDialog></p-confirmDialog>\r\n    </div>`\r\n})\r\nexport class AppTopbar extends Common implements OnInit {\r\n    items!: MenuItem[];\r\n    menuItems: MenuItem[] = [];\r\n\r\n    @ViewChild('menu') menu: Menu | undefined;\r\n\r\n    constructor(public layoutService: LayoutService,\r\n        private usersService: UsersApiService,\r\n        private messageService: MessageService,\r\n        private confirmationService: ConfirmationService,\r\n        private router: Router) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.menuItems = [\r\n            { label: 'Change Password', icon: 'pi pi-fw pi-key', routerLink: '/change-password' },\r\n            { label: 'Logout', icon: 'pi pi-fw pi-sign-out', command: () => this.logout() }\r\n        ];\r\n    }\r\n\r\n    toggleDarkMode() {\r\n        this.layoutService.layoutConfig.update((state) => ({ ...state, darkTheme: !state.darkTheme }));\r\n    }\r\n\r\n    toggleMenu(event: Event) {\r\n        this.menu?.toggle(event);\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure you want to log out?',\r\n            header: 'Confirm Logout',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n                this.usersService.logout().subscribe({\r\n                    next: () => {\r\n                        this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Logged out successfully' });\r\n                        this.router.navigate(['/auth/login']);\r\n                    },\r\n                    error: (err) => {\r\n                        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Logout failed' });\r\n                        this.router.navigate(['/auth/login']);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n}","import { Component, HostBinding, Input } from '@angular/core';\r\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { LayoutService } from '../service/layout.service';\r\n\r\n@Component({\r\n    // eslint-disable-next-line @angular-eslint/component-selector\r\n    selector: '[app-menuitem]',\r\n    imports: [CommonModule, RouterModule, RippleModule],\r\n    template: `\r\n        <ng-container>\r\n            <div *ngIf=\"root && item.visible !== false\" class=\"layout-menuitem-root-text\">{{ item.label }}</div>\r\n            <a *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\" [attr.href]=\"item.url\" (click)=\"itemClick($event)\" [ngClass]=\"item.styleClass\" [attr.target]=\"item.target\" tabindex=\"0\" pRipple>\r\n                <i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n                <span class=\"layout-menuitem-text\">{{ item.label }}</span>\r\n                <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\r\n            </a>\r\n            <a\r\n                *ngIf=\"item.routerLink && !item.items && item.visible !== false\"\r\n                (click)=\"itemClick($event)\"\r\n                [ngClass]=\"item.styleClass\"\r\n                [routerLink]=\"item.routerLink\"\r\n                routerLinkActive=\"active-route\"\r\n                [routerLinkActiveOptions]=\"item.routerLinkActiveOptions || { paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' }\"\r\n                [fragment]=\"item.fragment\"\r\n                [queryParamsHandling]=\"item.queryParamsHandling\"\r\n                [preserveFragment]=\"item.preserveFragment\"\r\n                [skipLocationChange]=\"item.skipLocationChange\"\r\n                [replaceUrl]=\"item.replaceUrl\"\r\n                [state]=\"item.state\"\r\n                [queryParams]=\"item.queryParams\"\r\n                [attr.target]=\"item.target\"\r\n                tabindex=\"0\"\r\n                pRipple\r\n            >\r\n                <i [ngClass]=\"item.icon\" class=\"layout-menuitem-icon\"></i>\r\n                <span class=\"layout-menuitem-text\">{{ item.label }}</span>\r\n                <i class=\"pi pi-fw pi-angle-down layout-submenu-toggler\" *ngIf=\"item.items\"></i>\r\n            </a>\r\n\r\n            <ul *ngIf=\"item.items && item.visible !== false\" [@children]=\"submenuAnimation\">\r\n                <ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\r\n                    <li app-menuitem [item]=\"child\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child['badgeClass']\"></li>\r\n                </ng-template>\r\n            </ul>\r\n        </ng-container>\r\n    `,\r\n    animations: [\r\n        trigger('children', [\r\n            state(\r\n                'collapsed',\r\n                style({\r\n                    height: '0'\r\n                })\r\n            ),\r\n            state(\r\n                'expanded',\r\n                style({\r\n                    height: '*'\r\n                })\r\n            ),\r\n            transition('collapsed <=> expanded', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n        ])\r\n    ],\r\n    providers: [LayoutService]\r\n})\r\nexport class AppMenuitem {\r\n    @Input() item!: MenuItem;\r\n\r\n    @Input() index!: number;\r\n\r\n    @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\r\n\r\n    @Input() parentKey!: string;\r\n\r\n    active = false;\r\n\r\n    menuSourceSubscription: Subscription;\r\n\r\n    menuResetSubscription: Subscription;\r\n\r\n    key: string = '';\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private layoutService: LayoutService\r\n    ) {\r\n        this.menuSourceSubscription = this.layoutService.menuSource$.subscribe((value) => {\r\n            Promise.resolve(null).then(() => {\r\n                if (value.routeEvent) {\r\n                    this.active = value.key === this.key || value.key.startsWith(this.key + '-') ? true : false;\r\n                } else {\r\n                    if (value.key !== this.key && !value.key.startsWith(this.key + '-')) {\r\n                        this.active = false;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        this.menuResetSubscription = this.layoutService.resetSource$.subscribe(() => {\r\n            this.active = false;\r\n        });\r\n\r\n        this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((params) => {\r\n            if (this.item.routerLink) {\r\n                this.updateActiveStateFromRoute();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\r\n\r\n        if (this.item.routerLink) {\r\n            this.updateActiveStateFromRoute();\r\n        }\r\n    }\r\n\r\n    updateActiveStateFromRoute() {\r\n        let activeRoute = this.router.isActive(this.item.routerLink[0], { paths: 'exact', queryParams: 'ignored', matrixParams: 'ignored', fragment: 'ignored' });\r\n\r\n        if (activeRoute) {\r\n            this.layoutService.onMenuStateChange({ key: this.key, routeEvent: true });\r\n        }\r\n    }\r\n\r\n    itemClick(event: Event) {\r\n        // avoid processing disabled items\r\n        if (this.item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        // execute command\r\n        if (this.item.command) {\r\n            this.item.command({ originalEvent: event, item: this.item });\r\n        }\r\n\r\n        // toggle active state\r\n        if (this.item.items) {\r\n            this.active = !this.active;\r\n        }\r\n\r\n        this.layoutService.onMenuStateChange({ key: this.key });\r\n    }\r\n\r\n    get submenuAnimation() {\r\n        return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\r\n    }\r\n\r\n    @HostBinding('class.active-menuitem')\r\n    get activeClass() {\r\n        return this.active && !this.root;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.menuSourceSubscription) {\r\n            this.menuSourceSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.menuResetSubscription) {\r\n            this.menuResetSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { AppMenuitem } from './app.menuitem';\r\nimport { Common } from '@/libs/components/Common';\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    standalone: true,\r\n    imports: [CommonModule, AppMenuitem, RouterModule],\r\n    template: `<ul class=\"layout-menu\">\r\n        <ng-container *ngFor=\"let item of model; let i = index\">\r\n            <li app-menuitem *ngIf=\"!item.separator\" [item]=\"item\" [index]=\"i\" [root]=\"true\"></li>\r\n            <li *ngIf=\"item.separator\" class=\"menu-separator\"></li>\r\n        </ng-container>\r\n    </ul> `\r\n})\r\nexport class AppMenu extends Common {\r\n\r\n    model: MenuItem[] = [];\r\n\r\n    ngOnInit() {\r\n        const type = this.getCurrentUser().type;\r\n        this.model = [\r\n            {\r\n                label: 'Principal',\r\n                items: [{ label: 'Inicio', icon: 'pi pi-fw pi-book', routerLink: ['/'] }]\r\n            },\r\n            {\r\n                label: 'Administracion',\r\n                items: [\r\n                    { label: 'Productos', icon: 'pi pi-fw pi-box', routerLink: ['/products'] },\r\n                    { label: 'Usuarios', icon: 'pi pi-fw pi-user', routerLink: ['/users'] },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Ordenes',\r\n                icon: 'pi pi-fw pi-briefcase',\r\n                routerLink: ['/orders'],\r\n                items: [\r\n                    {\r\n                        label: 'Mis ordenes',\r\n                        icon: 'pi pi-fw pi-pen-to-square',\r\n                        routerLink: ['/orders/me']\r\n                    },\r\n                    {\r\n                        label: 'Historico',\r\n                        icon: 'pi pi-fw pi-clock',\r\n                        routerLink: ['/orders/history']\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Procesado',\r\n                icon: 'pi pi-fw pi-briefcase',\r\n                routerLink: ['/statuses'],\r\n                items: [\r\n                    {\r\n                        label: 'Comisionado',\r\n                        icon: 'pi pi-fw pi-dollar',\r\n                        routerLink: ['/orders/commissiong']\r\n                    },\r\n                    {\r\n                        label: 'Procesando',\r\n                        icon: 'pi pi-fw pi-check-circle',\r\n                        routerLink: ['/orders/processing']\r\n                    },\r\n                    {\r\n                        label: 'Procesado',\r\n                        icon: 'pi pi-fw pi-check-circle',\r\n                        routerLink: ['/orders/processed']\r\n                    },\r\n                ]\r\n            }\r\n        ];\r\n\r\n        if (type !== 'ADMINISTRATOR') {\r\n            this.model = this.model.filter(item => item.label === 'Ordenes');\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component, ElementRef } from '@angular/core';\r\nimport { AppMenu } from './app.menu';\r\n\r\n@Component({\r\n    selector: 'app-sidebar',\r\n    standalone: true,\r\n    imports: [AppMenu],\r\n    template: ` <div class=\"layout-sidebar\">\r\n        <app-menu></app-menu>\r\n    </div>`\r\n})\r\nexport class AppSidebar {\r\n    constructor(public el: ElementRef) {}\r\n}\r\n","import { Common } from '@/libs/components/Common';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    standalone: true,\r\n    selector: 'app-footer',\r\n    template: `<div class=\"layout-footer\">\r\n        Cafecitos by\r\n        <a href=\"https://devcito.org\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-primary font-bold hover:underline\">Devcito</a>, user: {{this.getCurrentUser().username+' ('+this.getCurrentUser().type+')'}}\r\n    </div>`\r\n})\r\nexport class AppFooter extends Common { }\r\n","import { Component, Renderer2, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\r\nimport { filter, Subscription } from 'rxjs';\r\nimport { AppTopbar } from './app.topbar';\r\nimport { AppSidebar } from './app.sidebar';\r\nimport { AppFooter } from './app.footer';\r\nimport { LayoutService } from '../service/layout.service';\r\n\r\n@Component({\r\n    selector: 'app-layout',\r\n    standalone: true,\r\n    imports: [CommonModule, AppTopbar, AppSidebar, RouterModule, AppFooter],\r\n    template: `<div class=\"layout-wrapper\" [ngClass]=\"containerClass\">\r\n        <app-topbar></app-topbar>\r\n        <app-sidebar></app-sidebar>\r\n        <div class=\"layout-main-container\">\r\n            <div class=\"layout-main\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n            <app-footer></app-footer>\r\n        </div>\r\n        <div class=\"layout-mask animate-fadein\"></div>\r\n    </div> `\r\n})\r\nexport class AppLayout {\r\n    overlayMenuOpenSubscription: Subscription;\r\n\r\n    menuOutsideClickListener: any;\r\n\r\n    @ViewChild(AppSidebar) appSidebar!: AppSidebar;\r\n\r\n    @ViewChild(AppTopbar) appTopBar!: AppTopbar;\r\n\r\n    constructor(\r\n        public layoutService: LayoutService,\r\n        public renderer: Renderer2,\r\n        public router: Router\r\n    ) {\r\n        this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\r\n            if (!this.menuOutsideClickListener) {\r\n                this.menuOutsideClickListener = this.renderer.listen('document', 'click', (event) => {\r\n                    if (this.isOutsideClicked(event)) {\r\n                        this.hideMenu();\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (this.layoutService.layoutState().staticMenuMobileActive) {\r\n                this.blockBodyScroll();\r\n            }\r\n        });\r\n\r\n        this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe(() => {\r\n            this.hideMenu();\r\n        });\r\n    }\r\n\r\n    isOutsideClicked(event: MouseEvent) {\r\n        const sidebarEl = document.querySelector('.layout-sidebar');\r\n        const topbarEl = document.querySelector('.layout-menu-button');\r\n        const eventTarget = event.target as Node;\r\n\r\n        return !(sidebarEl?.isSameNode(eventTarget) || sidebarEl?.contains(eventTarget) || topbarEl?.isSameNode(eventTarget) || topbarEl?.contains(eventTarget));\r\n    }\r\n\r\n    hideMenu() {\r\n        this.layoutService.layoutState.update((prev) => ({ ...prev, overlayMenuActive: false, staticMenuMobileActive: false, menuHoverActive: false }));\r\n        if (this.menuOutsideClickListener) {\r\n            this.menuOutsideClickListener();\r\n            this.menuOutsideClickListener = null;\r\n        }\r\n        this.unblockBodyScroll();\r\n    }\r\n\r\n    blockBodyScroll(): void {\r\n        if (document.body.classList) {\r\n            document.body.classList.add('blocked-scroll');\r\n        } else {\r\n            document.body.className += ' blocked-scroll';\r\n        }\r\n    }\r\n\r\n    unblockBodyScroll(): void {\r\n        if (document.body.classList) {\r\n            document.body.classList.remove('blocked-scroll');\r\n        } else {\r\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    }\r\n\r\n    get containerClass() {\r\n        return {\r\n            'layout-overlay': this.layoutService.layoutConfig().menuMode === 'overlay',\r\n            'layout-static': this.layoutService.layoutConfig().menuMode === 'static',\r\n            'layout-static-inactive': this.layoutService.layoutState().staticMenuDesktopInactive && this.layoutService.layoutConfig().menuMode === 'static',\r\n            'layout-overlay-active': this.layoutService.layoutState().overlayMenuActive,\r\n            'layout-mobile-active': this.layoutService.layoutState().staticMenuMobileActive\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.overlayMenuOpenSubscription) {\r\n            this.overlayMenuOpenSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.menuOutsideClickListener) {\r\n            this.menuOutsideClickListener();\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NotificationsWidget } from './components/notificationswidget';\r\nimport { StatsWidget } from './components/statswidget';\r\nimport { RecentSalesWidget } from './components/recentsaleswidget';\r\nimport { BestSellingWidget } from './components/bestsellingwidget';\r\nimport { RevenueStreamWidget } from './components/revenuestreamwidget';\r\nimport { Common } from '@/libs/components/Common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    template: `\r\n\r\n    `\r\n})\r\nexport class Dashboard extends Common {\r\n    constructor(private route: Router) {\r\n        super();\r\n        if (!this.getCurrentUser().id) {\r\n            this.route.navigate(['/auth/login']);\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { AppFloatingConfigurator } from '../../layout/component/app.floatingconfigurator';\r\n\r\n@Component({\r\n    selector: 'app-notfound',\r\n    standalone: true,\r\n    imports: [RouterModule, AppFloatingConfigurator, ButtonModule],\r\n    template: ` <app-floating-configurator />\r\n        <div class=\"flex items-center justify-center min-h-screen overflow-hidden\">\r\n            <div class=\"flex flex-col items-center justify-center\">\r\n                <svg width=\"54\" height=\"40\" viewBox=\"0 0 54 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"mb-8 w-32 shrink-0\">\r\n                    <path\r\n                        fill-rule=\"evenodd\"\r\n                        clip-rule=\"evenodd\"\r\n                        d=\"M17.1637 19.2467C17.1566 19.4033 17.1529 19.561 17.1529 19.7194C17.1529 25.3503 21.7203 29.915 27.3546 29.915C32.9887 29.915 37.5561 25.3503 37.5561 19.7194C37.5561 19.5572 37.5524 19.3959 37.5449 19.2355C38.5617 19.0801 39.5759 18.9013 40.5867 18.6994L40.6926 18.6782C40.7191 19.0218 40.7326 19.369 40.7326 19.7194C40.7326 27.1036 34.743 33.0896 27.3546 33.0896C19.966 33.0896 13.9765 27.1036 13.9765 19.7194C13.9765 19.374 13.9896 19.0316 14.0154 18.6927L14.0486 18.6994C15.0837 18.9062 16.1223 19.0886 17.1637 19.2467ZM33.3284 11.4538C31.6493 10.2396 29.5855 9.52381 27.3546 9.52381C25.1195 9.52381 23.0524 10.2421 21.3717 11.4603C20.0078 11.3232 18.6475 11.1387 17.2933 10.907C19.7453 8.11308 23.3438 6.34921 27.3546 6.34921C31.36 6.34921 34.9543 8.10844 37.4061 10.896C36.0521 11.1292 34.692 11.3152 33.3284 11.4538ZM43.826 18.0518C43.881 18.6003 43.9091 19.1566 43.9091 19.7194C43.9091 28.8568 36.4973 36.2642 27.3546 36.2642C18.2117 36.2642 10.8 28.8568 10.8 19.7194C10.8 19.1615 10.8276 18.61 10.8816 18.0663L7.75383 17.4411C7.66775 18.1886 7.62354 18.9488 7.62354 19.7194C7.62354 30.6102 16.4574 39.4388 27.3546 39.4388C38.2517 39.4388 47.0855 30.6102 47.0855 19.7194C47.0855 18.9439 47.0407 18.1789 46.9536 17.4267L43.826 18.0518ZM44.2613 9.54743L40.9084 10.2176C37.9134 5.95821 32.9593 3.1746 27.3546 3.1746C21.7442 3.1746 16.7856 5.96385 13.7915 10.2305L10.4399 9.56057C13.892 3.83178 20.1756 0 27.3546 0C34.5281 0 40.8075 3.82591 44.2613 9.54743Z\"\r\n                        fill=\"var(--primary-color)\"\r\n                    />\r\n                    <mask id=\"mask0_1413_1551\" style=\"mask-type: alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"8\" width=\"54\" height=\"11\">\r\n                        <path d=\"M27 18.3652C10.5114 19.1944 0 8.88892 0 8.88892C0 8.88892 16.5176 14.5866 27 14.5866C37.4824 14.5866 54 8.88892 54 8.88892C54 8.88892 43.4886 17.5361 27 18.3652Z\" fill=\"var(--primary-color)\" />\r\n                    </mask>\r\n                    <g mask=\"url(#mask0_1413_1551)\">\r\n                        <path\r\n                            d=\"M-4.673e-05 8.88887L3.73084 -1.91434L-8.00806 17.0473L-4.673e-05 8.88887ZM27 18.3652L26.4253 6.95109L27 18.3652ZM54 8.88887L61.2673 17.7127L50.2691 -1.91434L54 8.88887ZM-4.673e-05 8.88887C-8.00806 17.0473 -8.00469 17.0505 -8.00132 17.0538C-8.00018 17.055 -7.99675 17.0583 -7.9944 17.0607C-7.98963 17.0653 -7.98474 17.0701 -7.97966 17.075C-7.96949 17.0849 -7.95863 17.0955 -7.94707 17.1066C-7.92401 17.129 -7.89809 17.1539 -7.86944 17.1812C-7.8122 17.236 -7.74377 17.3005 -7.66436 17.3743C-7.50567 17.5218 -7.30269 17.7063 -7.05645 17.9221C-6.56467 18.3532 -5.89662 18.9125 -5.06089 19.5534C-3.39603 20.83 -1.02575 22.4605 1.98012 24.0457C7.97874 27.2091 16.7723 30.3226 27.5746 29.7793L26.4253 6.95109C20.7391 7.23699 16.0326 5.61231 12.6534 3.83024C10.9703 2.94267 9.68222 2.04866 8.86091 1.41888C8.45356 1.10653 8.17155 0.867278 8.0241 0.738027C7.95072 0.673671 7.91178 0.637576 7.90841 0.634492C7.90682 0.63298 7.91419 0.639805 7.93071 0.65557C7.93897 0.663455 7.94952 0.673589 7.96235 0.686039C7.96883 0.692262 7.97582 0.699075 7.98338 0.706471C7.98719 0.710167 7.99113 0.714014 7.99526 0.718014C7.99729 0.720008 8.00047 0.723119 8.00148 0.724116C8.00466 0.727265 8.00796 0.730446 -4.673e-05 8.88887ZM27.5746 29.7793C37.6904 29.2706 45.9416 26.3684 51.6602 23.6054C54.5296 22.2191 56.8064 20.8465 58.4186 19.7784C59.2265 19.2431 59.873 18.7805 60.3494 18.4257C60.5878 18.2482 60.7841 18.0971 60.9374 17.977C61.014 17.9169 61.0799 17.8645 61.1349 17.8203C61.1624 17.7981 61.1872 17.7781 61.2093 17.7602C61.2203 17.7512 61.2307 17.7427 61.2403 17.7348C61.2452 17.7308 61.2499 17.727 61.2544 17.7233C61.2566 17.7215 61.2598 17.7188 61.261 17.7179C61.2642 17.7153 61.2673 17.7127 54 8.88887C46.7326 0.0650536 46.7357 0.0625219 46.7387 0.0600241C46.7397 0.0592345 46.7427 0.0567658 46.7446 0.0551857C46.7485 0.0520238 46.7521 0.0489887 46.7557 0.0460799C46.7628 0.0402623 46.7694 0.0349487 46.7753 0.0301318C46.7871 0.0204986 46.7966 0.0128495 46.8037 0.00712562C46.818 -0.00431848 46.8228 -0.00808311 46.8184 -0.00463784C46.8096 0.00228345 46.764 0.0378652 46.6828 0.0983779C46.5199 0.219675 46.2165 0.439161 45.7812 0.727519C44.9072 1.30663 43.5257 2.14765 41.7061 3.02677C38.0469 4.79468 32.7981 6.63058 26.4253 6.95109L27.5746 29.7793ZM54 8.88887C50.2691 -1.91433 50.27 -1.91467 50.271 -1.91498C50.2712 -1.91506 50.272 -1.91535 50.2724 -1.9155C50.2733 -1.91581 50.274 -1.91602 50.2743 -1.91616C50.2752 -1.91643 50.275 -1.91636 50.2738 -1.91595C50.2714 -1.91515 50.2652 -1.91302 50.2552 -1.9096C50.2351 -1.90276 50.1999 -1.89078 50.1503 -1.874C50.0509 -1.84043 49.8938 -1.78773 49.6844 -1.71863C49.2652 -1.58031 48.6387 -1.377 47.8481 -1.13035C46.2609 -0.635237 44.0427 0.0249875 41.5325 0.6823C36.215 2.07471 30.6736 3.15796 27 3.15796V26.0151C33.8087 26.0151 41.7672 24.2495 47.3292 22.7931C50.2586 22.026 52.825 21.2618 54.6625 20.6886C55.5842 20.4011 56.33 20.1593 56.8551 19.986C57.1178 19.8993 57.3258 19.8296 57.4735 19.7797C57.5474 19.7548 57.6062 19.7348 57.6493 19.72C57.6709 19.7127 57.6885 19.7066 57.7021 19.7019C57.7089 19.6996 57.7147 19.6976 57.7195 19.696C57.7219 19.6952 57.7241 19.6944 57.726 19.6938C57.7269 19.6934 57.7281 19.693 57.7286 19.6929C57.7298 19.6924 57.7309 19.692 54 8.88887ZM27 3.15796C23.3263 3.15796 17.7849 2.07471 12.4674 0.6823C9.95717 0.0249875 7.73904 -0.635237 6.15184 -1.13035C5.36118 -1.377 4.73467 -1.58031 4.3155 -1.71863C4.10609 -1.78773 3.94899 -1.84043 3.84961 -1.874C3.79994 -1.89078 3.76474 -1.90276 3.74471 -1.9096C3.73469 -1.91302 3.72848 -1.91515 3.72613 -1.91595C3.72496 -1.91636 3.72476 -1.91643 3.72554 -1.91616C3.72593 -1.91602 3.72657 -1.91581 3.72745 -1.9155C3.72789 -1.91535 3.72874 -1.91506 3.72896 -1.91498C3.72987 -1.91467 3.73084 -1.91433 -4.673e-05 8.88887C-3.73093 19.692 -3.72983 19.6924 -3.72868 19.6929C-3.72821 19.693 -3.72698 19.6934 -3.72603 19.6938C-3.72415 19.6944 -3.72201 19.6952 -3.71961 19.696C-3.71482 19.6976 -3.70901 19.6996 -3.7022 19.7019C-3.68858 19.7066 -3.67095 19.7127 -3.6494 19.72C-3.60629 19.7348 -3.54745 19.7548 -3.47359 19.7797C-3.32589 19.8296 -3.11788 19.8993 -2.85516 19.986C-2.33008 20.1593 -1.58425 20.4011 -0.662589 20.6886C1.17485 21.2618 3.74125 22.026 6.67073 22.7931C12.2327 24.2495 20.1913 26.0151 27 26.0151V3.15796Z\"\r\n                            fill=\"var(--primary-color)\"\r\n                        />\r\n                    </g>\r\n                </svg>\r\n                <div style=\"border-radius: 56px; padding: 0.3rem; background: linear-gradient(180deg, color-mix(in srgb, var(--primary-color), transparent 60%) 10%, var(--surface-ground) 30%)\">\r\n                    <div class=\"w-full bg-surface-0 dark:bg-surface-900 py-20 px-8 sm:px-20 flex flex-col items-center\" style=\"border-radius: 53px\">\r\n                        <span class=\"text-primary font-bold text-3xl\">404</span>\r\n                        <h1 class=\"text-surface-900 dark:text-surface-0 font-bold text-3xl lg:text-5xl mb-2\">Not Found</h1>\r\n                        <div class=\"text-surface-600 dark:text-surface-200 mb-8\">Requested resource is not available.</div>\r\n                        <a routerLink=\"/\" class=\"w-full flex items-center py-8 border-surface-300 dark:border-surface-500 border-b\">\r\n                            <span class=\"flex justify-center items-center border-2 border-primary text-primary rounded-border\" style=\"height: 3.5rem; width: 3.5rem\">\r\n                                <i class=\"pi pi-fw pi-table text-2xl!\"></i>\r\n                            </span>\r\n                            <span class=\"ml-6 flex flex-col\">\r\n                                <span class=\"text-surface-900 dark:text-surface-0 lg:text-xl font-medium mb-0 block\">Frequently Asked Questions</span>\r\n                                <span class=\"text-surface-600 dark:text-surface-200 lg:text-xl\">Ultricies mi quis hendrerit dolor.</span>\r\n                            </span>\r\n                        </a>\r\n                        <a routerLink=\"/\" class=\"w-full flex items-center py-8 border-surface-300 dark:border-surface-500 border-b\">\r\n                            <span class=\"flex justify-center items-center border-2 border-primary text-primary rounded-border\" style=\"height: 3.5rem; width: 3.5rem\">\r\n                                <i class=\"pi pi-fw pi-question-circle text-2xl!\"></i>\r\n                            </span>\r\n                            <span class=\"ml-6 flex flex-col\">\r\n                                <span class=\"text-surface-900 dark:text-surface-0 lg:text-xl font-medium mb-0\">Solution Center</span>\r\n                                <span class=\"text-surface-600 dark:text-surface-200 lg:text-xl\">Phasellus faucibus scelerisque eleifend.</span>\r\n                            </span>\r\n                        </a>\r\n                        <a routerLink=\"/\" class=\"w-full flex items-center mb-8 py-8 border-surface-300 dark:border-surface-500 border-b\">\r\n                            <span class=\"flex justify-center items-center border-2 border-primary text-primary rounded-border\" style=\"height: 3.5rem; width: 3.5rem\">\r\n                                <i class=\"pi pi-fw pi-unlock text-2xl!\"></i>\r\n                            </span>\r\n                            <span class=\"ml-6 flex flex-col\">\r\n                                <span class=\"text-surface-900 dark:text-surface-0 lg:text-xl font-medium mb-0\">Permission Manager</span>\r\n                                <span class=\"text-surface-600 dark:text-surface-200 lg:text-xl\">Accumsan in nisl nisi scelerisque</span>\r\n                            </span>\r\n                        </a>\r\n                        <p-button label=\"Go to Dashboard\" routerLink=\"/\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>`\r\n})\r\nexport class Notfound {}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductsModel } from '../../libs/models/products-model';\r\nimport { PaginatedResponse } from '../../libs/models/paginated-response.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsApiService {\r\n\r\n  private apiUrl = '/api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(\r\n    active?: boolean,\r\n    name?: string,\r\n    page: number = 1,\r\n    perPage: number = 15\r\n  ): Observable<PaginatedResponse<ProductsModel>> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('perPage', perPage.toString());\r\n\r\n    if (active !== undefined) {\r\n      params = params.set('active', active ? \"1\" : \"0\");\r\n    }\r\n\r\n    if (name) {\r\n      params = params.set('name', name);\r\n    }\r\n\r\n    return this.http.get<PaginatedResponse<ProductsModel>>(this.apiUrl, { params });\r\n  }\r\n\r\n  createProduct(product: Omit<ProductsModel, 'id' | 'is_active'>): Observable<ProductsModel> {\r\n    return this.http.post<ProductsModel>(this.apiUrl, product);\r\n  }\r\n\r\n  updateProduct(id: number, product: ProductsModel): Observable<ProductsModel> {\r\n    const { id: productId, ...productData } = product;\r\n    return this.http.put<ProductsModel>(`${this.apiUrl}/${id}`, productData);\r\n  }\r\n\r\n  changeStatus(id: number, is_active: boolean): Observable<void> {\r\n    return this.http.patch<void>(`${this.apiUrl}/${id}/status`, { is_active });\r\n  }\r\n\r\n  uploadImage(id: number, image: File): Observable<void> {\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    return this.http.post<void>(`${this.apiUrl}/${id}/image`, formData);\r\n  }\r\n\r\n  getProductTypes(): Observable<{name: string, value: string}[]> {\r\n    return this.http.get<{name: string, value: string}[]>(`${this.apiUrl}/types`);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ToolbarModule } from \"primeng/toolbar\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { ProductsModel } from '@/libs/models/products-model';\r\nimport { ProductsApiService } from '../services/products-api';\r\nimport { Table, TableModule, TablePageEvent } from \"primeng/table\";\r\nimport { IconFieldModule } from \"primeng/iconfield\";\r\nimport { InputIconModule } from \"primeng/inputicon\";\r\nimport { Pagination } from '@/libs/models/paginated-response.model';\r\nimport { SelectModule } from \"primeng/select\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Tooltip } from \"primeng/tooltip\";\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  imports: [\r\n    CommonModule,\r\n    ToolbarModule, ButtonModule, TableModule, IconFieldModule, InputIconModule,\r\n    SelectModule, FormsModule, InputTextModule, DialogModule, InputNumberModule,\r\n    FileUploadModule, ToastModule, ConfirmDialogModule, CurrencyPipe, TagModule,\r\n    Tooltip\r\n],\r\n  providers: [MessageService, ConfirmationService],\r\n  templateUrl: './products.html',\r\n  styleUrl: './products.scss'\r\n})\r\nexport class Products implements OnInit {\r\n  productDialog: boolean = false;\r\n  submitted: boolean = false;\r\n  product!: ProductsModel;\r\n  uploadedFile: any;\r\n  newImagePreviewUrl: SafeUrl | null = null;\r\n  private imageCacheBuster = new Map<number, number>();\r\n\r\n  lista: ProductsModel[] = [];\r\n  active: boolean = true;\r\n  name: string = '';\r\n  page: number = 1;\r\n  perPage: number = 10;\r\n  pagination!: Pagination;\r\n  first: number = 0;\r\n  total!: number;\r\n  dropdownItems = [\r\n    { name: 'Active', code: true },\r\n    { name: 'Inactive', code: false },\r\n  ];\r\n\r\n  productTypes: {name: string, value: string}[] = [];\r\n  statusOptions = [{name: 'Active', value: true}, {name: 'Inactive', value: false}];\r\n\r\n  constructor(\r\n    private productService: ProductsApiService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts();\r\n    this.loadProductTypes();\r\n  }\r\n\r\n  loadProductTypes() {\r\n    this.productService.getProductTypes().subscribe(types => {\r\n      this.productTypes = types;\r\n    });\r\n  }\r\n\r\n  createImageUrl(id: number): SafeUrl {\r\n    const cacheBuster = this.imageCacheBuster.get(id) || '';\r\n    const imageUrl = `/api/products/${id}/image?_=${cacheBuster}`;\r\n    return this.sanitizer.bypassSecurityTrustUrl(imageUrl);\r\n  }\r\n\r\n  getProducts() {\r\n    this.productService.getProducts(this.active, this.name, this.page, this.perPage).subscribe({\r\n      next: (response) => {\r\n        this.lista = response.data;\r\n        this.pagination = response.pagination;\r\n        this.total = this.pagination.total;\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching products' });\r\n      }\r\n    });\r\n  }\r\n\r\n  filterByName(name: string) {\r\n    this.name = name;\r\n    this.page = 1;\r\n    this.first = 0;\r\n    this.getProducts();\r\n  }\r\n\r\n  onChangeActive($event: boolean) {\r\n    this.active = $event;\r\n    this.getProducts();\r\n  }\r\n\r\n  onPageChange($event: TablePageEvent) {\r\n    this.first = $event.first;\r\n    this.page = Math.floor($event.first / $event.rows) + 1;\r\n    this.getProducts();\r\n  }\r\n\r\n  openNew() {\r\n    this.product = {} as ProductsModel;\r\n    this.product.is_active = true;\r\n    if (this.productTypes.length > 0) {\r\n      this.product.type = this.productTypes[0].value;\r\n    }\r\n    this.submitted = false;\r\n    this.productDialog = true;\r\n  }\r\n\r\n  editProduct(product: ProductsModel) {\r\n    this.product = { ...product };\r\n    this.productDialog = true;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.productDialog = false;\r\n    this.submitted = false;\r\n    this.newImagePreviewUrl = null;\r\n  }\r\n\r\n  saveProduct() {\r\n    this.submitted = true;\r\n\r\n    if (this.product.description?.trim()) {\r\n      const productAction = this.product.id\r\n        ? this.productService.updateProduct(this.product.id, this.product)\r\n        : this.productService.createProduct(this.product as Omit<ProductsModel, 'id'>);\r\n\r\n      productAction.subscribe({\r\n        next: (response) => {\r\n          const successMessage = this.product.id ? 'Product Updated' : 'Product Created';\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: successMessage });\r\n\r\n          if (this.uploadedFile) {\r\n            this.uploadImage(response.id).subscribe(() => {\r\n              this.getProducts();\r\n              this.hideDialog();\r\n            });\r\n          } else {\r\n            this.getProducts();\r\n            this.hideDialog();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          const errorMessage = this.product.id ? 'Error updating product' : 'Error creating product';\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: errorMessage });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  changeStatus(product: ProductsModel) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to change the status of ' + product.description + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.productService.changeStatus(product.id, !product.is_active).subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Status Changed' });\r\n            this.getProducts();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error changing status' });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpload(event: any) {\r\n    this.uploadedFile = event.files[0];\r\n    this.newImagePreviewUrl = this.sanitizer.bypassSecurityTrustUrl(\r\n      URL.createObjectURL(this.uploadedFile)\r\n    );\r\n  }\r\n\r\n  uploadImage(productId: number): Observable<any> {\r\n    return this.productService.uploadImage(productId, this.uploadedFile).pipe(\r\n      tap(() => {\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Image uploaded' });\r\n        this.uploadedFile = null;\r\n        this.imageCacheBuster.set(productId, new Date().getTime());\r\n      }),\r\n      catchError((err) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Image upload failed' });\r\n        return throwError(() => err);\r\n      })\r\n    );\r\n  }\r\n}","<p-toast></p-toast>\r\n<p-confirmdialog></p-confirmdialog>\r\n\r\n<p-toolbar>\r\n    <ng-template #start>\r\n        <p-button label=\"New\" icon=\"pi pi-plus\" severity=\"secondary\"\r\n            class=\"mr-2\" (onClick)=\"openNew()\" />\r\n    </ng-template>\r\n\r\n    <ng-template #end>\r\n        <label for=\"active\" class=\"mr-2\">Status </label>\r\n        <p-select id=\"state\" [(ngModel)]=\"active\" [options]=\"dropdownItems\"\r\n            optionLabel=\"name\" [optionValue]=\"'code'\"\r\n            (onChange)=\"onChangeActive($event.value)\" placeholder=\"Select One\"\r\n            class=\"w-full\"></p-select>\r\n    </ng-template>\r\n</p-toolbar>\r\n\r\n<p-table #dt [value]=\"lista\" [rows]=\"perPage\" [paginator]=\"true\" [lazy]=\"true\"\r\n    [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n    [rowHover]=\"true\" (onPage)=\"onPageChange($event)\" [totalRecords]=\"total\"\r\n    dataKey=\"id\" [(first)]=\"first\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n    [showCurrentPageReport]=\"true\">\r\n    <ng-template #caption>\r\n        <div class=\"flex items-center justify-between\">\r\n            <h5 class=\"m-0\">Manage Products</h5>\r\n            <p-iconfield>\r\n                <p-inputicon class=\"pi pi-search\" />\r\n                <input pInputText type=\"text\" #search placeholder=\"Buscar...\"\r\n                    (keydown.enter)=\"filterByName(search.value)\" (blur)=\"filterByName(search.value)\" />\r\n            </p-iconfield>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #header>\r\n        <tr>\r\n            <th style=\"min-width: 3rem\">Id</th>\r\n            <th style=\"min-width: 10rem\"></th>\r\n            <th style=\"min-width:16rem\">Name</th>\r\n            <th style=\"width:10rem\">Image</th>\r\n            <th style=\"min-width:10rem\">Type</th>\r\n            <th style=\"min-width:5rem\">Client Price</th>\r\n            <th style=\"min-width:5rem\">Animation Price</th>\r\n            <th style=\"min-width:5rem\">Waiter Price</th>\r\n            <th style=\"min-width:5rem\">Waiter Commission</th>\r\n            <th style=\"min-width: 3rem\">Active</th>\r\n\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-product>\r\n        <tr>\r\n            <td>{{product.id}}</td>\r\n            <td>\r\n                <p-button icon=\"pi pi-pencil\" severity=\"info\" class=\"mr-2\"\r\n                    (click)=\"editProduct(product)\"\r\n                    pTooltip=\"Edit Product\"></p-button>\r\n                <p-button\r\n                    [icon]=\"product.is_active ? 'pi pi-eye-slash' : 'pi pi-eye'\"\r\n                    [severity]=\"product.is_active ? 'danger' : 'success'\"\r\n                    (click)=\"changeStatus(product)\"\r\n                    [pTooltip]=\"product.is_active ? 'Inactive' : 'Active'\"></p-button>\r\n            </td>\r\n            <td>{{product.description}}</td>\r\n            <td>\r\n                <img [src]=\"createImageUrl(product.id)\"\r\n                    [alt]=\"product.description\" class=\"product-image-thumbnail\"\r\n                    onerror=\"this.style.display='none'\" />\r\n            </td>\r\n            <td>{{product.type}}</td>\r\n            <td>{{product.client_price | currency:'BOB'}}</td>\r\n            <td>{{product.animation_price | currency:'BOB'}}</td>\r\n            <td>{{product.waiter_price | currency:'BOB'}}</td>\r\n            <td>{{product.waiter_commission | currency:'BOB'}}</td>\r\n            <td>\r\n                <p-tag [value]=\"product.is_active ? 'ACTIVE' : 'INACTIVE'\"\r\n                    [severity]=\"product.is_active ? 'success' : 'danger'\"></p-tag>\r\n            </td>\r\n\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n>\r\n<p-dialog [(visible)]=\"productDialog\" [style]=\"{ width: '450px' }\"\r\n    header=\"Product Details\" [modal]=\"true\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div class=\"flex flex-col gap-6\">\r\n            <div>\r\n                <label for=\"description\"\r\n                    class=\"block font-bold mb-3\">Name</label>\r\n                <input type=\"text\" pInputText id=\"description\"\r\n                    [(ngModel)]=\"product.description\" required autofocus\r\n                    fluid />\r\n                <small class=\"p-error\"\r\n                    *ngIf=\"submitted && !product.description\">Name is\r\n                    required.</small>\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"type\" class=\"block font-bold mb-3\">Type</label>\r\n                <p-select id=\"type\" [options]=\"productTypes\"\r\n                    [(ngModel)]=\"product.type\" optionLabel=\"name\"\r\n                    optionValue=\"value\" placeholder=\"Select a Type\"\r\n                    fluid></p-select>\r\n            </div>\r\n            <div>\r\n                <label for=\"status\" class=\"block font-bold mb-3\">Status</label>\r\n                <p-select id=\"status\" [options]=\"statusOptions\"\r\n                    [(ngModel)]=\"product.is_active\" optionLabel=\"name\"\r\n                    optionValue=\"value\" placeholder=\"Select a Status\"\r\n                    fluid></p-select>\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"client_price\" class=\"block font-bold mb-3\">Client\r\n                    Price</label>\r\n                <p-inputnumber id=\"client_price\"\r\n                    [(ngModel)]=\"product.client_price\" mode=\"currency\"\r\n                    currency=\"USD\" locale=\"en-US\" fluid></p-inputnumber>\r\n            </div>\r\n            <div>\r\n                <label for=\"animation_price\"\r\n                    class=\"block font-bold mb-3\">Animation Price</label>\r\n                <p-inputnumber id=\"animation_price\"\r\n                    [(ngModel)]=\"product.animation_price\" mode=\"currency\"\r\n                    currency=\"USD\" locale=\"en-US\" fluid></p-inputnumber>\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"waiter_price\" class=\"block font-bold mb-3\">Waiter\r\n                    Price</label>\r\n                <p-inputnumber id=\"waiter_price\"\r\n                    [(ngModel)]=\"product.waiter_price\" mode=\"currency\"\r\n                    currency=\"USD\" locale=\"en-US\" fluid></p-inputnumber>\r\n            </div>\r\n            <div>\r\n                <label for=\"waiter_commission\"\r\n                    class=\"block font-bold mb-3\">Waiter Commission</label>\r\n                <p-inputnumber id=\"waiter_commission\"\r\n                    [(ngModel)]=\"product.waiter_commission\" mode=\"currency\"\r\n                    currency=\"USD\" locale=\"en-US\" fluid></p-inputnumber>\r\n            </div>\r\n\r\n            <div class=\"field\" *ngIf=\"product.id\">\r\n                <label>Current Image</label>\r\n                <img [src]=\"createImageUrl(product.id)\"\r\n                    [alt]=\"product.description\" class=\"product-image-preview\"\r\n                    onerror=\"this.style.display='none'\" />\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <label for=\"image\">{{product.id ? 'Change' : 'Upload'}}\r\n                    Image</label>\r\n                <p-fileupload mode=\"basic\" name=\"image\" url=\"./\"\r\n                    (onSelect)=\"onUpload($event)\" accept=\"image/*\"\r\n                    [maxFileSize]=\"5000000\"></p-fileupload>\r\n            </div>\r\n\r\n            <div class=\"field\" *ngIf=\"newImagePreviewUrl\">\r\n                <label>New Image Preview</label>\r\n                <img [src]=\"newImagePreviewUrl\" [alt]=\"product.description\"\r\n                    class=\"product-image-preview\" />\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <p-button label=\"Cancel\" icon=\"pi pi-times\" severity=\"secondary\"\r\n            (click)=\"hideDialog()\"></p-button>\r\n        <p-button label=\"Save\" icon=\"pi pi-check\"\r\n            (click)=\"saveProduct()\"></p-button>\r\n    </ng-template>\r\n</p-dialog>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToolbarModule } from \"primeng/toolbar\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { UserModel } from '@/libs/models/user.model';\r\nimport { UsersApiService } from '../services/users-api';\r\nimport { Table, TableModule, TablePageEvent } from \"primeng/table\";\r\nimport { IconFieldModule } from \"primeng/iconfield\";\r\nimport { InputIconModule } from \"primeng/inputicon\";\r\nimport { Pagination } from '@/libs/models/paginated-response.model';\r\nimport { SelectModule } from \"primeng/select\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  imports: [\r\n    CommonModule,\r\n    ToolbarModule, ButtonModule, TableModule, IconFieldModule, InputIconModule, \r\n    SelectModule, FormsModule, InputTextModule, DialogModule, InputNumberModule,\r\n    FileUploadModule, ToastModule, ConfirmDialogModule, TagModule\r\n  ],\r\n  providers: [MessageService, ConfirmationService],\r\n  templateUrl: './users.html',\r\n  styleUrl: './users.scss'\r\n})\r\nexport class Users implements OnInit {\r\n  userDialog: boolean = false;\r\n  submitted: boolean = false;\r\n  user!: UserModel;\r\n  uploadedFile: any;\r\n  newImagePreviewUrl: SafeUrl | null = null;\r\n  private imageCacheBuster = new Map<number, number>();\r\n\r\n  lista: UserModel[] = [];\r\n  active: boolean = true;\r\n  name: string = '';\r\n  page: number = 1;\r\n  perPage: number = 10;\r\n  pagination!: Pagination;\r\n  first: number = 0;\r\n  total!: number;\r\n  dropdownItems = [\r\n    { name: 'Active', code: true },\r\n    { name: 'Inactive', code: false },\r\n  ];\r\n\r\n  userTypes: {name: string, value: string}[] = [];\r\n  statusOptions = [{name: 'Active', value: true}, {name: 'Inactive', value: false}];\r\n\r\n  constructor(\r\n    private usersService: UsersApiService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n    this.loadUserTypes();\r\n  }\r\n\r\n  loadUserTypes() {\r\n    this.usersService.getUsersType().subscribe(types => {\r\n      this.userTypes = types;\r\n    });\r\n  }\r\n\r\n  createImageUrl(id: number): SafeUrl {\r\n    // Users do not have images, return empty string or a placeholder image URL\r\n    return this.sanitizer.bypassSecurityTrustUrl(''); \r\n  }\r\n\r\n  getUsers() {\r\n    this.usersService.getUsers(this.active, this.name, this.page, this.perPage).subscribe({\r\n      next: (response) => {\r\n        this.lista = response.data;\r\n        this.pagination = response.pagination;\r\n        this.total = this.pagination.total;\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching users' });\r\n      }\r\n    });\r\n  }\r\n\r\n  filterByName(name: string) {\r\n    this.name = name;\r\n    this.page = 1;\r\n    this.first = 0;\r\n    this.getUsers();\r\n  }\r\n\r\n  onChangeActive($event: boolean) {\r\n    this.active = $event;\r\n    this.getUsers();\r\n  }\r\n\r\n  onPageChange($event: TablePageEvent) {\r\n    this.first = $event.first;\r\n    this.page = Math.floor($event.first / $event.rows) + 1;\r\n    this.getUsers();\r\n  }\r\n\r\n  openNew() {\r\n    this.user = {} as UserModel;\r\n    this.user.is_active = true;\r\n    if (this.userTypes.length > 0) {\r\n      this.user.type = this.userTypes[0].value;\r\n    }\r\n    this.submitted = false;\r\n    this.userDialog = true;\r\n  }\r\n\r\n  editUser(user: UserModel) {\r\n    this.user = { ...user };\r\n    this.userDialog = true;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.userDialog = false;\r\n    this.submitted = false;\r\n    this.newImagePreviewUrl = null;\r\n  }\r\n\r\n  saveUser() {\r\n    this.submitted = true;\r\n\r\n    if (this.user.username?.trim() && this.user.first_name?.trim() && this.user.last_name?.trim()) {\r\n      const userAction = this.user.id\r\n        ? this.usersService.updateUser(this.user.id, this.user)\r\n        : this.usersService.createUser(this.user as Omit<UserModel, 'id' | 'is_active'>);\r\n\r\n      userAction.subscribe({\r\n        next: (response) => {\r\n          const successMessage = this.user.id ? 'User Updated' : 'User Created';\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: successMessage });\r\n\r\n          // No image upload for users, so directly refresh and close\r\n          this.getUsers();\r\n          this.hideDialog();\r\n        },\r\n        error: (err) => {\r\n          const errorMessage = this.user.id ? 'Error updating user' : 'Error creating user';\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: errorMessage });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  changeStatus(user: UserModel) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to change the status of ' + user.username + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.usersService.changeStatus(user.id!, !user.is_active).subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'User Status Changed' });\r\n            this.getUsers();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error changing status' });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpload(event: any) {\r\n    // Users do not have images, this method is not used\r\n  }\r\n\r\n  uploadImage(userId: number): Observable<any> {\r\n    // Users do not have images, this method is not used\r\n    return of(null);\r\n  }\r\n}","<p-toast></p-toast>\r\n<p-confirmDialog></p-confirmDialog>\r\n\r\n<p-toolbar>\r\n    <ng-template #start>\r\n        <p-button label=\"New\" icon=\"pi pi-plus\" severity=\"secondary\" class=\"mr-2\" (onClick)=\"openNew()\" />\r\n    </ng-template>\r\n\r\n    <ng-template #end>\r\n        <label for=\"active\" class=\"mr-2\">Status </label>\r\n        <p-select id=\"state\" [(ngModel)]=\"active\" [options]=\"dropdownItems\" optionLabel=\"name\" [optionValue]=\"'code'\"\r\n            (onChange)=\"onChangeActive($event.value)\" placeholder=\"Select One\" class=\"w-full\"></p-select>\r\n    </ng-template>\r\n</p-toolbar>\r\n\r\n<p-table #dt [value]=\"lista\" [rows]=\"perPage\" [paginator]=\"true\" [lazy]=\"true\" [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n    [rowHover]=\"true\" (onPage)=\"onPageChange($event)\" [totalRecords]=\"total\" dataKey=\"id\" [(first)]=\"first\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} users\" [showCurrentPageReport]=\"true\">\r\n    <ng-template #caption>\r\n        <div class=\"flex items-center justify-between\">\r\n            <h5 class=\"m-0\">Manage Users</h5>\r\n            <p-iconfield>\r\n                <p-inputicon class=\"pi pi-search\" />\r\n                <input pInputText type=\"text\" #search placeholder=\"Buscar...\" (keydown.enter)=\"filterByName(search.value)\" (blur)=\"filterByName(search.value)\" />\r\n            </p-iconfield>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #header>\r\n        <tr>\r\n            <th style=\"min-width: 3rem\">Id</th>\r\n            <th style=\"min-width:16rem\">Username</th>\r\n            <th style=\"min-width:10rem\">First Name</th>\r\n            <th style=\"min-width:10rem\">Last Name</th>\r\n            <th style=\"min-width:10rem\">Type</th>\r\n            <th style=\"min-width: 3rem\">Active</th>\r\n            <th style=\"min-width: 10rem\"></th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-user>\r\n        <tr>\r\n            <td>{{user.id}}</td>\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.first_name}}</td>\r\n            <td>{{user.last_name}}</td>\r\n            <td>{{user.type}}</td>\r\n            <td>\r\n                <p-tag [value]=\"user.is_active ? 'ACTIVE' : 'INACTIVE'\" \r\n                       [severity]=\"user.is_active ? 'success' : 'danger'\"></p-tag>\r\n            </td>\r\n            <td>\r\n                <p-button icon=\"pi pi-pencil\" severity=\"info\" class=\"mr-2\" (click)=\"editUser(user)\"></p-button>\r\n                <p-button [icon]=\"user.is_active ? 'pi pi-eye-slash' : 'pi pi-eye'\" \r\n                          [severity]=\"user.is_active ? 'danger' : 'success'\" \r\n                          (click)=\"changeStatus(user)\"></p-button>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<p-dialog [(visible)]=\"userDialog\" [style]=\"{ width: '450px' }\"\r\n    header=\"User Details\" [modal]=\"true\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div>\r\n            <label for=\"type\" class=\"block font-bold mb-3\">Type</label>\r\n            <p-select id=\"type\" [options]=\"userTypes\"\r\n                [(ngModel)]=\"user.type\" optionLabel=\"name\"\r\n                optionValue=\"value\" placeholder=\"Select a Type\"\r\n                fluid></p-select>\r\n        </div>\r\n        <div>\r\n            <label for=\"status\" class=\"block font-bold mb-3\">Status</label>\r\n            <p-select id=\"status\" [options]=\"statusOptions\"\r\n                [(ngModel)]=\"user.is_active\" optionLabel=\"name\"\r\n                optionValue=\"value\" placeholder=\"Select a Status\"\r\n                fluid></p-select>\r\n        </div>\r\n        <div>\r\n            <label for=\"username\"\r\n                class=\"block font-bold mb-3\">Username</label>\r\n            <input type=\"text\" pInputText id=\"username\"\r\n                [(ngModel)]=\"user.username\" required autofocus\r\n                fluid />\r\n            @if (submitted && !user.username) {\r\n            <small class=\"p-error\">Username is\r\n                required.</small>\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"password\"\r\n                class=\"block font-bold mb-3\">Password</label>\r\n            <input type=\"password\" pInputText id=\"password\"\r\n                [(ngModel)]=\"user.password\" [required]=\"!user.id\"\r\n                fluid />\r\n            @if (submitted && !user.password && !user.id) {\r\n            <small class=\"p-error\">Password is\r\n                required.</small>\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"first_name\" class=\"block font-bold mb-3\">First\r\n                Name</label>\r\n            <input type=\"text\" pInputText id=\"first_name\"\r\n                [(ngModel)]=\"user.first_name\" required\r\n                fluid />\r\n            @if (submitted && !user.first_name) {\r\n            <small class=\"p-error\">First Name is\r\n                required.</small>\r\n            }\r\n        </div>\r\n        <div>\r\n            <label for=\"last_name\" class=\"block font-bold mb-3\">Last\r\n                Name</label>\r\n            <input type=\"text\" pInputText id=\"last_name\"\r\n                [(ngModel)]=\"user.last_name\" required\r\n                fluid />\r\n            @if (submitted && !user.last_name) {\r\n            <small class=\"p-error\">Last Name is\r\n                required.</small>\r\n            }\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <p-button label=\"Cancel\" icon=\"pi pi-times\" severity=\"secondary\"\r\n            (click)=\"hideDialog()\"></p-button>\r\n        <p-button label=\"Save\" icon=\"pi pi-check\"\r\n            (click)=\"saveUser()\"></p-button>\r\n    </ng-template>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { UsersApiService } from 'src/app/users/services/users-api'; // Adjust path if needed\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { FluidModule } from \"primeng/fluid\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    ToastModule,\r\n    FluidModule\r\n  ],\r\n  providers: [MessageService],\r\n  templateUrl: './change-password.html',\r\n  styleUrl: './change-password.scss'\r\n})\r\nexport class ChangePassword implements OnInit {\r\n  current_password!: string;\r\n  new_password!: string;\r\n  new_password_confirmation!: string;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private usersService: UsersApiService,\r\n    private messageService: MessageService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // No specific initialization needed for this component\r\n  }\r\n\r\n  changePassword() {\r\n    this.submitted = true;\r\n\r\n    if (this.current_password && this.new_password && this.new_password_confirmation) {\r\n      if (this.new_password !== this.new_password_confirmation) {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'New password and confirmation do not match.' });\r\n        return;\r\n      }\r\n\r\n      this.usersService.changePassword(this.current_password, this.new_password).subscribe({\r\n        next: () => {\r\n          this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Password changed successfully.' });\r\n        },\r\n        error: (err) => {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Failed to change password.' });\r\n        }\r\n      });\r\n    } else {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Please fill all fields.' });\r\n    }\r\n    this.current_password = \"\";\r\n    this.new_password = \"\";\r\n    this.new_password_confirmation = \"\";\r\n\r\n  }\r\n}","<p-toast></p-toast>\r\n\r\n<p-fluid>\r\n    <div class=\"flex flex-col md:flex-row gap-8 justify-content-center align-items-center min-h-screen\">\r\n        <div class=\"md:w-1/2 mx-auto\">\r\n            <div class=\"card flex flex-col gap-4\">\r\n                <div class=\"font-semibold text-xl text-center\">Change Password</div>\r\n\r\n                <form (ngSubmit)=\"changePassword()\">\r\n                    <div class=\"flex flex-col gap-2\">\r\n                        <label for=\"current_password\">Current Password</label>\r\n                        <input pInputText id=\"current_password\" type=\"password\" class=\"w-full\" [(ngModel)]=\"current_password\" name=\"current_password\" required />\r\n                        @if (submitted && !current_password) {\r\n                        <small class=\"p-error\">Current password is required.</small>\r\n                        }\r\n                    </div>\r\n\r\n                    <div class=\"flex flex-col gap-2 mt-3\">\r\n                        <label for=\"new_password\">New Password</label>\r\n                        <input pInputText id=\"new_password\" type=\"password\" class=\"w-full\" [(ngModel)]=\"new_password\" name=\"new_password\" required />\r\n                        @if (submitted && !new_password) {\r\n                        <small class=\"p-error\">New password is required.</small>\r\n                        }\r\n                    </div>\r\n\r\n                    <div class=\"flex flex-col gap-2 mt-3\">\r\n                        <label for=\"new_password_confirmation\">Confirm New Password</label>\r\n                        <input pInputText id=\"new_password_confirmation\" type=\"password\" class=\"w-full\" [(ngModel)]=\"new_password_confirmation\" name=\"new_password_confirmation\" required />\r\n                        @if (submitted && !new_password_confirmation) {\r\n                        <small class=\"p-error\">Confirmation is required.</small>\r\n                        }\r\n                        @if (submitted && new_password && new_password_confirmation && new_password !== new_password_confirmation) {\r\n                        <small class=\"p-error\">Passwords do not match.</small>\r\n                        }\r\n                    </div>\r\n\r\n                    <button pButton pRipple label=\"Change Password\" icon=\"pi pi-check\" class=\"mt-3\"></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</p-fluid>","import { OrderWaiter } from '@/libs/models/order.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OrderWaiterApi {\r\n    private http = inject(HttpClient);\r\n    private readonly url = '/api/order-waiters';\r\n\r\n    getOrderWaiters(orderdetailid: number): Observable<OrderWaiter[]> {\r\n        return this.http.get<OrderWaiter[]>(this.url + \"/\" + orderdetailid);\r\n    }\r\n\r\n    createWaiterDetail(detail: OrderWaiter) {\r\n        return this.http.post<OrderWaiter>(this.url, detail);\r\n    }\r\n\r\n    updateWaiterDetail(id: number, detail: OrderWaiter) {\r\n        return this.http.put<OrderWaiter>(`${this.url}/${id}`, detail);\r\n    }\r\n\r\n    deleteWaiterDetail(id: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\r\n\r\n}\r\n","import { OrderDetail, OrderWaiter } from '@/libs/models/order.model';\r\nimport { UserModel } from '@/libs/models/user.model';\r\nimport { OrderWaiterApi } from '@/orders/services/order-waiter-api';\r\nimport { UsersApiService } from '@/users/services/users-api';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { SelectModule } from \"primeng/select\";\r\nimport { TableModule } from \"primeng/table\";\r\nimport { Button } from \"primeng/button\";\r\nimport { Common } from '@/libs/components/Common';\r\n\r\n@Component({\r\n  selector: 'app-waiters',\r\n  imports: [SelectModule, FormsModule, TableModule, Button],\r\n  templateUrl: './waiters.html',\r\n  styleUrl: './waiters.scss'\r\n})\r\nexport class Waiters extends Common {\r\n\r\n  addWaiter() {\r\n    this.orderWaiter = {} as OrderWaiter;\r\n    this.orderWaiter.order_det_id = this.orderdet.id;\r\n    this.orderWaiter.waiter_id = this.waiter.id!;\r\n    this.insertOrderWaiter(this.orderWaiter);\r\n  }\r\n  insertOrderWaiter(orderWaiter: OrderWaiter) {\r\n    this.orderswaitersservice.createWaiterDetail(orderWaiter).subscribe({\r\n      next: (response) => {\r\n        this.getOrderWaiters(this.orderdet.id!);\r\n      },\r\n      error: (error) => {\r\n        this.messageservice.add({ severity: 'error', summary: 'Error', detail: 'Error creating order waiter' });\r\n      }\r\n    });\r\n  }\r\n\r\n  @Input() orderdet!: OrderDetail;\r\n  @Input() view!: boolean;\r\n  waiters: UserModel[] = [];\r\n  orderswaiters: OrderWaiter[] = [];\r\n  waiter: UserModel = {} as UserModel;\r\n  orderWaiter!: OrderWaiter;\r\n\r\n  constructor(private userservice: UsersApiService,\r\n    private messageservice: MessageService,\r\n    private orderswaitersservice: OrderWaiterApi,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    super();\r\n  }\r\n  ngOnInit() {\r\n    this.getWaiters();\r\n    console.log(this.orderdet);\r\n    this.orderswaiters = this.orderdet.order_waiters;\r\n\r\n  }\r\n  getWaiters() {\r\n    this.userservice.getWaiters('').subscribe({\r\n      next: (response) => {\r\n        this.waiters = response;\r\n        console.log('waiters', this.waiters);\r\n      },\r\n      error: (error) => {\r\n        this.messageservice.add({ severity: 'error', summary: 'Error', detail: 'Error fetching waiters' });\r\n      }\r\n    });\r\n  }\r\n  getOrderWaiters(orderdetailid: number) {\r\n    this.orderswaitersservice.getOrderWaiters(orderdetailid).subscribe({\r\n      next: (response) => {\r\n        this.orderswaiters = response;\r\n      },\r\n      error: (error) => {\r\n        this.messageservice.add({ severity: 'error', summary: 'Error', detail: 'Error fetching order waiters' });\r\n      }\r\n    });\r\n  }\r\n  deleteWaiterapi(id: number) {\r\n    this.orderswaitersservice.deleteWaiterDetail(id).subscribe({\r\n      next: (response) => {\r\n        this.getOrderWaiters(this.orderdet.id!);\r\n      },\r\n      error: (error) => {\r\n        this.messageservice.add({ severity: 'error', summary: 'Error', detail: 'Error deleting order waiter' });\r\n      }\r\n    });\r\n  }\r\n  deleteWaiter(ordetwaiter: OrderWaiter) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want delete order Waiter ?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.deleteWaiterapi(ordetwaiter.id);\r\n      }\r\n    });\r\n\r\n  }\r\n}","<div class=\"h-full flex flex-col\">\r\n    @if(!this.view){\r\n    <div class=\"flex flex-col gap-6\">\r\n        <div>\r\n            <label for=\"type\" class=\"block font-bold mb-3\">Waiter</label>\r\n            <p-select [options]=\"waiters\"\r\n                [(ngModel)]=\"waiter\"\r\n                optionLabel=\"first_name\" [filter]=\"true\"\r\n                filterBy=\"username\"\r\n                [showClear]=\"true\" placeholder=\"Select a Waiter\" fluid\r\n                class=\"w-full md:w-56\">\r\n                <ng-template #selectedItem let-selectedOption>\r\n                    <div class=\"flex items-center gap-2\">\r\n                        <div>{{ selectedOption.username }}</div>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template let-waiter #item>\r\n                    <div class=\"flex items-center gap-2\">\r\n                        <div>{{ waiter.username }} {{ waiter.first_name }} {{\r\n                            waiter.last_name }}</div>\r\n                    </div>\r\n                </ng-template>\r\n            </p-select>\r\n        </div>\r\n        <p-button label=\"Add\" icon=\"pi pi-plus\" severity=\"secondary\"\r\n            (click)=\"addWaiter()\"></p-button>\r\n    </div>\r\n    }\r\n    <p-table #dt [value]=\"this.orderswaiters\" [paginator]=\"false\" [lazy]=\"true\"\r\n        [tableStyle]=\"{ 'min-width': '35rem' }\" [scrollable]=\"true\"\r\n        scrollHeight=\"flex\">\r\n\r\n        <ng-template #header>\r\n            <tr>\r\n                @if (!view){\r\n                <th style=\"min-width: 3rem\"> </th>\r\n                }\r\n                <th style=\"min-width: 2rem\">Waiter</th>\r\n                <th style=\"min-width: 2rem\">Comision</th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template #body let-orderwaiter>\r\n            <tr>\r\n                @if (!view && (this.getCurrentUser().type == 'IN_CHARGE' ||\r\n                this.getCurrentUser().type == 'ADMINISTRATOR')){\r\n                <td>\r\n                    <p-button icon=\"pi pi-times\" severity=\"danger\"\r\n                        (click)=\"deleteWaiter(orderwaiter)\"></p-button>\r\n                </td>\r\n                }\r\n                <td>{{orderwaiter.waiter.first_name}}\r\n                    {{orderwaiter.waiter.last_name}}</td>\r\n                <td>{{orderwaiter.comision}}</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>","import { OrderDetail } from '@/libs/models/order.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderDetailsApi {\r\n  private http = inject(HttpClient);\r\n  private readonly url = `/api/order-details`;\r\n\r\n  getProductTypes(): Observable<{ name: string, value: string }[]> {\r\n    return this.http.get<{ name: string, value: string }[]>(`${this.url}/types`);\r\n  }\r\n\r\n  getOrderDetails(orderId: number): Observable<OrderDetail[]> {\r\n    return this.http.get<OrderDetail[]>(this.url + \"/\" + orderId);\r\n  }\r\n\r\n  createDetail(detail: OrderDetail) {\r\n    return this.http.post<OrderDetail>(this.url, detail);\r\n  }\r\n\r\n  updateDetail(id: number, detail:OrderDetail) {\r\n    return this.http.put<OrderDetail>(`${this.url}/${id}`, detail);\r\n  }\r\n\r\n  deleteDetail(id: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\r\n}\r\n","import { Common } from '@/libs/components/Common';\r\nimport { Order, OrderDetail } from '@/libs/models/order.model';\r\nimport { OrderDetailsApi } from '@/orders/services/order-details-api';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { TableModule } from \"primeng/table\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { DialogModule } from \"primeng/dialog\";\r\nimport { SelectModule } from 'primeng/select';\r\nimport { ProductService } from '@/pages/service/product.service';\r\nimport { ProductsApiService } from '@/products/services/products-api';\r\nimport { PaginatedResponse } from '@/libs/models/paginated-response.model';\r\nimport { ProductsModel } from '@/libs/models/products-model';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { Waiters } from \"../waiters/waiters\";\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  imports: [TableModule, FormsModule, ButtonModule, DialogModule, SelectModule, InputNumberModule, InputTextModule, Waiters],\r\n  templateUrl: './details.html',\r\n  styleUrl: './details.scss'\r\n})\r\nexport class Details extends Common {\r\n\r\n  viewWaiters(orderdetail: OrderDetail) {\r\n    this.currentDetail = orderdetail;\r\n    this.orderWaiDialog = true;\r\n  }\r\n  editWaiters(orderdetail: OrderDetail) {\r\n    this.currentDetail = orderdetail;\r\n    this.orderWaiDialog = true;\r\n  }\r\n  orderWaiDialog: boolean = false;\r\n  editDetail(orderdetail: OrderDetail) {\r\n    this.currentDetail = {} as OrderDetail;\r\n    this.orderDetDialog = true;\r\n    this.product = orderdetail.product;\r\n    this.currentDetail.order_id = orderdetail.order_id;\r\n    this.currentDetail.product_id = orderdetail.product_id;\r\n    this.currentDetail.quantity = orderdetail.quantity;\r\n    this.currentDetail.type = orderdetail.type;\r\n    this.currentDetail.observation = orderdetail.observation;\r\n    this.currentid = orderdetail.id;\r\n    this.typeoption = \"edit\";\r\n  }\r\n\r\n  orderDetDialog: boolean = false;\r\n  currentDetail!: OrderDetail;\r\n  types: { name: string, value: string }[] = [];\r\n  products!: PaginatedResponse<ProductsModel>;\r\n  product!: ProductsModel;\r\n  typeoption: string = \"\";\r\n  currentid!: number;\r\n  openNew() {\r\n    this.currentDetail = {} as OrderDetail;\r\n    this.orderDetDialog = true;\r\n    this.typeoption = \"new\";\r\n  }\r\n  details: OrderDetail[] = [];\r\n  @Input() order!: Order;\r\n  @Input() view!: boolean;\r\n  constructor(private detailservice: OrderDetailsApi,\r\n    private messageService: MessageService,\r\n    private productService: ProductsApiService,\r\n    private confirmationService: ConfirmationService\r\n  ) {\r\n    super();\r\n  }\r\n  saveDetail() {\r\n    this.currentDetail.product_id = this.product.id;\r\n    this.currentDetail.order_id = this.order.id;\r\n    if (this.typeoption === \"new\") {\r\n      this.detailservice.createDetail(this.currentDetail).subscribe({\r\n        next: (response) => {\r\n          this.getOrderDetails();\r\n          this.hideDialog();\r\n        },\r\n        error: (error) => {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error creating order detail' });\r\n        }\r\n      });\r\n    } else {\r\n      this.detailservice.updateDetail(this.currentid, this.currentDetail).subscribe({\r\n        next: (response) => {\r\n          this.getOrderDetails();\r\n          this.hideDialog();\r\n        },\r\n        error: (error) => {\r\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error updating order detail' });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  hideDialog() {\r\n    this.orderDetDialog = false;\r\n  }\r\n  hideDialogw() {\r\n    this.orderWaiDialog = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.getOrderDetails();\r\n    this.getDetailType();\r\n    this.getProducts();\r\n    this.details = this.order.details;\r\n  }\r\n  getOrderDetails() {\r\n    this.detailservice.getOrderDetails(this.order.id).subscribe({\r\n      next: (response) => {\r\n        this.details = response;\r\n        console.log(this.details);\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching order details' });\r\n      }\r\n    });\r\n  }\r\n\r\n  totalpay(): number {\r\n    let total = 0;\r\n    for (const detail of this.details) {\r\n      total += parseFloat(detail.price || '0');\r\n    }\r\n    return total;\r\n  }\r\n\r\n  getDetailType() {\r\n    this.detailservice.getProductTypes().subscribe({\r\n      next: (response) => {\r\n        this.types = response;\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching details types' });\r\n      }\r\n    });\r\n  }\r\n  getProducts() {\r\n    this.productService.getProducts(true, '', 1, 99999).subscribe({\r\n      next: (response) => {\r\n        this.products = response;\r\n        console.log(this.products);\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching products' });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDetail(orderDetail: OrderDetail) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want delete order detail ?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n\r\n        this.detailservice.deleteDetail(orderDetail.id).subscribe({\r\n          next: (response) => {\r\n            this.getOrderDetails();\r\n          },\r\n          error: (error) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error deleting order detail' });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onhideDialogw() {\r\n    this.getOrderDetails();\r\n  }\r\n  onhideDialog() {\r\n    this.getOrderDetails();\r\n  }\r\n}","<p-table #dt [value]=\"details\" [paginator]=\"false\" [lazy]=\"true\"\r\n    [tableStyle]=\"{ 'min-width': '35rem' }\">\r\n    <ng-template #caption>\r\n        @if(!view){\r\n        <div class=\"flex items-center justify-between gap-2\">\r\n            <h5 class=\"m-0\">Productos</h5>\r\n            @if(order.status === 'OPEN' && (this.getCurrentUser().id ===\r\n            order.waiter.id )){\r\n            <p-button label=\"New\" icon=\"pi pi-plus\" severity=\"secondary\"\r\n                class=\"mr-2\" (onClick)=\"openNew()\" />\r\n            }\r\n        </div>\r\n        }\r\n    </ng-template>\r\n\r\n    <ng-template #header>\r\n        <tr>\r\n\r\n            <th style=\"min-width: 3rem\"> </th>\r\n            <th style=\"min-width: 2rem\">Producto</th>\r\n            <th style=\"min-width: 2rem\">Cantidad</th>\r\n            <th style=\"min-width: 2rem\">Precio</th>\r\n            <th style=\"min-width: 3rem\">Tipo</th>\r\n            <th style=\"min-width: 3rem\">Observación</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-orderdetail>\r\n        <tr>\r\n\r\n            <td>\r\n                @if(order.status === 'OPEN' && (this.getCurrentUser().type ===\r\n                'IN_CHARGE' ||this.getCurrentUser().type === 'ADMINISTRATOR') &&\r\n                !view){\r\n                <p-button icon=\"pi pi-pencil\" severity=\"info\" class=\"mr-2\"\r\n                    (click)=\"editDetail(orderdetail)\"\r\n                    pTooltip=\"Edit detail\"></p-button>\r\n                <p-button icon=\"pi pi-times\" severity=\"danger\" class=\"mr-2\"\r\n                    (click)=\"deleteDetail(orderdetail)\"\r\n                    pTooltip=\"Delete detail\"></p-button>\r\n                }\r\n                @if (!view && orderdetail.type === 'WAITER'){\r\n                <p-button icon=\"pi pi-user\" severity=\"help\" class=\"mr-2\"\r\n                    (click)=\"editWaiters(orderdetail)\"\r\n                    pTooltip=\"Waiters\"></p-button>\r\n                }\r\n                @if (view && orderdetail.type === 'WAITER'){\r\n                <p-button icon=\"pi pi-user\" severity=\"success\" class=\"mr-2\"\r\n                    (click)=\"viewWaiters(orderdetail)\"\r\n                    pTooltip=\"view Waiters\"></p-button>\r\n                }\r\n\r\n            </td>\r\n\r\n            <td>{{orderdetail.product.description}}\r\n                {{orderdetail.type==='CLIENT'?\r\n                orderdetail.product.client_price:orderdetail.type==='WAITER'?orderdetail.product.waiter_price:orderdetail.product.animation_price}}\r\n                Bs.\r\n            </td>\r\n            <td>{{orderdetail.quantity}}</td>\r\n            <td>\r\n                <div class=\"text-right\">\r\n                    {{orderdetail.price}}\r\n                </div>\r\n            </td>\r\n            <td>{{orderdetail.type}}</td>\r\n            <td>{{orderdetail.observation}}</td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #footer>\r\n        <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td>\r\n                Total\r\n            </td>\r\n            <td>\r\n                <div class=\"text-right\">\r\n                    {{this.totalpay()}}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n<p-dialog [(visible)]=\"orderDetDialog\" [breakpoints]=\"{'768px': '100vw'}\"\r\n    [style]=\"{width: '60vw', height: '80vh'}\" header=\"Productos\"\r\n    (onHide)=\"onhideDialog()\"\r\n    closable=\"false\" modal=\"true\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div class=\"flex flex-col gap-6\">\r\n            <div>\r\n                <label for=\"type\" class=\"block font-bold mb-3\">Type</label>\r\n                <p-select id=\"type\" [options]=\"types\"\r\n                    [(ngModel)]=\"currentDetail.type\" optionLabel=\"name\"\r\n                    optionValue=\"value\" placeholder=\"Select a Type\"\r\n                    fluid></p-select>\r\n            </div>\r\n            <div>\r\n                <label for=\"type\" class=\"block font-bold mb-3\">Product</label>\r\n                <p-select [options]=\"products.data\"\r\n                    [(ngModel)]=\"product\"\r\n                    optionLabel=\"description\" [filter]=\"true\"\r\n                    filterBy=\"description\"\r\n                    [showClear]=\"true\" placeholder=\"Select a Product\" fluid\r\n                    class=\"w-full md:w-56\">\r\n                    <ng-template #selectedItem let-selectedOption>\r\n                        <div class=\"flex items-center gap-2\">\r\n                            <div>{{ selectedOption.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template let-product #item>\r\n                        <div class=\"flex items-center gap-2\">\r\n                            <div>{{ product.description }}</div>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-select>\r\n            </div>\r\n            <div>\r\n                <label for=\"quantity\"\r\n                    class=\"block font-bold mb-3\">Quantity</label>\r\n                <p-inputnumber id=\"client_price\"\r\n                    [(ngModel)]=\"currentDetail.quantity\" mode=\"decimal\"\r\n                    fluid></p-inputnumber>\r\n            </div>\r\n            <div>\r\n                <label for=\"observation\"\r\n                    class=\"block font-bold mb-3\">Observation</label>\r\n                <input type=\"text\" pInputText\r\n                    [(ngModel)]=\"currentDetail.observation\" id=\"observation\"\r\n                    fluid />\r\n\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <p-button label=\"Cancel\" icon=\"pi pi-times\" severity=\"secondary\"\r\n            (click)=\"hideDialog()\"></p-button>\r\n        <p-button label=\"Save\" icon=\"pi pi-check\"\r\n            (click)=\"saveDetail()\"></p-button>\r\n    </ng-template>\r\n\r\n</p-dialog>\r\n<p-dialog [(visible)]=\"orderWaiDialog\" [breakpoints]=\"{'768px': '100vw'}\"\r\n    [style]=\"{width: '60vw', height: '80vh'}\" header=\"Waiters\"\r\n    (onHide)=\"onhideDialogw()\"\r\n    closable=\"false\" modal=\"true\" styleClass=\"flex flex-col\" [contentStyle]=\"{ 'flex-grow': '1' }\">\r\n    <ng-template pTemplate=\"content\">\r\n        <app-waiters [orderdet]=\"currentDetail\" [view]=\"view\"></app-waiters>\r\n    </ng-template>\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n        <p-button label=\"Close\" icon=\"pi pi-times\" severity=\"secondary\"\r\n            (click)=\"hideDialogw()\"></p-button>\r\n    </ng-template>\r\n\r\n</p-dialog>","import { WaitersCommissions } from '@/libs/models/waiters-commissions';\r\nimport { Component, Input } from '@angular/core';\r\nimport { TableModule } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'app-commisions',\r\n  imports: [TableModule],\r\n  templateUrl: './commisions.html',\r\n  styleUrl: './commisions.scss'\r\n})\r\nexport class Commisions {\r\n  @Input() lista!: WaitersCommissions[];\r\n  getProfitsTotal() {\r\n    let total = 0;\r\n    this.lista.forEach(element => {\r\n      total = total + element.price;\r\n    });\r\n    return total;\r\n  }\r\n}\r\n","<p-table #dt [value]=\"this.lista\" [paginator]=\"false\" [lazy]=\"true\"\r\n    [tableStyle]=\"{ 'min-width': '35rem' }\">\r\n\r\n    <ng-template #header>\r\n        <tr>\r\n            <th style=\"min-width: 2rem\">Waiter</th>\r\n            <th style=\"min-width: 2rem\">Profits</th>\r\n            <th style=\"min-width: 2rem\">Commission</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-commi>\r\n        <tr>\r\n\r\n            <td>{{commi.waiter.first_name}}\r\n                {{commi.waiter.last_name}}</td>\r\n            <td>\r\n                <div class=\"text-right\">\r\n                    {{commi.price}} </div>\r\n            </td>\r\n            <td>\r\n                <div class=\"text-right\">\r\n                    {{commi.waiter_comision}} </div>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #footer>\r\n        <tr>\r\n            <td></td>\r\n            <td>\r\n                <div class=\"text-right\">\r\n                    Total: {{this.getProfitsTotal() }}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n\r\n</p-table>>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginatedResponse } from '@/libs/models/paginated-response.model';\r\nimport { Order } from '@/libs/models/order.model';\r\nimport { WaitersCommissions } from '@/libs/models/waiters-commissions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersApiService {\r\n\r\n\r\n  private apiUrl = '/api/me/orders';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getOrders(\r\n    type?: string,\r\n    date_from?: string,\r\n    date_to?: string,\r\n    sort?: string,\r\n    page: number = 1,\r\n    lenPage: number = 15\r\n  ): Observable<PaginatedResponse<Order>> {\r\n    let params = new HttpParams()\r\n      .set('page', page.toString())\r\n      .set('lenPage', lenPage.toString());\r\n\r\n    if (date_from) {\r\n      params = params.set('date_from', date_from);\r\n    }\r\n    if (date_to) {\r\n      params = params.set('date_to', date_to);\r\n    }\r\n    if (sort) {\r\n      params = params.set('sort', sort);\r\n    }\r\n    if (type) {\r\n      params = params.set('status', type);\r\n    }\r\n\r\n    return this.http.get<PaginatedResponse<Order>>(this.apiUrl, { params });\r\n  }\r\n\r\n  getOrderTypes(): Observable<{ name: string, value: string }[]> {\r\n    return this.http.get<{ name: string, value: string }[]>('/api/orders/types');\r\n  }\r\n\r\n  // Creates a new order and returns it (expects backend to return created Order with id)\r\n  createOrder(): Observable<Order> {\r\n    return this.http.post<Order>('/api/orders', {});\r\n  }\r\n\r\n  closeOrder(orderId: number): Observable<Order> {\r\n    return this.http.patch<Order>(`/api/orders/${orderId}/status/CLOSED`, {});\r\n  }\r\n  paidOrder(orderId: number): Observable<Order> {\r\n    return this.http.patch<Order>(`/api/orders/${orderId}/status/PAID`, {});\r\n  }\r\n  voidedOrder(orderId: number): Observable<Order> {\r\n    return this.http.patch<Order>(`/api/orders/${orderId}/status/VOIDED`, {});\r\n  }\r\n  moveToCommissiong(): Observable<any> {\r\n    return this.http.put('/api/orders/move-to-commissiong', {});\r\n  }\r\n  moveToProcessed(): Observable<any> {\r\n    return this.http.put('/api/orders/move-to-processed', {});\r\n  }\r\n\r\n\r\n  getCommissions(\r\n    status?: string,\r\n    date_from?: string,\r\n    date_to?: string,\r\n    sort?: string,\r\n  ): Observable<WaitersCommissions[]> {\r\n    let params = new HttpParams();\r\n\r\n    if (date_from) {\r\n      params = params.set('date_from', date_from);\r\n    }\r\n    if (date_to) {\r\n      params = params.set('date_to', date_to);\r\n    }\r\n    if (sort) {\r\n      params = params.set('sort', sort);\r\n    }\r\n    if (status) {\r\n      params = params.set('status', status);\r\n    }\r\n    return this.http.get<WaitersCommissions[]>('/api/orders/waiter-commissions', { params });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { IconFieldModule } from 'primeng/iconfield';\r\nimport { InputIconModule } from 'primeng/inputicon';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { SelectModule } from 'primeng/select';\r\nimport { TableModule, TablePageEvent } from 'primeng/table';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { Pagination } from '@/libs/models/paginated-response.model';\r\nimport { Order } from '@/libs/models/order.model';\r\nimport { OrdersApiService } from '../services/orders-api';\r\nimport { SortIcon } from 'primeng/table';\r\nimport { DatePickerModule } from 'primeng/datepicker';\r\nimport { Common } from '@/libs/components/Common';\r\nimport { Details } from \"./details/details\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UsersApiService } from '@/users/services/users-api';\r\nimport { Commisions } from \"./commisions/commisions\";\r\nimport { WaitersCommissions } from '@/libs/models/waiters-commissions';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  imports: [\r\n    CommonModule, FormsModule,\r\n    ToolbarModule, ButtonModule, TableModule, IconFieldModule, InputIconModule,\r\n    SelectModule, InputTextModule, DialogModule, ToastModule, ConfirmDialogModule,\r\n    CurrencyPipe, TagModule, DatePipe, DatePickerModule, TooltipModule,\r\n    Details,\r\n    Commisions\r\n  ],\r\n  providers: [MessageService, ConfirmationService],\r\n  templateUrl: './orders.html',\r\n  styleUrl: './orders.scss'\r\n})\r\nexport class Orders extends Common implements OnInit {\r\n  commisionDialog: boolean = false;\r\n  logout() {\r\n    sessionStorage.removeItem('user');\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to log out?',\r\n      header: 'Confirm Logout',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.usersService.logout().subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Logged out successfully' });\r\n            this.router.navigate(['/auth/login']);\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Logout failed' });\r\n            this.router.navigate(['/auth/login']);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  viewOrder(order: Order) {\r\n    this.currentOrder = order;\r\n    this.orderDialog = true;\r\n    this.view = true;\r\n  }\r\n\r\n  orderDialog: boolean = false;\r\n  submitted: boolean = false;\r\n  currentOrder!: Order;\r\n  view: boolean = false;\r\n  typedisabled: boolean = false;\r\n\r\n  openNew() {\r\n    this.submitted = false;\r\n    this.view = false;\r\n    this.ordersService.createOrder().subscribe({\r\n      next: (order) => {\r\n        this.currentOrder = order;\r\n        this.orderDialog = true;\r\n        console.log(this.currentOrder);\r\n        this.getOrders();\r\n      },\r\n      error: () => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error creating order' });\r\n      }\r\n    });\r\n  }\r\n  lista: Order[] = [];\r\n  status: string = '';\r\n  type: string = '';\r\n  date_from: string = '';\r\n  date_to: string = '';\r\n  sort: string = 'desc';\r\n  page: number = 1;\r\n  perPage: number = 15;\r\n  pagination!: Pagination;\r\n  first: number = 0;\r\n  total!: number;\r\n  typeorders: string = '';\r\n  statusItems = [\r\n    { label: 'All', value: '' },\r\n    { label: 'Pending', value: 'pending' },\r\n    { label: 'Completed', value: 'completed' },\r\n    { label: 'Cancelled', value: 'cancelled' },\r\n  ];\r\n  commissions: WaitersCommissions[] = [];\r\n  orderTypes: { name: string, value: string }[] = [];\r\n\r\n  constructor(\r\n    private ordersService: OrdersApiService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private route: ActivatedRoute,\r\n    private usersService: UsersApiService,\r\n    private router: Router\r\n  ) {\r\n\r\n    super();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const tod = new Date();\r\n    const today = new Date(new Date().setDate(tod.getDate() + 1));\r\n    const twoWeeksAgo = new Date(new Date().setDate(today.getDate() - 20));\r\n    this.date_to = today.toISOString().substring(0, 10);\r\n    this.date_from = twoWeeksAgo.toISOString().substring(0, 10);\r\n    this.loadOrderTypes();\r\n    this.route.params.subscribe(params => {\r\n      this.typeorders = params['typeorders'];\r\n      this.loadOrderTypes();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  loadOrderTypes() {\r\n    this.ordersService.getOrderTypes().subscribe(types => {\r\n      this.orderTypes = types;\r\n      console.log(this.orderTypes);\r\n      if (this.orderTypes.length > 0 && (this.typeorders === 'me' || this.typeorders === 'history')) {\r\n        this.type = this.orderTypes[0].value;\r\n        this.typedisabled = false;\r\n      } else if (this.typeorders === 'commissiong') {\r\n        this.type = 'PAID';\r\n        this.typedisabled = true;\r\n      } else if (this.typeorders === 'processing') {\r\n        this.type = 'COMMISSIONING';\r\n        this.typedisabled = true;\r\n      } else if (this.typeorders === 'processed') {\r\n        this.type = 'PROCESSED';\r\n        this.typedisabled = true;\r\n      }\r\n\r\n      this.getOrders();\r\n    });\r\n  }\r\n\r\n  getOrders() {\r\n    const d_from = this.date_from ? new Date(this.date_from).toISOString().split('T')[0] : undefined;\r\n    const d_to = this.date_to ? new Date(this.date_to).toISOString().split('T')[0] : undefined;\r\n\r\n    this.ordersService.getOrders(this.type, d_from, d_to, this.sort, this.page, this.perPage).subscribe({\r\n      next: (response) => {\r\n        this.lista = response.data;\r\n        this.pagination = response.pagination;\r\n        this.total = this.pagination.total;\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching orders' });\r\n      }\r\n    });\r\n  }\r\n\r\n  onPageChange(event: TablePageEvent) {\r\n    this.first = event.first;\r\n    this.page = Math.floor(event.first / event.rows) + 1;\r\n    this.perPage = event.rows;\r\n    this.getOrders();\r\n  }\r\n\r\n  onSort(event: any) {\r\n    this.sort = event.field + ',' + (event.order === 1 ? 'asc' : 'desc');\r\n    this.getOrders();\r\n  }\r\n\r\n  getStatusSeverity(status: string): string {\r\n    switch (status.toUpperCase()) {\r\n      case 'PAID':\r\n      case 'PROCESSED':\r\n      case 'CLOSED':\r\n        return 'success';\r\n      case 'COMMISSIONING':\r\n        return 'warning';\r\n      case 'VOIDED':\r\n        return 'danger';\r\n      case 'OPEN':\r\n      default:\r\n        return 'info';\r\n    }\r\n  }\r\n\r\n  editOrder(order: Order) {\r\n    this.currentOrder = order;\r\n    this.orderDialog = true;\r\n    this.view = false;\r\n  }\r\n\r\n  hideDialog() {\r\n    this.orderDialog = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n  onHide() {\r\n    this.getOrders();\r\n  }\r\n\r\n  closeOrder(order: Order) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to close order ' + order.id + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.closeOrder(order.id).subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Order Closed', life: 3000 });\r\n            this.getOrders();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: err.message, life: 3000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  paidOrder(order: Order) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to paid order ' + order.id + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.paidOrder(order.id).subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Order mark paid', life: 3000 });\r\n            this.getOrders();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: err.message, life: 3000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  voidedOrder(order: Order) {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want to voided order ' + order.id + '?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.voidedOrder(order.id).subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Order mark paid', life: 3000 });\r\n            this.getOrders();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: err.message, life: 3000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  commisioning() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want commisioning orders?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.moveToCommissiong().subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Orders mark how to commissioning', life: 3000 });\r\n            this.getOrders();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: err.message, life: 3000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  processing() {\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure you want processing orders?',\r\n      header: 'Confirm',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordersService.moveToProcessed().subscribe({\r\n          next: () => {\r\n            this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Order mark how to processing', life: 3000 });\r\n            this.getOrders();\r\n          },\r\n          error: (err) => {\r\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: err.message, life: 3000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  commisions() {\r\n    const d_from = this.date_from ? new Date(this.date_from).toISOString().split('T')[0] : undefined;\r\n    const d_to = this.date_to ? new Date(this.date_to).toISOString().split('T')[0] : undefined;\r\n    this.ordersService.getCommissions(this.type, d_from, d_to, 'asc').subscribe({\r\n      next: (response) => {\r\n        this.commissions = response;\r\n        this.commisionDialog = true;\r\n      },\r\n      error: (error) => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error fetching commissions' });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p-toast></p-toast>\r\n<p-confirmdialog></p-confirmdialog>\r\n\r\n<p-toolbar>\r\n    <ng-template #start>\r\n        @if(this.typeorders==='me'){\r\n        <p-button label=\"New\" icon=\"pi pi-plus\" severity=\"secondary\"\r\n            class=\"mr-2\" (onClick)=\"openNew()\" />\r\n        }\r\n    </ng-template>\r\n\r\n    <ng-template #end>\r\n        <div class=\"flex items-center gap-2\">\r\n            <label for=\"date_from\" class=\"mr-1\">Desde:</label>\r\n            <p-datepicker [(ngModel)]=\"date_from\" (onSelect)=\"getOrders()\"\r\n                dateFormat=\"yy-mm-dd\" id=\"date_from\"\r\n                placeholder=\"Date From\"></p-datepicker>\r\n            <label for=\"date_to\" class=\"mr-1\">Hasta:</label>\r\n            <p-datepicker [(ngModel)]=\"date_to\" (onSelect)=\"getOrders()\"\r\n                dateFormat=\"yy-mm-dd\" placeholder=\"Date To\"\r\n                id=\"date_to\"></p-datepicker>\r\n        </div>\r\n    </ng-template>\r\n</p-toolbar>\r\n\r\n<p-table #dt [value]=\"lista\" [rows]=\"perPage\" [paginator]=\"true\" [lazy]=\"true\"\r\n    [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n    [rowHover]=\"true\" (onPage)=\"onPageChange($event)\" [totalRecords]=\"total\"\r\n    dataKey=\"id\" [(first)]=\"first\"\r\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} orders\"\r\n    [showCurrentPageReport]=\"true\">\r\n    <ng-template #caption>\r\n        <div class=\"flex items-center justify-between\">\r\n            <h5 class=\"m-0\">Manage Orders</h5>\r\n            <div class=\"flex items-center gap-2\">\r\n                @if (this.typeorders==='commissiong' ||\r\n                this.typeorders==='processing' ||\r\n                this.typeorders==='processed'){\r\n                <p-button icon=\"pi pi-eye\" severity=\"info\"\r\n                    (click)=\"commisions()\" label\r\n                    pTooltip=\"View commissions\"></p-button>\r\n                }\r\n                @if (this.typeorders==='commissiong'){\r\n                <p-button icon=\"pi pi-dollar\" severity=\"success\"\r\n                    label=\"Commisioning\"\r\n                    (click)=\"commisioning()\"\r\n                    pTooltip=\"Commisionning Orders\"></p-button>\r\n                }@else if (this.typeorders==='processing'){\r\n                <p-button icon=\"pi pi-wallet\" severity=\"success\"\r\n                    (click)=\"processing()\" label=\"Processing\"\r\n                    pTooltip=\"Processing Orders\"></p-button>\r\n                }\r\n                <p-select id=\"type\" [(ngModel)]=\"type\" [options]=\"orderTypes\"\r\n                    optionLabel=\"name\" optionValue=\"value\"\r\n                    [disabled]=\"typedisabled\"\r\n                    (onChange)=\"getOrders()\"\r\n                    placeholder=\"Select Type\"></p-select>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #header>\r\n        <tr>\r\n            <th style=\"min-width: 3rem\">Id </th>\r\n            <th style=\"min-width: 3rem\"></th>\r\n            <th style=\"min-width: 3rem\">Status </th>\r\n            <th style=\"min-width: 3rem\">Waiter Owner</th>\r\n            <th style=\"min-width: 3rem\">Date</th>\r\n            <th style=\"min-width: 5rem\">Final Price</th>\r\n            <th style=\"min-width: 5rem\">Waiter Comision</th>\r\n            <th style=\"min-width: 3rem\">Updated Date</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template #body let-order>\r\n        <tr>\r\n            <td>{{order.id}}</td>\r\n            <td>\r\n                @if (this.typeorders==='me'){\r\n                @if(order.status === 'OPEN' && (this.getCurrentUser().id ===\r\n                order.waiter.id || (this.getCurrentUser().type === 'IN_CHARGE'\r\n                || this.getCurrentUser().type === 'ADMINISTRATOR'))){\r\n                <p-button icon=\"pi pi-pencil\" severity=\"info\" class=\"mr-2\"\r\n                    (click)=\"editOrder(order)\" pTooltip=\"Edit Order\"></p-button>\r\n                }\r\n                @if(order.status === 'OPEN' && (this.getCurrentUser().id ===\r\n                order.waiter.id)){\r\n                <p-button icon=\"pi pi-times-circle\" severity=\"info\"\r\n                    (click)=\"closeOrder(order)\"\r\n                    pTooltip=\"Close Order\" class=\"mr-2\"></p-button>\r\n                }\r\n                @if(order.status === 'CLOSED' &&\r\n                (\r\n                this.getCurrentUser().type === 'IN_CHARGE' ||\r\n                this.getCurrentUser().type === 'ADMINISTRATOR')){\r\n                <p-button icon=\"pi pi-dollar\" severity=\"success\" class=\"mr-2\"\r\n                    (click)=\"paidOrder(order)\"\r\n                    pTooltip=\"Mark as Paid Order\"></p-button>\r\n                }\r\n\r\n                }\r\n                @if(\r\n                (order.status === 'CLOSED' || order.status === 'PAID' ||\r\n                order.status === 'COMISSIONED') &&\r\n                (this.getCurrentUser().type === 'IN_CHARGE' ||\r\n                this.getCurrentUser().type === 'ADMINISTRATOR')\r\n                ){\r\n                <p-button icon=\"pi pi-exclamation-triangle\" severity=\"danger\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"voidedOrder(order)\"\r\n                    pTooltip=\"Voided Order\"></p-button>\r\n                }\r\n\r\n                <p-button icon=\"pi pi-eye\" severity=\"success\"\r\n                    class=\"mr-2\"\r\n                    (click)=\"viewOrder(order)\"\r\n                    pTooltip=\"View Order\"></p-button>\r\n            </td>\r\n            <td>\r\n                <p-tag [value]=\"order.status\"\r\n                    [severity]=\"getStatusSeverity(order.status)\"></p-tag>\r\n            </td>\r\n\r\n            <td>{{order.waiter.first_name}} {{order.waiter.last_name}}</td>\r\n            <td>{{order.order_date | date:'yyyy-MM-dd'}}</td>\r\n            <td>{{order.price_final | currency:'USD'}}</td>\r\n            <td>{{order.waiter_comision ?? 0 | currency:'USD'}}</td>\r\n            <td>{{order.updated_at | date:'yyyy-MM-dd'}}</td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n<p-dialog [(visible)]=\"orderDialog\" [breakpoints]=\"{'768px': '100vw'}\"\r\n    [style]=\"{width: '90vw', height: '90vh'}\" (onHide)=\"onHide()\"\r\n    header=\"Order Details\" [modal]=\"true\">\r\n    <ng-template pTemplate=\"content\">\r\n        <div class=\"flex flex-row flex-wrap gap-4\">\r\n            <div>\r\n                <label class=\"block font-bold mb-1\">Order ID</label>\r\n                <div>{{ currentOrder.id }}</div>\r\n            </div>\r\n            <div>\r\n                <label class=\"block font-bold mb-1\">Status</label>\r\n                <p-tag [value]=\"currentOrder.status\"\r\n                    [severity]=\"getStatusSeverity(currentOrder.status || '')\"></p-tag>\r\n            </div>\r\n            <div>\r\n                <label class=\"block font-bold mb-1\">Waiter</label>\r\n                <div>{{ currentOrder.waiter.first_name }} {{\r\n                    currentOrder.waiter.last_name }}</div>\r\n            </div>\r\n            <div>\r\n                <label class=\"block font-bold mb-1\">Date</label>\r\n                <div>{{ currentOrder.order_date | date:'yyyy-MM-dd' }}</div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"mt-4\">\r\n            <app-details [order]=\"currentOrder\" [view]=\"view\"></app-details>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n        <p-button label=\"Cerrar Session\" icon=\"pi pi-times\" severity=\"danger\"\r\n            (click)=\"logout()\"></p-button>\r\n        <p-button label=\"Close\" icon=\"pi pi-times\" severity=\"secondary\"\r\n            (click)=\"hideDialog()\"></p-button>\r\n\r\n    </ng-template>\r\n</p-dialog>\r\n<p-dialog [(visible)]=\"commisionDialog\" [breakpoints]=\"{'768px': '100vw'}\"\r\n    [style]=\"{width: '90vw', height: '90vh'}\" (onHide)=\"onHide()\"\r\n    header=\"commissions\" [modal]=\"true\">\r\n    <app-commisions [lista]=\"this.commissions\"></app-commisions>\r\n</p-dialog>","import { Routes } from '@angular/router';\r\nimport { AppLayout } from './app/layout/component/app.layout';\r\nimport { Dashboard } from './app/pages/dashboard/dashboard';\r\nimport { Documentation } from './app/pages/documentation/documentation';\r\nimport { Landing } from './app/pages/landing/landing';\r\nimport { Notfound } from './app/pages/notfound/notfound';\r\nimport { Products } from '@/products/component/products';\r\nimport { Users } from './app/users/component/users';\r\nimport { ChangePassword } from './app/change-password/component/change-password';\r\nimport { Orders } from './app/orders/component/orders';\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AppLayout,\r\n        children: [\r\n            { path: '', component: Dashboard },\r\n            { path: 'uikit', loadChildren: () => import('./app/pages/uikit/uikit.routes') },\r\n            { path: 'documentation', component: Documentation },\r\n            { path: 'pages', loadChildren: () => import('./app/pages/pages.routes') },\r\n            { path: 'products', component: Products },\r\n            { path: 'users', component: Users },\r\n            { path: 'orders/:typeorders', component: Orders },\r\n            { path: 'change-password', component: ChangePassword }\r\n        ]\r\n    },\r\n    { path: 'notfound', component: Notfound },\r\n    { path: 'auth', loadChildren: () => import('./app/pages/auth/auth.routes') },\r\n    { path: '**', redirectTo: '/notfound' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CookieApiService {\r\n\r\n    private apiUrl = '/sanctum/csrf-cookie';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    csrf(): Observable<any> {\r\n        return this.http.get(this.apiUrl, { observe: 'response', responseType: 'text' });\r\n    }\r\n}","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { CookieApiService } from '../apis/csrf-cookie-api';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n/**\r\n * Lee una cookie específica del navegador.\r\n * @param name El nombre de la cookie (ej. 'XSRF-TOKEN')\r\n * @returns El valor de la cookie o null si no se encuentra.\r\n */\r\nfunction getCookie(name: string): string | null {\r\n  const nameLenPlus = (name.length + 1);\r\n  const cookieValue = document.cookie\r\n    .split(';')\r\n    .map(c => c.trim())\r\n    .filter(cookie => cookie.substring(0, nameLenPlus) === `${name}=`)\r\n    .map(cookie => decodeURIComponent(cookie.substring(nameLenPlus)))[0];\r\n  return cookieValue || null;\r\n}\r\n\r\nexport const headersRequestInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const csrfService = inject(CookieApiService);\r\n\r\n  // Para peticiones que no modifican datos (GET, HEAD), no necesitamos el token.\r\n  // Simplemente dejamos pasar la petición original.\r\n  if (req.method === 'GET' || req.method === 'HEAD') {\r\n    return next(req);\r\n  }\r\n\r\n  // Para POST, PUT, DELETE, etc., primero obtenemos el token CSRF.\r\n  // csrfService.csrf() devuelve un Observable. Usamos .pipe() para encadenar operaciones.\r\n  return csrfService.csrf().pipe(\r\n    // switchMap \"espera\" a que csrfService.csrf() se complete.\r\n    // Luego, toma la respuesta (que contiene el token) y la usa para\r\n    // crear y devolver un nuevo Observable.\r\n    switchMap(response => {\r\n      // creo una variable y guardo ahi la cookie no el header COOOKIE\r\n      const token = getCookie('XSRF-TOKEN');\r\n      // decodifico el token\r\n      const decodedToken = decodeURIComponent(token || '');\r\n      // Clonamos la petición original y añadimos la cabecera con el token.\r\n      const modifiedReq = req.clone({\r\n        setHeaders: {\r\n          'X-XSRF-TOKEN': decodedToken\r\n        }\r\n      });\r\n      // Pasamos la petición modificada al siguiente interceptor o al backend.\r\n      return next(modifiedReq);\r\n    })\r\n  );\r\n};","import { provideHttpClient, withFetch, withInterceptors } from '@angular/common/http';\r\nimport { ApplicationConfig } from '@angular/core';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport { provideRouter, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling } from '@angular/router';\r\nimport Aura from '@primeuix/themes/aura';\r\nimport { providePrimeNG } from 'primeng/config';\r\nimport { appRoutes } from './app.routes';\r\nimport { headersRequestInterceptor } from './app/libs/interceptors/HeadersRequest';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n    providers: [\r\n        provideRouter(appRoutes, withInMemoryScrolling({ anchorScrolling: 'enabled', scrollPositionRestoration: 'enabled' }), withEnabledBlockingInitialNavigation(), withHashLocation()),\r\n        provideHttpClient(withFetch(), withInterceptors([headersRequestInterceptor])),\r\n        provideAnimationsAsync(),\r\n        providePrimeNG({ theme: { preset: Aura, options: { darkModeSelector: '.app-dark' } } })\r\n    ]\r\n};\r\n\r\n","import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    standalone: true,\r\n    imports: [RouterModule],\r\n    template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent {}\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app.config';\r\nimport { AppComponent } from './app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));\r\n"],"mappings":"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","names":["style","state","_c1","_c0","_c0","_c1","_c0","_c1","_c0","_c0","_c1","_c0","_c0","_c1","_c2"],"x_google_ignoreList":[0]}