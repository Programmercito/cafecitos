{"version":3,"sources":["src/app/libs/components/logo/logo.ts","src/app/libs/components/logo/logo.html","node_modules/primeng/fesm2022/primeng-styleclass.mjs","src/app/layout/component/app.configurator.ts","src/app/layout/component/app.floatingconfigurator.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logo',\r\n  imports: [],\r\n  templateUrl: './logo.html',\r\n  styleUrl: './logo.scss'\r\n})\r\nexport class Logo {\r\n\r\n}\r\n"," <svg width=\"60px\" height=\"60px\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\r\n        d=\"M3 4C3 2.89543 3.89543 2 5 2H17C18.1046 2 19 2.89543 19 4V5.09005C19.3888 5.15136 19.8652 5.25646 20.3511 5.43867C20.9435 5.66081 21.6037 6.01768 22.1224 6.60126C22.6595 7.20549 23 8.00415 23 9C23 9.99585 22.6595 10.7945 22.1224 11.3987C21.6037 11.9823 20.9435 12.3392 20.3511 12.5613C19.8312 12.7563 19.3222 12.863 18.9197 12.9222L18.9186 12.9296C18.8395 13.4569 18.6795 14.1769 18.3494 14.9104C18.0188 15.6451 17.5028 16.4253 16.6968 17.0223C15.8791 17.628 14.8231 18 13.5 18H8.5C7.17691 18 6.12087 17.628 5.30321 17.0223C4.49723 16.4253 3.9812 15.6451 3.65058 14.9104C3.24764 14.015 3.00268 12.9895 3 12.002L3 4ZM19 10.8763V7.12365C19.2094 7.16883 19.4312 7.22971 19.6489 7.31133C20.0565 7.46419 20.3963 7.66982 20.6276 7.92999C20.8405 8.16952 21 8.49585 21 9C21 9.50415 20.8405 9.83049 20.6276 10.07C20.3963 10.3302 20.0565 10.5358 19.6489 10.6887C19.4312 10.7703 19.2094 10.8312 19 10.8763ZM5 11.9973C5.00914 12.7072 5.18467 13.4457 5.47442 14.0896C5.7063 14.6049 6.03403 15.0747 6.49366 15.4152C6.94163 15.747 7.57309 16 8.5 16H13.5C14.4269 16 15.0584 15.747 15.5063 15.4152C15.966 15.0747 16.2937 14.6049 16.5256 14.0896C16.8136 13.4496 16.9975 12.7047 17 11.9974L17 4H5V11.9973Z\"\r\n        fill=\"var(--primary-color)\" />\r\n    <path\r\n        d=\"M23 21C23 20.4477 22.5523 20 22 20H2C1.44772 20 1 20.4477 1 21C1 21.5523 1.44772 22 2 22H22C22.5523 22 23 21.5523 23 21Z\"\r\n        fill=\"var(--primary-color)\" />\r\n</svg>","import * as i0 from '@angular/core';\nimport { booleanAttribute, HostListener, Input, Directive, NgModule } from '@angular/core';\nimport { getTargetElement, hasClass, removeClass, addClass, isElement } from '@primeuix/utils';\n\n/**\n * StyleClass manages css classes declaratively to during enter/leave animations or just to toggle classes on an element.\n * @group Components\n */\nclass StyleClass {\n  el;\n  renderer;\n  zone;\n  constructor(el, renderer, zone) {\n    this.el = el;\n    this.renderer = renderer;\n    this.zone = zone;\n  }\n  /**\n   * Selector to define the target element. Available selectors are '@next', '@prev', '@parent' and '@grandparent'.\n   * @group Props\n   */\n  selector;\n  /**\n   * Style class to add when item begins to get displayed.\n   * @group Props\n   */\n  enterFromClass;\n  /**\n   * Style class to add during enter animation.\n   * @group Props\n   */\n  enterActiveClass;\n  /**\n   * Style class to add when item begins to get displayed.\n   * @group Props\n   */\n  enterToClass;\n  /**\n   * Style class to add when item begins to get hidden.\n   * @group Props\n   */\n  leaveFromClass;\n  /**\n   * Style class to add during leave animation.\n   * @group Props\n   */\n  leaveActiveClass;\n  /**\n   * Style class to add when leave animation is completed.\n   * @group Props\n   */\n  leaveToClass;\n  /**\n   * Whether to trigger leave animation when outside of the element is clicked.\n   * @group Props\n   */\n  hideOnOutsideClick;\n  /**\n   * Adds or removes a class when no enter-leave animation is required.\n   * @group Props\n   */\n  toggleClass;\n  /**\n   * Whether to trigger leave animation when escape key pressed.\n   * @group Props\n   */\n  hideOnEscape;\n  /**\n   * Whether to trigger leave animation when the target element resized.\n   * @group Props\n   */\n  hideOnResize;\n  /**\n   * Target element to listen resize. Valid values are \"window\", \"document\" or target element selector.\n   * @group Props\n   */\n  resizeSelector;\n  eventListener;\n  documentClickListener;\n  documentKeydownListener;\n  windowResizeListener;\n  resizeObserver;\n  target;\n  enterListener;\n  leaveListener;\n  animating;\n  _enterClass;\n  _leaveClass;\n  _resizeTarget;\n  clickListener() {\n    this.target ||= getTargetElement(this.selector, this.el.nativeElement);\n    if (this.toggleClass) {\n      this.toggle();\n    } else {\n      if (this.target?.offsetParent === null) this.enter();else this.leave();\n    }\n  }\n  toggle() {\n    if (hasClass(this.target, this.toggleClass)) removeClass(this.target, this.toggleClass);else addClass(this.target, this.toggleClass);\n  }\n  enter() {\n    if (this.enterActiveClass) {\n      if (!this.animating) {\n        this.animating = true;\n        if (this.enterActiveClass.includes('slidedown')) {\n          this.target.style.height = '0px';\n          removeClass(this.target, this.enterFromClass || 'hidden');\n          this.target.style.maxHeight = this.target.scrollHeight + 'px';\n          addClass(this.target, this.enterFromClass || 'hidden');\n          this.target.style.height = '';\n        }\n        addClass(this.target, this.enterActiveClass);\n        if (this.enterFromClass) {\n          removeClass(this.target, this.enterFromClass);\n        }\n        this.enterListener = this.renderer.listen(this.target, 'animationend', () => {\n          removeClass(this.target, this.enterActiveClass);\n          if (this.enterToClass) {\n            addClass(this.target, this.enterToClass);\n          }\n          this.enterListener && this.enterListener();\n          if (this.enterActiveClass.includes('slidedown')) {\n            this.target.style.maxHeight = '';\n          }\n          this.animating = false;\n        });\n      }\n    } else {\n      if (this.enterFromClass) {\n        removeClass(this.target, this.enterFromClass);\n      }\n      if (this.enterToClass) {\n        addClass(this.target, this.enterToClass);\n      }\n    }\n    if (this.hideOnOutsideClick) {\n      this.bindDocumentClickListener();\n    }\n    if (this.hideOnEscape) {\n      this.bindDocumentKeydownListener();\n    }\n    if (this.hideOnResize) {\n      this.bindResizeListener();\n    }\n  }\n  leave() {\n    if (this.leaveActiveClass) {\n      if (!this.animating) {\n        this.animating = true;\n        addClass(this.target, this.leaveActiveClass);\n        if (this.leaveFromClass) {\n          removeClass(this.target, this.leaveFromClass);\n        }\n        this.leaveListener = this.renderer.listen(this.target, 'animationend', () => {\n          removeClass(this.target, this.leaveActiveClass);\n          if (this.leaveToClass) {\n            addClass(this.target, this.leaveToClass);\n          }\n          this.leaveListener && this.leaveListener();\n          this.animating = false;\n        });\n      }\n    } else {\n      if (this.leaveFromClass) {\n        removeClass(this.target, this.leaveFromClass);\n      }\n      if (this.leaveToClass) {\n        addClass(this.target, this.leaveToClass);\n      }\n    }\n    if (this.hideOnOutsideClick) {\n      this.unbindDocumentClickListener();\n    }\n    if (this.hideOnEscape) {\n      this.unbindDocumentKeydownListener();\n    }\n    if (this.hideOnResize) {\n      this.unbindResizeListener();\n    }\n  }\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      this.documentClickListener = this.renderer.listen(this.el.nativeElement.ownerDocument, 'click', event => {\n        if (!this.isVisible() || getComputedStyle(this.target).getPropertyValue('position') === 'static') this.unbindDocumentClickListener();else if (this.isOutsideClick(event)) this.leave();\n      });\n    }\n  }\n  bindDocumentKeydownListener() {\n    if (!this.documentKeydownListener) {\n      this.zone.runOutsideAngular(() => {\n        this.documentKeydownListener = this.renderer.listen(this.el.nativeElement.ownerDocument, 'keydown', event => {\n          const {\n            key,\n            keyCode,\n            which,\n            type\n          } = event;\n          if (!this.isVisible() || getComputedStyle(this.target).getPropertyValue('position') === 'static') this.unbindDocumentKeydownListener();\n          if (this.isVisible() && key === 'Escape' && keyCode === 27 && which === 27) this.leave();\n        });\n      });\n    }\n  }\n  isVisible() {\n    return this.target.offsetParent !== null;\n  }\n  isOutsideClick(event) {\n    return !this.el.nativeElement.isSameNode(event.target) && !this.el.nativeElement.contains(event.target) && !this.target.contains(event.target);\n  }\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n  unbindDocumentKeydownListener() {\n    if (this.documentKeydownListener) {\n      this.documentKeydownListener();\n      this.documentKeydownListener = null;\n    }\n  }\n  bindResizeListener() {\n    this._resizeTarget = getTargetElement(this.resizeSelector);\n    if (isElement(this._resizeTarget)) {\n      this.bindElementResizeListener();\n    } else {\n      this.bindWindowResizeListener();\n    }\n  }\n  unbindResizeListener() {\n    this.unbindWindowResizeListener();\n    this.unbindElementResizeListener();\n  }\n  bindWindowResizeListener() {\n    if (!this.windowResizeListener) {\n      this.zone.runOutsideAngular(() => {\n        this.windowResizeListener = this.renderer.listen(window, 'resize', () => {\n          if (!this.isVisible()) {\n            this.unbindWindowResizeListener();\n          } else {\n            this.leave();\n          }\n        });\n      });\n    }\n  }\n  unbindWindowResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n      this.windowResizeListener = null;\n    }\n  }\n  bindElementResizeListener() {\n    if (!this.resizeObserver && this._resizeTarget) {\n      let isFirstResize = true;\n      this.resizeObserver = new ResizeObserver(() => {\n        if (isFirstResize) {\n          isFirstResize = false;\n          return;\n        }\n        if (this.isVisible()) {\n          this.leave();\n        }\n      });\n      this.resizeObserver.observe(this._resizeTarget);\n    }\n  }\n  unbindElementResizeListener() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = undefined;\n    }\n  }\n  ngOnDestroy() {\n    this.target = null;\n    this._resizeTarget = null;\n    if (this.eventListener) {\n      this.eventListener();\n    }\n    this.unbindDocumentClickListener();\n    this.unbindDocumentKeydownListener();\n    this.unbindResizeListener();\n  }\n  static ɵfac = function StyleClass_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || StyleClass)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: StyleClass,\n    selectors: [[\"\", \"pStyleClass\", \"\"]],\n    hostBindings: function StyleClass_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function StyleClass_click_HostBindingHandler($event) {\n          return ctx.clickListener($event);\n        });\n      }\n    },\n    inputs: {\n      selector: [0, \"pStyleClass\", \"selector\"],\n      enterFromClass: \"enterFromClass\",\n      enterActiveClass: \"enterActiveClass\",\n      enterToClass: \"enterToClass\",\n      leaveFromClass: \"leaveFromClass\",\n      leaveActiveClass: \"leaveActiveClass\",\n      leaveToClass: \"leaveToClass\",\n      hideOnOutsideClick: [2, \"hideOnOutsideClick\", \"hideOnOutsideClick\", booleanAttribute],\n      toggleClass: \"toggleClass\",\n      hideOnEscape: [2, \"hideOnEscape\", \"hideOnEscape\", booleanAttribute],\n      hideOnResize: [2, \"hideOnResize\", \"hideOnResize\", booleanAttribute],\n      resizeSelector: \"resizeSelector\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleClass, [{\n    type: Directive,\n    args: [{\n      selector: '[pStyleClass]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.NgZone\n  }], {\n    selector: [{\n      type: Input,\n      args: ['pStyleClass']\n    }],\n    enterFromClass: [{\n      type: Input\n    }],\n    enterActiveClass: [{\n      type: Input\n    }],\n    enterToClass: [{\n      type: Input\n    }],\n    leaveFromClass: [{\n      type: Input\n    }],\n    leaveActiveClass: [{\n      type: Input\n    }],\n    leaveToClass: [{\n      type: Input\n    }],\n    hideOnOutsideClick: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    toggleClass: [{\n      type: Input\n    }],\n    hideOnEscape: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideOnResize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    resizeSelector: [{\n      type: Input\n    }],\n    clickListener: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\nclass StyleClassModule {\n  static ɵfac = function StyleClassModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || StyleClassModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StyleClassModule,\n    imports: [StyleClass],\n    exports: [StyleClass]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleClassModule, [{\n    type: NgModule,\n    args: [{\n      imports: [StyleClass],\n      exports: [StyleClass]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StyleClass, StyleClassModule };\n","import { CommonModule, isPlatformBrowser } from '@angular/common';\r\nimport { Component, computed, inject, PLATFORM_ID, signal } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { $t, updatePreset, updateSurfacePalette } from '@primeuix/themes';\r\nimport Aura from '@primeuix/themes/aura';\r\nimport Lara from '@primeuix/themes/lara';\r\nimport Nora from '@primeuix/themes/nora';\r\nimport { PrimeNG } from 'primeng/config';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { LayoutService } from '../service/layout.service';\r\n\r\nconst presets = {\r\n    Aura,\r\n    Lara,\r\n    Nora\r\n} as const;\r\n\r\ndeclare type KeyOfType<T> = keyof T extends infer U ? U : never;\r\n\r\ndeclare type SurfacesType = {\r\n    name?: string;\r\n    palette?: {\r\n        0?: string;\r\n        50?: string;\r\n        100?: string;\r\n        200?: string;\r\n        300?: string;\r\n        400?: string;\r\n        500?: string;\r\n        600?: string;\r\n        700?: string;\r\n        800?: string;\r\n        900?: string;\r\n        950?: string;\r\n    };\r\n};\r\n\r\n@Component({\r\n    selector: 'app-configurator',\r\n    standalone: true,\r\n    imports: [CommonModule, FormsModule, SelectButtonModule],\r\n    template: `\r\n        <div class=\"flex flex-col gap-4\">\r\n            <div>\r\n                <span class=\"text-sm text-muted-color font-semibold\">Primary</span>\r\n                <div class=\"pt-2 flex gap-2 flex-wrap justify-start\">\r\n                    @for (primaryColor of primaryColors(); track primaryColor.name) {\r\n                        <button\r\n                            type=\"button\"\r\n                            [title]=\"primaryColor.name\"\r\n                            (click)=\"updateColors($event, 'primary', primaryColor)\"\r\n                            [ngClass]=\"{\r\n                                    'outline outline-primary': primaryColor.name === selectedPrimaryColor()\r\n                                }\"\r\n                            class=\"cursor-pointer w-5 h-5 rounded-full flex shrink-0 items-center justify-center outline-offset-1 shadow\"\r\n                            [style]=\"{\r\n                                    'background-color': primaryColor?.name === 'noir' ? 'var(--text-color)' : primaryColor?.palette?.['500']\r\n                                }\"\r\n                        >\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span class=\"text-sm text-muted-color font-semibold\">Surface</span>\r\n                <div class=\"pt-2 flex gap-2 flex-wrap justify-start\">\r\n                    @for (surface of surfaces; track surface.name) {\r\n                        <button\r\n                            type=\"button\"\r\n                            [title]=\"surface.name\"\r\n                            (click)=\"updateColors($event, 'surface', surface)\"\r\n                            class=\"cursor-pointer w-5 h-5 rounded-full flex shrink-0 items-center justify-center p-0 outline-offset-1\"\r\n                            [ngClass]=\"{\r\n                                    'outline outline-primary': selectedSurfaceColor() ? selectedSurfaceColor() === surface.name : layoutService.layoutConfig().darkTheme ? surface.name === 'zinc' : surface.name === 'slate'\r\n                                }\"\r\n                            [style]=\"{\r\n                                    'background-color': surface?.palette?.['500']\r\n                                }\"\r\n                        ></button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div class=\"flex flex-col gap-2\">\r\n                <span class=\"text-sm text-muted-color font-semibold\">Presets</span>\r\n                <p-selectbutton [options]=\"presets\" [ngModel]=\"selectedPreset()\" (ngModelChange)=\"onPresetChange($event)\" [allowEmpty]=\"false\" size=\"small\" />\r\n            </div>\r\n            <div *ngIf=\"showMenuModeButton()\" class=\"flex flex-col gap-2\">\r\n                <span class=\"text-sm text-muted-color font-semibold\">Menu Mode</span>\r\n                <p-selectbutton [ngModel]=\"menuMode()\" (ngModelChange)=\"onMenuModeChange($event)\" [options]=\"menuModeOptions\" [allowEmpty]=\"false\" size=\"small\" />\r\n            </div>\r\n        </div>\r\n    `,\r\n    host: {\r\n        class: 'hidden absolute top-13 right-0 w-72 p-4 bg-surface-0 dark:bg-surface-900 border border-surface rounded-border origin-top shadow-[0px_3px_5px_rgba(0,0,0,0.02),0px_0px_2px_rgba(0,0,0,0.05),0px_1px_4px_rgba(0,0,0,0.08)]'\r\n    }\r\n})\r\nexport class AppConfigurator {\r\n    router = inject(Router);\r\n\r\n    config: PrimeNG = inject(PrimeNG);\r\n\r\n    layoutService: LayoutService = inject(LayoutService);\r\n\r\n    platformId = inject(PLATFORM_ID);\r\n\r\n    primeng = inject(PrimeNG);\r\n\r\n    presets = Object.keys(presets);\r\n\r\n    showMenuModeButton = signal(!this.router.url.includes('auth'));\r\n\r\n    menuModeOptions = [\r\n        { label: 'Static', value: 'static' },\r\n        { label: 'Overlay', value: 'overlay' }\r\n    ];\r\n\r\n    ngOnInit() {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.onPresetChange(this.layoutService.layoutConfig().preset);\r\n        }\r\n    }\r\n\r\n    surfaces: SurfacesType[] = [\r\n        {\r\n            name: 'slate',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#f8fafc',\r\n                100: '#f1f5f9',\r\n                200: '#e2e8f0',\r\n                300: '#cbd5e1',\r\n                400: '#94a3b8',\r\n                500: '#64748b',\r\n                600: '#475569',\r\n                700: '#334155',\r\n                800: '#1e293b',\r\n                900: '#0f172a',\r\n                950: '#020617'\r\n            }\r\n        },\r\n        {\r\n            name: 'gray',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#f9fafb',\r\n                100: '#f3f4f6',\r\n                200: '#e5e7eb',\r\n                300: '#d1d5db',\r\n                400: '#9ca3af',\r\n                500: '#6b7280',\r\n                600: '#4b5563',\r\n                700: '#374151',\r\n                800: '#1f2937',\r\n                900: '#111827',\r\n                950: '#030712'\r\n            }\r\n        },\r\n        {\r\n            name: 'zinc',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#fafafa',\r\n                100: '#f4f4f5',\r\n                200: '#e4e4e7',\r\n                300: '#d4d4d8',\r\n                400: '#a1a1aa',\r\n                500: '#71717a',\r\n                600: '#52525b',\r\n                700: '#3f3f46',\r\n                800: '#27272a',\r\n                900: '#18181b',\r\n                950: '#09090b'\r\n            }\r\n        },\r\n        {\r\n            name: 'neutral',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#fafafa',\r\n                100: '#f5f5f5',\r\n                200: '#e5e5e5',\r\n                300: '#d4d4d4',\r\n                400: '#a3a3a3',\r\n                500: '#737373',\r\n                600: '#525252',\r\n                700: '#404040',\r\n                800: '#262626',\r\n                900: '#171717',\r\n                950: '#0a0a0a'\r\n            }\r\n        },\r\n        {\r\n            name: 'stone',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#fafaf9',\r\n                100: '#f5f5f4',\r\n                200: '#e7e5e4',\r\n                300: '#d6d3d1',\r\n                400: '#a8a29e',\r\n                500: '#78716c',\r\n                600: '#57534e',\r\n                700: '#44403c',\r\n                800: '#292524',\r\n                900: '#1c1917',\r\n                950: '#0c0a09'\r\n            }\r\n        },\r\n        {\r\n            name: 'soho',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#ececec',\r\n                100: '#dedfdf',\r\n                200: '#c4c4c6',\r\n                300: '#adaeb0',\r\n                400: '#97979b',\r\n                500: '#7f8084',\r\n                600: '#6a6b70',\r\n                700: '#55565b',\r\n                800: '#3f4046',\r\n                900: '#2c2c34',\r\n                950: '#16161d'\r\n            }\r\n        },\r\n        {\r\n            name: 'viva',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#f3f3f3',\r\n                100: '#e7e7e8',\r\n                200: '#cfd0d0',\r\n                300: '#b7b8b9',\r\n                400: '#9fa1a1',\r\n                500: '#87898a',\r\n                600: '#6e7173',\r\n                700: '#565a5b',\r\n                800: '#3e4244',\r\n                900: '#262b2c',\r\n                950: '#0e1315'\r\n            }\r\n        },\r\n        {\r\n            name: 'ocean',\r\n            palette: {\r\n                0: '#ffffff',\r\n                50: '#fbfcfc',\r\n                100: '#F7F9F8',\r\n                200: '#EFF3F2',\r\n                300: '#DADEDD',\r\n                400: '#B1B7B6',\r\n                500: '#828787',\r\n                600: '#5F7274',\r\n                700: '#415B61',\r\n                800: '#29444E',\r\n                900: '#183240',\r\n                950: '#0c1920'\r\n            }\r\n        }\r\n    ];\r\n\r\n    selectedPrimaryColor = computed(() => {\r\n        return this.layoutService.layoutConfig().primary;\r\n    });\r\n\r\n    selectedSurfaceColor = computed(() => this.layoutService.layoutConfig().surface);\r\n\r\n    selectedPreset = computed(() => this.layoutService.layoutConfig().preset);\r\n\r\n    menuMode = computed(() => this.layoutService.layoutConfig().menuMode);\r\n\r\n    primaryColors = computed<SurfacesType[]>(() => {\r\n        const presetPalette = presets[this.layoutService.layoutConfig().preset as KeyOfType<typeof presets>].primitive;\r\n        const colors = ['emerald', 'green', 'lime', 'orange', 'amber', 'yellow', 'teal', 'cyan', 'sky', 'blue', 'indigo', 'violet', 'purple', 'fuchsia', 'pink', 'rose'];\r\n        const palettes: SurfacesType[] = [{ name: 'noir', palette: {} }];\r\n\r\n        colors.forEach((color) => {\r\n            palettes.push({\r\n                name: color,\r\n                palette: presetPalette?.[color as KeyOfType<typeof presetPalette>] as SurfacesType['palette']\r\n            });\r\n        });\r\n\r\n        return palettes;\r\n    });\r\n\r\n    getPresetExt() {\r\n        const color: SurfacesType = this.primaryColors().find((c) => c.name === this.selectedPrimaryColor()) || {};\r\n        const preset = this.layoutService.layoutConfig().preset;\r\n\r\n        if (color.name === 'noir') {\r\n            return {\r\n                semantic: {\r\n                    primary: {\r\n                        50: '{surface.50}',\r\n                        100: '{surface.100}',\r\n                        200: '{surface.200}',\r\n                        300: '{surface.300}',\r\n                        400: '{surface.400}',\r\n                        500: '{surface.500}',\r\n                        600: '{surface.600}',\r\n                        700: '{surface.700}',\r\n                        800: '{surface.800}',\r\n                        900: '{surface.900}',\r\n                        950: '{surface.950}'\r\n                    },\r\n                    colorScheme: {\r\n                        light: {\r\n                            primary: {\r\n                                color: '{primary.950}',\r\n                                contrastColor: '#ffffff',\r\n                                hoverColor: '{primary.800}',\r\n                                activeColor: '{primary.700}'\r\n                            },\r\n                            highlight: {\r\n                                background: '{primary.950}',\r\n                                focusBackground: '{primary.700}',\r\n                                color: '#ffffff',\r\n                                focusColor: '#ffffff'\r\n                            }\r\n                        },\r\n                        dark: {\r\n                            primary: {\r\n                                color: '{primary.50}',\r\n                                contrastColor: '{primary.950}',\r\n                                hoverColor: '{primary.200}',\r\n                                activeColor: '{primary.300}'\r\n                            },\r\n                            highlight: {\r\n                                background: '{primary.50}',\r\n                                focusBackground: '{primary.300}',\r\n                                color: '{primary.950}',\r\n                                focusColor: '{primary.950}'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        } else {\r\n            if (preset === 'Nora') {\r\n                return {\r\n                    semantic: {\r\n                        primary: color.palette,\r\n                        colorScheme: {\r\n                            light: {\r\n                                primary: {\r\n                                    color: '{primary.600}',\r\n                                    contrastColor: '#ffffff',\r\n                                    hoverColor: '{primary.700}',\r\n                                    activeColor: '{primary.800}'\r\n                                },\r\n                                highlight: {\r\n                                    background: '{primary.600}',\r\n                                    focusBackground: '{primary.700}',\r\n                                    color: '#ffffff',\r\n                                    focusColor: '#ffffff'\r\n                                }\r\n                            },\r\n                            dark: {\r\n                                primary: {\r\n                                    color: '{primary.500}',\r\n                                    contrastColor: '{surface.900}',\r\n                                    hoverColor: '{primary.400}',\r\n                                    activeColor: '{primary.300}'\r\n                                },\r\n                                highlight: {\r\n                                    background: '{primary.500}',\r\n                                    focusBackground: '{primary.400}',\r\n                                    color: '{surface.900}',\r\n                                    focusColor: '{surface.900}'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            } else {\r\n                return {\r\n                    semantic: {\r\n                        primary: color.palette,\r\n                        colorScheme: {\r\n                            light: {\r\n                                primary: {\r\n                                    color: '{primary.500}',\r\n                                    contrastColor: '#ffffff',\r\n                                    hoverColor: '{primary.600}',\r\n                                    activeColor: '{primary.700}'\r\n                                },\r\n                                highlight: {\r\n                                    background: '{primary.50}',\r\n                                    focusBackground: '{primary.100}',\r\n                                    color: '{primary.700}',\r\n                                    focusColor: '{primary.800}'\r\n                                }\r\n                            },\r\n                            dark: {\r\n                                primary: {\r\n                                    color: '{primary.400}',\r\n                                    contrastColor: '{surface.900}',\r\n                                    hoverColor: '{primary.300}',\r\n                                    activeColor: '{primary.200}'\r\n                                },\r\n                                highlight: {\r\n                                    background: 'color-mix(in srgb, {primary.400}, transparent 84%)',\r\n                                    focusBackground: 'color-mix(in srgb, {primary.400}, transparent 76%)',\r\n                                    color: 'rgba(255,255,255,.87)',\r\n                                    focusColor: 'rgba(255,255,255,.87)'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    updateColors(event: any, type: string, color: any) {\r\n        if (type === 'primary') {\r\n            this.layoutService.layoutConfig.update((state) => ({ ...state, primary: color.name }));\r\n        } else if (type === 'surface') {\r\n            this.layoutService.layoutConfig.update((state) => ({ ...state, surface: color.name }));\r\n        }\r\n        this.applyTheme(type, color);\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    applyTheme(type: string, color: any) {\r\n        if (type === 'primary') {\r\n            updatePreset(this.getPresetExt());\r\n        } else if (type === 'surface') {\r\n            updateSurfacePalette(color.palette);\r\n        }\r\n    }\r\n\r\n    onPresetChange(event: any) {\r\n        this.layoutService.layoutConfig.update((state) => ({ ...state, preset: event }));\r\n        const preset = presets[event as KeyOfType<typeof presets>];\r\n        const surfacePalette = this.surfaces.find((s) => s.name === this.selectedSurfaceColor())?.palette;\r\n        $t().preset(preset).preset(this.getPresetExt()).surfacePalette(surfacePalette).use({ useDefaultOptions: true });\r\n    }\r\n\r\n    onMenuModeChange(event: string) {\r\n        this.layoutService.layoutConfig.update((prev) => ({ ...prev, menuMode: event }));\r\n    }\r\n}\r\n","import {Component, computed, inject, input} from '@angular/core';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { StyleClassModule } from 'primeng/styleclass';\r\nimport { AppConfigurator } from './app.configurator';\r\nimport { LayoutService } from '../service/layout.service';\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-floating-configurator',\r\n    imports: [CommonModule, ButtonModule, StyleClassModule, AppConfigurator],\r\n    template: `\r\n        <div class=\"flex gap-4 top-8 right-8\" [ngClass]=\"{'fixed':float()}\">\r\n            <p-button type=\"button\" (onClick)=\"toggleDarkMode()\" [rounded]=\"true\" [icon]=\"isDarkTheme() ? 'pi pi-moon' : 'pi pi-sun'\" severity=\"secondary\" />\r\n            <div class=\"relative\">\r\n                <p-button icon=\"pi pi-palette\" pStyleClass=\"@next\" enterFromClass=\"hidden\" enterActiveClass=\"animate-scalein\" leaveToClass=\"hidden\" leaveActiveClass=\"animate-fadeout\" [hideOnOutsideClick]=\"true\" type=\"button\" rounded />\r\n                <app-configurator />\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class AppFloatingConfigurator {\r\n    LayoutService = inject(LayoutService);\r\n\r\n    float = input<boolean>(true);\r\n\r\n    isDarkTheme = computed(() => this.LayoutService.layoutConfig().darkTheme);\r\n\r\n    toggleDarkMode() {\r\n        this.LayoutService.layoutConfig.update((state) => ({ ...state, darkTheme: !state.darkTheme }));\r\n    }\r\n\r\n}\r\n"],"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","names":["Qr","c","a","s","_c0"],"x_google_ignoreList":[2]}